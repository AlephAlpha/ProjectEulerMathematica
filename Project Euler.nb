(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1502962,      34514]
NotebookOptionsPosition[   1431162,      32333]
NotebookOutlinePosition[   1442455,      32549]
CellTagsIndexPosition[   1442412,      32546]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Project Euler", "Title",
 CellChangeTimes->{{3.64050176447165*^9, 3.640501767153098*^9}}],

Cell[CellGroupData[{

Cell[BoxData["$Version"], "Input",
 CellChangeTimes->{{3.654838817545576*^9, 3.654838819462023*^9}}],

Cell[BoxData["\<\"10.1.0  for Linux x86 (32-bit) (March 24, 2015)\"\>"], \
"Output",
 CellChangeTimes->{3.654838820159708*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tools", "Section",
 CellChangeTimes->{{3.640501819406164*^9, 3.640501820669622*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Remove", "@", "\"\<`*\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IncreaseWhile", "[", 
     RowBox[{"f_", ",", 
      RowBox[{"n0_:", "1"}], ",", 
      RowBox[{"d_:", "1"}]}], "]"}], ":=", 
    RowBox[{"NestWhile", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "+", "d"}], "&"}], ",", "n0", ",", "f"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Mathematica", " ", "10.3", " ", "already", " ", "has", " ", "this", " ", 
     "function"}], ",", " ", 
    RowBox[{"but", " ", 
     RowBox[{"I", "'"}], "m", " ", "using", " ", 
     RowBox[{"10.1", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"PalindromeQ", ",", "Listable"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PalindromeQ", "[", "n_Integer", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "\[Equal]", 
       RowBox[{"Reverse", "@", "#"}]}], "&"}], "@", 
     RowBox[{"IntegerDigits", "@", "n"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"Radical", ",", "Listable"}], "]"}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Radical", "[", "n_Integer", "]"}], ":=", 
    RowBox[{"Times", "@@", 
     RowBox[{"First", "/@", 
      RowBox[{"FactorInteger", "@", "n"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrimeRange", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"Prime", "@", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"PrimePi", "[", 
        RowBox[{"i", "-", "1"}], "]"}], "+", "1"}], ",", 
      RowBox[{"PrimePi", "@", "j"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrimeRange", "[", "j_", "]"}], ":=", 
   RowBox[{"Prime", "@", 
    RowBox[{"Range", "@", 
     RowBox[{"PrimePi", "@", "j"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.640658808921833*^9, 3.640658914621094*^9}, 
   3.640659056220725*^9, {3.640691131967743*^9, 3.640691136155167*^9}, {
   3.64069120448114*^9, 3.640691205475744*^9}, {3.640691471598835*^9, 
   3.640691472108827*^9}, {3.640936610006476*^9, 3.640936611392284*^9}, {
   3.641344933267302*^9, 3.641345049306937*^9}, {3.641345103174872*^9, 
   3.641345148493203*^9}, {3.641345192238853*^9, 3.641345197871971*^9}, {
   3.641345283814288*^9, 3.641345332487861*^9}, {3.642561529720972*^9, 
   3.642561692904761*^9}, {3.642562244178196*^9, 3.642562249828169*^9}, {
   3.642569454216351*^9, 3.642569454302023*^9}, {3.651995751261743*^9, 
   3.651995755810211*^9}, {3.654838852698226*^9, 3.654838881788537*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problems", "Section",
 CellChangeTimes->{{3.640501811032142*^9, 3.640501815157882*^9}, {
  3.640508926594277*^9, 3.640508928816061*^9}}],

Cell[CellGroupData[{

Cell["Problem 1 - 25", "Subsection",
 CellChangeTimes->{{3.640509015355191*^9, 3.640509022245683*^9}}],

Cell[CellGroupData[{

Cell["Problem 1 - Multiples of 3 and 5", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
  3.640511151565758*^9, 3.640511182830997*^9}}],

Cell["\<\
If we list all the natural numbers below 10 that are multiples of 3 or 5, we \
get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.\
\>", "Text",
 CellChangeTimes->{{3.640504739828241*^9, 3.640504743114105*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"Union", "@@", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "999", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.640501986040685*^9, 3.640502044338138*^9}, {
  3.640502180758699*^9, 3.640502189666375*^9}}],

Cell[BoxData["233168"], "Output",
 CellChangeTimes->{{3.640502007517245*^9, 3.640502045341263*^9}, {
  3.640502185507801*^9, 3.640502190280703*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 2 - Even Fibonacci numbers", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, 
   3.640503096081485*^9, {3.640513613184491*^9, 3.640513614114571*^9}}],

Cell["\<\
Each new term in the Fibonacci sequence is generated by adding the previous \
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed \
four million, find the sum of the even-valued terms.\
\>", "Text",
 CellChangeTimes->{3.640504766409697*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"Fibonacci", "@", "n"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "3", ",", 
     RowBox[{
      RowBox[{"InverseFunction", "[", "Fibonacci", "]"}], "[", "4*^6", "]"}], 
     ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.640502799732521*^9, 3.640502812370521*^9}, {
  3.640510393525241*^9, 3.640510394537275*^9}}],

Cell[BoxData["4613732"], "Output",
 CellChangeTimes->{3.640502814087394*^9, 3.640510395517104*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 3 - Largest prime factor", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
  3.640503096081485*^9, 3.640503101078712*^9}, {3.64051362527632*^9, 
  3.640513629057116*^9}}],

Cell["\<\
The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ?\
\>", "Text",
 CellChangeTimes->{3.640504786309466*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "@", 
  RowBox[{"FactorInteger", "@", "600851475143"}]}]], "Input",
 CellChangeTimes->{{3.640503112660074*^9, 3.640503121763881*^9}, {
  3.640503153521894*^9, 3.640503178929638*^9}, {3.640503339140055*^9, 
  3.640503351846115*^9}, {3.64050350487207*^9, 3.640503508470424*^9}}],

Cell[BoxData["6857"], "Output",
 CellChangeTimes->{{3.640503164402564*^9, 3.64050317965614*^9}, 
   3.640503352375248*^9, 3.640503509834203*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 4 - Largest palindrome product", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.64050357881216*^9, 3.640503724688395*^9, {
   3.640513641056362*^9, 3.640513641968284*^9}}],

Cell["\<\
A palindromic number reads the same both ways. The largest palindrome made \
from the product of two 2-digit numbers is 9009 = 91 \[Times] 99.

Find the largest palindrome made from the product of two 3-digit numbers.\
\>", "Text",
 CellChangeTimes->{{3.64050483162464*^9, 3.640504835988309*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "@", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Catenate", "@", 
     RowBox[{"Array", "[", 
      RowBox[{"Times", ",", 
       RowBox[{"{", 
        RowBox[{"999", ",", "999"}], "}"}]}], "]"}]}], ",", "PalindromeQ"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.640691496304359*^9}],

Cell[BoxData["906609"], "Output",
 CellChangeTimes->{3.640691500305422*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 5 - Smallest multiple", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.64050357881216*^9, {3.640513653461325*^9, 
   3.640513654277188*^9}}],

Cell["\<\
2520 is the smallest number that can be divided by each of the numbers from 1 \
to 10 without any remainder.

What is the smallest positive number that is evenly divisible by all of the \
numbers from 1 to 20?\
\>", "Text",
 CellChangeTimes->{{3.640504861020675*^9, 3.640504864576027*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LCM", "@@", 
  RowBox[{"Range", "@", "20"}]}]], "Input",
 CellChangeTimes->{{3.640503444777223*^9, 3.640503481896222*^9}, {
  3.640503588466921*^9, 3.64050359312605*^9}}],

Cell[BoxData["232792560"], "Output",
 CellChangeTimes->{{3.64050347424701*^9, 3.640503482575375*^9}, 
   3.640503594491166*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 6 - Sum square difference", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
  3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
  3.640503264624484*^9}, {3.640513680324967*^9, 3.640513681211337*^9}}],

Cell[TextData[{
 "The sum of the squares of the first ten natural numbers is,\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["1", "2"], "+", 
       SuperscriptBox["2", "2"], "+"}], "..."}], "+", 
     SuperscriptBox["10", "2"]}], "=", "385"}], TraditionalForm]]],
 " \n\nThe square of the sum of the first ten natural numbers is,\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "+", "2", "+"}], "..."}], "+", "10"}], ")"}], "2"], " ", 
    "=", 
    RowBox[{
     SuperscriptBox["55", "2"], "=", "3025"}]}], TraditionalForm]]],
 "\n\nHence the difference between the sum of the squares of the first ten \
natural numbers and the square of the sum is 3025 \[Minus] 385 = 2640.\n\n\
Find the difference between the sum of the squares of the first one hundred \
natural numbers and the square of the sum."
}], "Text",
 CellChangeTimes->{{3.640504895215034*^9, 3.640504982404271*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Tr", "[", "#", "]"}], "^", "2"}], "-", 
    RowBox[{"Tr", "[", 
     RowBox[{"#", "^", "2"}], "]"}]}], "&"}], "@", 
  RowBox[{"Range", "@", "100"}]}]], "Input",
 CellChangeTimes->{{3.640503444777223*^9, 3.640503481896222*^9}}],

Cell[BoxData["25164150"], "Output",
 CellChangeTimes->{{3.64050347424701*^9, 3.640503482575375*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 7 - 10001st prime", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, {3.640513715352976*^9, 
   3.640513716061435*^9}}],

Cell["\<\
By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see \
that the 6th prime is 13.

What is the 10 001st prime number?\
\>", "Text",
 CellChangeTimes->{{3.640505023763176*^9, 3.640505026670057*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Prime", "@", "10001"}]], "Input",
 CellChangeTimes->{{3.640504040696741*^9, 3.640504044479168*^9}}],

Cell[BoxData["104743"], "Output",
 CellChangeTimes->{3.64050404509082*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 8 - Largest product in a series", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, {
   3.640513747413188*^9, 3.640513748456158*^9}}],

Cell["\<\
The four adjacent digits in the 1000-digit number that have the greatest \
product are 9 \[Times] 9 \[Times] 8 \[Times] 9 = 5832.

73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450

Find the thirteen adjacent digits in the 1000-digit number that have the \
greatest product. What is the value of this product?\
\>", "Text",
 CellChangeTimes->{{3.64050505443811*^9, 3.640505062029184*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "digits", "=", 
   "\"\<73167176531330624919225119674426574742355349194934\n\
96983520312774506326239578318016984801869478851843\n\
85861560789112949495459501737958331952853208805511\n\
12540698747158523863050715693290963295227443043557\n\
66896648950445244523161731856403098711121722383113\n\
62229893423380308135336276614282806444486645238749\n\
30358907296290491560440772390713810515859307960866\n\
70172427121883998797908792274921901699720888093776\n\
65727333001053367881220235421809751254540594752243\n\
52584907711670556013604839586446706324415722155397\n\
53697817977846174064955149290862569321978468622482\n\
83972241375657056057490261407972968652414535100474\n\
82166370484403199890008895243450658541227588666881\n\
16427171479924442928230863465674813919123162824586\n\
17866458359124566529476545682848912883142607690042\n\
24219022671055626321111109370544217506941658960408\n\
07198403850962455444362981230987879927244284909188\n\
84580156166097919133875499200524063689912560717606\n\
05886116467109405077541002256983155200055935729725\n\
71636269561882670428252483600823257530420752963450\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.640504117366177*^9, 3.640504147981754*^9}, 
   3.640505074966968*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"Times", "@@@", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"FromDigits", "/@", 
      RowBox[{"Characters", "@", 
       RowBox[{"StringDelete", "[", 
        RowBox[{"digits", ",", "\"\<\\n\>\""}], "]"}]}]}], ",", "13", ",", 
     "1"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.64050414963366*^9, 3.640504286418672*^9}, {
   3.640504357078387*^9, 3.640504378009751*^9}, {3.640504408689072*^9, 
   3.640504487256849*^9}, 3.640505073596783*^9}],

Cell[BoxData["23514624000"], "Output",
 CellChangeTimes->{
  3.640504194182505*^9, {3.640504261887716*^9, 3.640504287948776*^9}, {
   3.640504412666703*^9, 3.640504423010647*^9}, {3.640504469866347*^9, 
   3.640504487802773*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 9 - Special Pythagorean triplet", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640513759362969*^9, 3.640513760191349*^9}}],

Cell[TextData[{
 "A Pythagorean triplet is a set of three natural numbers, a < b < c, for \
which,\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["a", "2"], "+", 
     SuperscriptBox["b", "2"]}], "=", 
    SuperscriptBox["c", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nFor example, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["3", "2"], "+", 
     SuperscriptBox["4", "2"]}], "=", 
    RowBox[{
     RowBox[{"9", "+", "16"}], "=", 
     RowBox[{"25", "=", 
      SuperscriptBox["5", "2"]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nThere exists exactly one Pythagorean triplet for which a + b + c = \
1000.\nFind the product abc."
}], "Text",
 CellChangeTimes->{{3.640505105288449*^9, 3.640505144873044*^9}, {
  3.640505180230661*^9, 3.640505226550531*^9}, {3.640505284329098*^9, 
  3.640505285940664*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", "b", " ", "c"}], "/.", 
  RowBox[{"First", "@", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"a", "^", "2"}], "+", 
         RowBox[{"b", "^", "2"}]}], "\[Equal]", 
        RowBox[{"c", "^", "2"}]}], ",", 
       RowBox[{
        RowBox[{"a", "+", "b", "+", "c"}], "\[Equal]", "1000"}], ",", 
       RowBox[{"c", ">", "b", ">", "a", ">", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "Integers"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.640505298568759*^9, 3.640505387468936*^9}}],

Cell[BoxData["31875000"], "Output",
 CellChangeTimes->{{3.640505324953107*^9, 3.640505387866081*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 10 - Summation of primes", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, {
   3.640513772093501*^9, 3.640513772894129*^9}}],

Cell["\<\
The sum of the primes below 10 is 2 + 3 + 5 + 7 = 17.

Find the sum of all the primes below two million.\
\>", "Text",
 CellChangeTimes->{3.640505481318226*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{"PrimeRange", "@", "2*^6"}]}]], "Input",
 CellChangeTimes->{{3.642561723909199*^9, 3.642561731792438*^9}}],

Cell[BoxData["142913828922"], "Output",
 CellChangeTimes->{3.642561732427138*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 11 - Largest product in a grid", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, {3.640513785227593*^9, 3.6405137859773*^9}}],

Cell[TextData[{
 "In the 20\[Times]20 grid below, four numbers along a diagonal line have \
been marked in red.\n\n08 02 22 97 38 15 00 40 00 75 04 05 07 78 52 12 50 77 \
91 08\n49 49 99 40 17 81 18 57 60 87 17 40 98 43 69 48 04 56 62 00\n81 49 31 \
73 55 79 14 29 93 71 40 67 53 88 30 03 49 13 36 65\n52 70 95 23 04 60 11 42 \
69 24 68 56 01 32 56 71 37 02 36 91\n22 31 16 71 51 67 63 89 41 92 36 54 22 \
40 40 28 66 33 13 80\n24 47 32 60 99 03 45 02 44 75 33 53 78 36 84 20 35 17 \
12 50\n32 98 81 28 64 23 67 10 ",
 StyleBox["26",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " 38 40 67 59 54 70 66 18 38 64 70\n67 26 20 68 02 62 12 20 95 ",
 StyleBox["63",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " 94 39 63 08 40 91 66 49 94 21\n24 55 58 05 66 73 99 26 97 17 ",
 StyleBox["78",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " 78 96 83 14 88 34 89 63 72\n21 36 23 09 75 00 76 44 20 45 35 ",
 StyleBox["14",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " 00 61 33 97 34 31 33 95\n78 17 53 28 22 75 31 67 15 94 03 80 04 62 16 14 \
09 53 56 92\n16 39 05 42 96 35 31 47 55 58 88 24 00 17 54 24 36 29 85 57\n86 \
56 00 48 35 71 89 07 05 44 44 37 44 60 21 58 51 54 17 58\n19 80 81 68 05 94 \
47 69 28 73 92 13 86 52 17 77 04 89 55 40\n04 52 08 83 97 35 99 16 07 97 57 \
32 16 26 26 79 33 27 98 66\n88 36 68 87 57 62 20 72 03 46 33 67 46 55 12 32 \
63 93 53 69\n04 42 16 73 38 25 39 11 24 94 72 18 08 46 29 32 40 62 76 36\n20 \
69 36 41 72 30 23 88 34 62 99 69 82 67 59 85 74 04 36 16\n20 73 35 29 78 31 \
90 01 74 31 49 71 48 86 81 16 23 57 05 54\n01 70 54 71 83 51 54 69 16 92 33 \
48 61 43 52 01 89 19 67 48\n\nThe product of these numbers is 26 \[Times] 63 \
\[Times] 78 \[Times] 14 = 1788696.\n\nWhat is the greatest product of four \
adjacent numbers in the same direction (up, down, left, right, or diagonally) \
in the 20\[Times]20 grid?"
}], "Text",
 CellChangeTimes->{{3.64050600836836*^9, 3.640506014150756*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"grid", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\< 08 02 22 97 38 15 00 40 00 75 04 05 07 78 52 12 50 77 91 08\n49 49 \
99 40 17 81 18 57 60 87 17 40 98 43 69 48 04 56 62 00\n81 49 31 73 55 79 14 \
29 93 71 40 67 53 88 30 03 49 13 36 65\n52 70 95 23 04 60 11 42 69 24 68 56 \
01 32 56 71 37 02 36 91\n22 31 16 71 51 67 63 89 41 92 36 54 22 40 40 28 66 \
33 13 80\n24 47 32 60 99 03 45 02 44 75 33 53 78 36 84 20 35 17 12 50\n32 98 \
81 28 64 23 67 10 26 38 40 67 59 54 70 66 18 38 64 70\n67 26 20 68 02 62 12 \
20 95 63 94 39 63 08 40 91 66 49 94 21\n24 55 58 05 66 73 99 26 97 17 78 78 \
96 83 14 88 34 89 63 72\n21 36 23 09 75 00 76 44 20 45 35 14 00 61 33 97 34 \
31 33 95\n78 17 53 28 22 75 31 67 15 94 03 80 04 62 16 14 09 53 56 92\n16 39 \
05 42 96 35 31 47 55 58 88 24 00 17 54 24 36 29 85 57\n86 56 00 48 35 71 89 \
07 05 44 44 37 44 60 21 58 51 54 17 58\n19 80 81 68 05 94 47 69 28 73 92 13 \
86 52 17 77 04 89 55 40\n04 52 08 83 97 35 99 16 07 97 57 32 16 26 26 79 33 \
27 98 66\n88 36 68 87 57 62 20 72 03 46 33 67 46 55 12 32 63 93 53 69\n04 42 \
16 73 38 25 39 11 24 94 72 18 08 46 29 32 40 62 76 36\n20 69 36 41 72 30 23 \
88 34 62 99 69 82 67 59 85 74 04 36 16\n20 73 35 29 78 31 90 01 74 31 49 71 \
48 86 81 16 23 57 05 54\n01 70 54 71 83 51 54 69 16 92 33 48 61 43 52 01 89 \
19 67 48\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.640507154172092*^9, 3.64050719630555*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@@", 
     RowBox[{"Partition", "[", 
      RowBox[{"#", ",", "4", ",", "1"}], "]"}]}], "&"}], "/@", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Diagonal", "[", 
            RowBox[{"#", ",", "n"}], "]"}], "&"}], "/@", 
          RowBox[{"{", 
           RowBox[{"grid", ",", 
            RowBox[{"Reverse", "@", "grid"}]}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"-", "20"}], ",", "20"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"grid", ",", 
         RowBox[{"Transpose", "@", "grid"}]}], "}"}]}], "}"}], ",", "2"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.64050742710766*^9, 3.640507454735719*^9}, {
  3.640507486045284*^9, 3.640507505706435*^9}, {3.640507642405237*^9, 
  3.640507680566093*^9}, {3.640507820033257*^9, 3.640507998897665*^9}, {
  3.640508039305522*^9, 3.640508057217848*^9}}],

Cell[BoxData["70600674"], "Output",
 CellChangeTimes->{{3.640507443254157*^9, 3.640507450800963*^9}, 
   3.640507506119171*^9, 3.640507647611614*^9, {3.640507851692282*^9, 
   3.640507963803137*^9}, 3.640507999235301*^9, {3.6405080409437*^9, 
   3.640508058081347*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 12 - Highly divisible triangular number", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640509191837534*^9, {3.640513795828786*^9, 
   3.640513796719295*^9}}],

Cell[TextData[{
 "The sequence of triangle numbers is generated by adding the natural \
numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. \
The first ten terms would be:\n\n1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...\n\n\
Let us list the factors of the first seven triangle numbers:\n\n     ",
 StyleBox["1",
  FontWeight->"Bold"],
 ": 1\n     ",
 StyleBox["3",
  FontWeight->"Bold"],
 ": 1,3\n     ",
 StyleBox["6",
  FontWeight->"Bold"],
 ": 1,2,3,6\n    ",
 StyleBox["10",
  FontWeight->"Bold"],
 ": 1,2,5,10\n    ",
 StyleBox["15",
  FontWeight->"Bold"],
 ": 1,3,5,15\n    ",
 StyleBox["21",
  FontWeight->"Bold"],
 ": 1,3,7,21\n    ",
 StyleBox["28",
  FontWeight->"Bold"],
 ": 1,2,4,7,14,28\n\nWe can see that 28 is the first triangle number to have \
over five divisors.\n\nWhat is the value of the first triangle number to have \
over five hundred divisors?"
}], "Text",
 CellChangeTimes->{{3.640509210058761*^9, 3.640509237241228*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], "//.", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"i_", "/;", 
       RowBox[{
        RowBox[{"DivisorSigma", "[", 
         RowBox[{"0", ",", "i"}], "]"}], "\[LessEqual]", "500"}]}], ",", 
      "j_"}], "}"}], "\[RuleDelayed]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"i", "+", "j"}], ",", 
      RowBox[{"j", "+", "1"}]}], "}"}]}]}], "//", "First"}]], "Input",
 CellChangeTimes->{{3.6405095120177*^9, 3.640509571736954*^9}, {
  3.640509624020799*^9, 3.640509624905561*^9}}],

Cell[BoxData["76576500"], "Output",
 CellChangeTimes->{{3.640509545447701*^9, 3.640509572460966*^9}, 
   3.640509626600924*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 13 - Large sum", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, 3.640508341327579*^9, {
   3.640513805311207*^9, 3.640513806226365*^9}}],

Cell["\<\
Work out the first ten digits of the sum of the following one-hundred \
50-digit numbers.
37107287533902102798797998220837590246510135740250
46376937677490009712648124896970078050417018260538
74324986199524741059474233309513058123726617309629
91942213363574161572522430563301811072406154908250
23067588207539346171171980310421047513778063246676
89261670696623633820136378418383684178734361726757
28112879812849979408065481931592621691275889832738
44274228917432520321923589422876796487670272189318
47451445736001306439091167216856844588711603153276
70386486105843025439939619828917593665686757934951
62176457141856560629502157223196586755079324193331
64906352462741904929101432445813822663347944758178
92575867718337217661963751590579239728245598838407
58203565325359399008402633568948830189458628227828
80181199384826282014278194139940567587151170094390
35398664372827112653829987240784473053190104293586
86515506006295864861532075273371959191420517255829
71693888707715466499115593487603532921714970056938
54370070576826684624621495650076471787294438377604
53282654108756828443191190634694037855217779295145
36123272525000296071075082563815656710885258350721
45876576172410976447339110607218265236877223636045
17423706905851860660448207621209813287860733969412
81142660418086830619328460811191061556940512689692
51934325451728388641918047049293215058642563049483
62467221648435076201727918039944693004732956340691
15732444386908125794514089057706229429197107928209
55037687525678773091862540744969844508330393682126
18336384825330154686196124348767681297534375946515
80386287592878490201521685554828717201219257766954
78182833757993103614740356856449095527097864797581
16726320100436897842553539920931837441497806860984
48403098129077791799088218795327364475675590848030
87086987551392711854517078544161852424320693150332
59959406895756536782107074926966537676326235447210
69793950679652694742597709739166693763042633987085
41052684708299085211399427365734116182760315001271
65378607361501080857009149939512557028198746004375
35829035317434717326932123578154982629742552737307
94953759765105305946966067683156574377167401875275
88902802571733229619176668713819931811048770190271
25267680276078003013678680992525463401061632866526
36270218540497705585629946580636237993140746255962
24074486908231174977792365466257246923322810917141
91430288197103288597806669760892938638285025333403
34413065578016127815921815005561868836468420090470
23053081172816430487623791969842487255036638784583
11487696932154902810424020138335124462181441773470
63783299490636259666498587618221225225512486764533
67720186971698544312419572409913959008952310058822
95548255300263520781532296796249481641953868218774
76085327132285723110424803456124867697064507995236
37774242535411291684276865538926205024910326572967
23701913275725675285653248258265463092207058596522
29798860272258331913126375147341994889534765745501
18495701454879288984856827726077713721403798879715
38298203783031473527721580348144513491373226651381
34829543829199918180278916522431027392251122869539
40957953066405232632538044100059654939159879593635
29746152185502371307642255121183693803580388584903
41698116222072977186158236678424689157993532961922
62467957194401269043877107275048102390895523597457
23189706772547915061505504953922979530901129967519
86188088225875314529584099251203829009407770775672
11306739708304724483816533873502340845647058077308
82959174767140363198008187129011875491310547126581
97623331044818386269515456334926366572897563400500
42846280183517070527831839425882145521227251250327
55121603546981200581762165212827652751691296897789
32238195734329339946437501907836945765883352399886
75506164965184775180738168837861091527357929701337
62177842752192623401942399639168044983993173312731
32924185707147349566916674687634660915035914677504
99518671430235219628894890102423325116913619626622
73267460800591547471830798392868535206946944540724
76841822524674417161514036427982273348055556214818
97142617910342598647204516893989422179826088076852
87783646182799346313767754307809363333018982642090
10848802521674670883215120185883543223812876952786
71329612474782464538636993009049310363619763878039
62184073572399794223406235393808339651327408011116
66627891981488087797941876876144230030984490851411
60661826293682836764744779239180335110989069790714
85786944089552990653640447425576083659976645795096
66024396409905389607120198219976047599490197230297
64913982680032973156037120041377903785566085089252
16730939319872750275468906903707539413042652315011
94809377245048795150954100921645863754710598436791
78639167021187492431995700641917969777599028300699
15368713711936614952811305876380278410754449733078
40789923115535562561142322423255033685442488917353
44889911501440648020369068063960672322193204149535
41503128880339536053299340368006977710650566631954
81234880673210146739058568557934581403627822703280
82616570773948327592232845941706525094512325230608
22918802058777319719839450180888072429661980811197
77158542502016545090413245809786882778948721859617
72107838435069186155435662884062257473692284509516
20849603980134001723930671666823555245252804609722
53503534226472524250874054075591789781264330331690\
\>", "Text",
 CellChangeTimes->{{3.640508384273597*^9, 3.640508393400343*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"numbers", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<37107287533902102798797998220837590246510135740250\n\
46376937677490009712648124896970078050417018260538\n\
74324986199524741059474233309513058123726617309629\n\
91942213363574161572522430563301811072406154908250\n\
23067588207539346171171980310421047513778063246676\n\
89261670696623633820136378418383684178734361726757\n\
28112879812849979408065481931592621691275889832738\n\
44274228917432520321923589422876796487670272189318\n\
47451445736001306439091167216856844588711603153276\n\
70386486105843025439939619828917593665686757934951\n\
62176457141856560629502157223196586755079324193331\n\
64906352462741904929101432445813822663347944758178\n\
92575867718337217661963751590579239728245598838407\n\
58203565325359399008402633568948830189458628227828\n\
80181199384826282014278194139940567587151170094390\n\
35398664372827112653829987240784473053190104293586\n\
86515506006295864861532075273371959191420517255829\n\
71693888707715466499115593487603532921714970056938\n\
54370070576826684624621495650076471787294438377604\n\
53282654108756828443191190634694037855217779295145\n\
36123272525000296071075082563815656710885258350721\n\
45876576172410976447339110607218265236877223636045\n\
17423706905851860660448207621209813287860733969412\n\
81142660418086830619328460811191061556940512689692\n\
51934325451728388641918047049293215058642563049483\n\
62467221648435076201727918039944693004732956340691\n\
15732444386908125794514089057706229429197107928209\n\
55037687525678773091862540744969844508330393682126\n\
18336384825330154686196124348767681297534375946515\n\
80386287592878490201521685554828717201219257766954\n\
78182833757993103614740356856449095527097864797581\n\
16726320100436897842553539920931837441497806860984\n\
48403098129077791799088218795327364475675590848030\n\
87086987551392711854517078544161852424320693150332\n\
59959406895756536782107074926966537676326235447210\n\
69793950679652694742597709739166693763042633987085\n\
41052684708299085211399427365734116182760315001271\n\
65378607361501080857009149939512557028198746004375\n\
35829035317434717326932123578154982629742552737307\n\
94953759765105305946966067683156574377167401875275\n\
88902802571733229619176668713819931811048770190271\n\
25267680276078003013678680992525463401061632866526\n\
36270218540497705585629946580636237993140746255962\n\
24074486908231174977792365466257246923322810917141\n\
91430288197103288597806669760892938638285025333403\n\
34413065578016127815921815005561868836468420090470\n\
23053081172816430487623791969842487255036638784583\n\
11487696932154902810424020138335124462181441773470\n\
63783299490636259666498587618221225225512486764533\n\
67720186971698544312419572409913959008952310058822\n\
95548255300263520781532296796249481641953868218774\n\
76085327132285723110424803456124867697064507995236\n\
37774242535411291684276865538926205024910326572967\n\
23701913275725675285653248258265463092207058596522\n\
29798860272258331913126375147341994889534765745501\n\
18495701454879288984856827726077713721403798879715\n\
38298203783031473527721580348144513491373226651381\n\
34829543829199918180278916522431027392251122869539\n\
40957953066405232632538044100059654939159879593635\n\
29746152185502371307642255121183693803580388584903\n\
41698116222072977186158236678424689157993532961922\n\
62467957194401269043877107275048102390895523597457\n\
23189706772547915061505504953922979530901129967519\n\
86188088225875314529584099251203829009407770775672\n\
11306739708304724483816533873502340845647058077308\n\
82959174767140363198008187129011875491310547126581\n\
97623331044818386269515456334926366572897563400500\n\
42846280183517070527831839425882145521227251250327\n\
55121603546981200581762165212827652751691296897789\n\
32238195734329339946437501907836945765883352399886\n\
75506164965184775180738168837861091527357929701337\n\
62177842752192623401942399639168044983993173312731\n\
32924185707147349566916674687634660915035914677504\n\
99518671430235219628894890102423325116913619626622\n\
73267460800591547471830798392868535206946944540724\n\
76841822524674417161514036427982273348055556214818\n\
97142617910342598647204516893989422179826088076852\n\
87783646182799346313767754307809363333018982642090\n\
10848802521674670883215120185883543223812876952786\n\
71329612474782464538636993009049310363619763878039\n\
62184073572399794223406235393808339651327408011116\n\
66627891981488087797941876876144230030984490851411\n\
60661826293682836764744779239180335110989069790714\n\
85786944089552990653640447425576083659976645795096\n\
66024396409905389607120198219976047599490197230297\n\
64913982680032973156037120041377903785566085089252\n\
16730939319872750275468906903707539413042652315011\n\
94809377245048795150954100921645863754710598436791\n\
78639167021187492431995700641917969777599028300699\n\
15368713711936614952811305876380278410754449733078\n\
40789923115535562561142322423255033685442488917353\n\
44889911501440648020369068063960672322193204149535\n\
41503128880339536053299340368006977710650566631954\n\
81234880673210146739058568557934581403627822703280\n\
82616570773948327592232845941706525094512325230608\n\
22918802058777319719839450180888072429661980811197\n\
77158542502016545090413245809786882778948721859617\n\
72107838435069186155435662884062257473692284509516\n\
20849603980134001723930671666823555245252804609722\n\
53503534226472524250874054075591789781264330331690\>\"", ",", 
     "\"\<List\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.640508407368342*^9, 3.640508445086389*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "@", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"IntegerDigits", "@", 
     RowBox[{"Total", "@", "numbers"}]}], ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.64050842381718*^9, 3.640508492336167*^9}}],

Cell[BoxData["5537376230"], "Output",
 CellChangeTimes->{{3.640508451941371*^9, 3.640508493589593*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 14 - Longest Collatz sequence", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, 3.640508341327579*^9, {
   3.640508539735953*^9, 3.640508540958408*^9}, {3.640513815614327*^9, 
   3.640513816469566*^9}}],

Cell[TextData[{
 "The following iterative sequence is defined for the set of positive \
integers:\n\nn \[RightArrow] n/2 (n is even)\nn \[RightArrow] 3n + 1 (n is \
odd)\n\nUsing the rule above and starting with 13, we generate the following \
sequence:\n13 \[RightArrow] 40 \[RightArrow] 20 \[RightArrow] 10 \
\[RightArrow] 5 \[RightArrow] 16 \[RightArrow] 8 \[RightArrow] 4 \
\[RightArrow] 2 \[RightArrow] 1\n\nIt can be seen that this sequence \
(starting at 13 and finishing at 1) contains 10 terms. Although it has not \
been proved yet (Collatz Problem), it is thought that all starting numbers \
finish at 1.\n\nWhich starting number, under one million, produces the \
longest chain?\n\n",
 StyleBox["NOTE",
  FontWeight->"Bold"],
 ": Once the chain starts the terms are allowed to go above one million."
}], "Text",
 CellChangeTimes->{{3.640508557761256*^9, 3.640508564893669*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"collatz", "[", "1", "]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"collatz", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"collatz", "[", "n", "]"}], "=", 
    RowBox[{
     RowBox[{"collatz", "[", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OddQ", "@", "n"}], ",", 
        RowBox[{
         RowBox[{"3", "n"}], "+", "1"}], ",", 
        RowBox[{"n", "/", "2"}]}], "]"}], "]"}], "+", "1"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.64050859401167*^9, 3.64050865826106*^9}, {
  3.640508692490295*^9, 3.640508730148944*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"MaximalBy", "[", 
   RowBox[{
    RowBox[{"Range", "@", "1*^6"}], ",", "collatz"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.640508731870907*^9, 3.640508814092564*^9}, {
  3.640508848362146*^9, 3.64050886060187*^9}}],

Cell[BoxData["837799"], "Output",
 CellChangeTimes->{
  3.640508734472989*^9, {3.640508840058494*^9, 3.640508861933825*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 15 - Lattice paths", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, 3.640508341327579*^9, {
   3.640508539735953*^9, 3.640508540958408*^9}, 3.640509793683785*^9, {
   3.640513826001985*^9, 3.640513826982418*^9}}],

Cell[TextData[{
 "Starting in the top left corner of a 2\[Times]2 grid, and only being able \
to move to the right and down, there are exactly 6 routes to the bottom right \
corner.\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnFFqpkUQRYP64DZcii5hXMEM6KswCjIrcVvuSONDQRgS01VddTt9cw58
YaYhdb6+f90h5GF++PTbh1+/eXh4+P37xy8fPv754+fPH7/8/N3jX3768scv
n759/MNfj8/fj89/h7DFP6LHBee8VHdzytDtPtM453V632/M7/Qdb8rqQXCP
k5mdfp8b98LhLoqcnrpuzyvu8dyZ2zONw13oT+0eK2cKb/d8dX8mZzv2Z3I2
/dmfT3/yHhUOeYVr5Uzh7Z5Pf/IeFQ55hWvlTOHtnk9/8h4VDnmFa+VM4e2e
T3/yHhUOeYVr5Uzh7Z5Pf/IeFQ55hWvlTOHtnk9/8h4VDnmFa+VM4e2eT3/y
HhUOeYVr5Uzh7Z5Pf/IeFQ55hWvlTOHtnk9/8h4VDnmFa+VM4e2eT3/yHhUO
eYVr5Uzh7Z5Pf/IeFQ55hWvlTOHtnk9/8h4VDnmFa+VM4e2eT3/yHhUOeYVr
5Uzh7Z5Pf/IeFQ55hWvlTOHtnk9/8h4VDnmFa+VM4e2eT3/yHhUOeYVr5Uzh
7Z5Pf/IeFQ55hWvlTOHtnk9/8h4VDnmFa+VM4e2eT3/yHhUOeYVr5Uzh7Z5P
f/IeFQ55hWvlTOHtnk9/8h4VDnmFa+VM4e2e79qfyUcF/en3ds+nP/TnVH9u
/6xO9MfhUeFyp5f6o8Alw7jL5Gy3Hjnl9ZxfgTLDaZz2wS2vSehPn+9mh1Ne
9Kdntss+KBxOedGfntku+6BwOOVFf3pmu+yDwuGUF/3pme2yDwqHU170Z/37
38rvm27YufeSF/3JzXDfh07He8iL/uRmnN6FeI9pyGt9Nv3JzXHeh26He170
Jz/n5C7EO0xDXuuz6U9+lus+TDic86I/tVmndiH805DX+mz6U5vnuA9TDte8
6E993oldCPc05LU+m/7UZ7rtw6TDMS/6szdTvQvhnYa81mfTn/pMt32YdDjm
tfL+XXdz60/MVe5COKchr/XZq/3ZvSf96XNOQ17rs7P9qd7XsT8x+/TPwTc5
nPLa6U/27vSnzzcNea3P3u3Pagau/Yn5il0I1+0Ol7w6+/NaHvSnz3W7wyWv
if68NOs99EfB7TsX8x3yqnaj0qOX+uP0KDh9R/LyzgtADf0BqEN3AGagNwB1
6A1AHXoDUIfeANShNwB16A1AHXoDUIfeAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAArKH6/06VzzSn70de55+X7jaJ6rNSOBSZkVfeo4D+7Dtc9oG89jz0
p+Zw2Qfy2vPQn5rDZR/Ia89Df2oOl30grz0P/ak5XPaBvPY89KfmcNkH8trz
0J+aw2UfyGvPQ39qDpd9IK89D/2pOVz2gbz2PPSn5nDZB/La89CfmsNlH8hr
z0N/ag6XfSCvPQ/9qTlc9oG89jz0p+Zw2Qfy2vPQn5rDZR/Ia89Df2oOl30g
rz0P/ak5XPaBvPY89KfmcNkH8trz0J+aw2UfyGvPQ39qDpd9IK89D/2pOVz2
gbz2PPSn5nDZB/La89CfmsNlH8hrz/P13RyeaZzuRH/2PKd3/aZdC5zu5JaX
Avf+KHbO6ZlG6VNndvqzu3Ev3O4yjbo/0zznUHinPSf+XZ2cTX9qrmnoT59v
cjb9qbmmoT99vsnZ9Kfmmob+9PkmZ9Ofmmsa+tPnm5xNf2quaW7uz1v6nRb9
WXfQnzl3ZQb96fNMQ39m3ZUZp7sT7zEF/am7prm9PzGH/vR4pqE/s+7qnJPd
iXeYgv7UXdM49Cdm0Z99zzT0Z9a9M+tUd8I/Bf2pu6Zx6U/Moz97nmnoz6x7
d96J7oR7CvpTd03j1J+YSX/qnmnoz6y7Y6a6O+Gdgv7UXdPQnz7vFK+9f9e9
3lN/JjO7uT8xV9mdcE7OXunP7h3fY38mMqM/Nefk7Ex/qnd9z/3pzOz2/sTs
t/JZdcyu9Cd7b/rTkxn9qfkmZ+/0Z/X+9KcnM4f+xHzF5xSuydkd/XktC/rT
kxn9qbkmZ3f25//mTHNrfzKZufVHgfpn0c5HcYenDofn6X1c7/j1XSc5fcdb
sjp9vxszgx4cduH0rt+YGfTgsAend/3GzKAHpx04vfc3ZgYzsAN5yAwC9iAP
mUHADuQhMwjYgTxkBgE7kIfMIGAP8pAZBOxAHjKDgB3IQ2YAAGDBvz1/o2A=

     "], {{0, 151}, {208, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{208, 151},
   PlotRange->{{0, 208}, {0, 151}}]], "Output",
  CellChangeTimes->{3.640509851467957*^9}],
 "\nHow many such routes are there through a 20\[Times]20 grid?"
}], "Text",
 CellChangeTimes->{{3.640509807873253*^9, 3.640509854161994*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"40", "~", "Binomial", "~", "20"}]], "Input",
 CellChangeTimes->{{3.640509861989467*^9, 3.640509902694702*^9}}],

Cell[BoxData["137846528820"], "Output",
 CellChangeTimes->{{3.64050987135279*^9, 3.640509903676973*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 16 - Power digit sum", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640513835610244*^9, 
   3.640513836714232*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", "15"], " ", "=", "32768"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and the sum of its digits is 3 + 2 + 7 + 6 + 8 = 26.\n\nWhat is the sum of \
the digits of the number ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "1000"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "?"
}], "Text",
 CellChangeTimes->{{3.640508147862752*^9, 3.640508224500652*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{"IntegerDigits", "[", 
   RowBox[{"2", "^", "1000"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.64050823022623*^9, 3.640508244510879*^9}}],

Cell[BoxData["1366"], "Output",
 CellChangeTimes->{3.64050824506026*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 17 - Number letter counts", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640513835610244*^9, 
   3.640513836714232*^9}, {3.640514032802044*^9, 3.640514042359292*^9}}],

Cell[TextData[{
 "If the numbers 1 to 5 are written out in words: one, two, three, four, \
five, then there are 3 + 3 + 5 + 4 + 4 = 19 letters used in total.\n\nIf all \
the numbers from 1 to 1000 (one thousand) inclusive were written out in \
words, how many letters would be used?\n\n",
 StyleBox["NOTE",
  FontWeight->"Bold"],
 ": Do not count spaces or hyphens. For example, 342 (three hundred and \
forty-two) contains 23 letters and 115 (one hundred and fifteen) contains 20 \
letters. The use of \[OpenCurlyDoubleQuote]and\[CloseCurlyDoubleQuote] when \
writing out numbers is in compliance with British usage."
}], "Text",
 CellChangeTimes->{{3.640514050469897*^9, 3.640514055857949*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", "1", "}"}], "]"}], "=", "\"\<one\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", "2", "}"}], "]"}], "=", "\"\<two\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", "3", "}"}], "]"}], "=", "\"\<three\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", "4", "}"}], "]"}], "=", "\"\<four\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", "5", "}"}], "]"}], "=", "\"\<five\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", "6", "}"}], "]"}], "=", "\"\<six\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", "7", "}"}], "]"}], "=", "\"\<seven\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", "8", "}"}], "]"}], "=", "\"\<eight\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", "9", "}"}], "]"}], "=", "\"\<nine\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], "]"}], "=", "\"\<ten\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], "]"}], "=", "\"\<eleven\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], "]"}], "=", "\"\<twelve\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}], "]"}], "=", "\"\<thirteen\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "5"}], "}"}], "]"}], "=", "\"\<fifteen\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "8"}], "}"}], "]"}], "=", "\"\<eighteen\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "i_"}], "}"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"numberString", "[", 
     RowBox[{"{", "i", "}"}], "]"}], "<>", "\"\<teen\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "0"}], "}"}], "]"}], "=", "\"\<twenty\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "0"}], "}"}], "]"}], "=", "\"\<thirty\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", 
     RowBox[{"4", ",", "0"}], "}"}], "]"}], "=", "\"\<forty\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", 
     RowBox[{"5", ",", "0"}], "}"}], "]"}], "=", "\"\<fifty\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", 
     RowBox[{"8", ",", "0"}], "}"}], "]"}], "=", "\"\<eighty\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "0"}], "}"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"numberString", "[", 
     RowBox[{"{", "i", "}"}], "]"}], "<>", "\"\<ty\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"numberString", "[", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0"}], "}"}], "]"}], "<>", 
    RowBox[{"numberString", "[", 
     RowBox[{"{", "j", "}"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "0", ",", "0"}], "}"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"numberString", "[", 
     RowBox[{"{", "i", "}"}], "]"}], "<>", "\"\<hundred\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "0", ",", "j_"}], "}"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"numberString", "[", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "0"}], "}"}], "]"}], "<>", "\"\<and\>\"", "<>", 
    RowBox[{"numberString", "[", 
     RowBox[{"{", "j", "}"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_", ",", "k_"}], "}"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"numberString", "[", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "0"}], "}"}], "]"}], "<>", "\"\<and\>\"", "<>", 
    RowBox[{"numberString", "[", 
     RowBox[{"{", 
      RowBox[{"j", ",", "k"}], "}"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numberString", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], "]"}], "=", 
   "\"\<onethousand\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.640514900018783*^9, 3.640514927312702*^9}, {
  3.640514963088798*^9, 3.640514973123213*^9}, {3.640515010312691*^9, 
  3.640515045741168*^9}, {3.640515143732862*^9, 3.64051537012775*^9}, {
  3.640515452532081*^9, 3.640515558840929*^9}, {3.640515589828099*^9, 
  3.640515679123156*^9}, {3.640515727548151*^9, 3.640515767453526*^9}, {
  3.640515804690361*^9, 3.640515915321293*^9}, {3.640515997996322*^9, 
  3.640516008462341*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"StringLength", "@", 
    RowBox[{"numberString", "@", 
     RowBox[{"IntegerDigits", "@", "i"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.640515924534596*^9, 3.640515966786249*^9}}],

Cell[BoxData["21124"], "Output",
 CellChangeTimes->{{3.640515955396099*^9, 3.640515967948452*^9}, 
   3.640516010993207*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 18 - Maximum path sum I", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640513835610244*^9, 
   3.640513836714232*^9}, {3.640514032802044*^9, 3.640514042359292*^9}, {
   3.640516068628517*^9, 3.640516074475377*^9}}],

Cell[TextData[{
 "By starting at the top of the triangle below and moving to adjacent numbers \
on the row below, the maximum total from top to bottom is 23.\n\n",
 StyleBox["3",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 "\n",
 StyleBox["7",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " 4\n2 ",
 StyleBox["4",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " 6\n8 5 ",
 StyleBox["9",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " 3\n\nThat is, 3 + 7 + 4 + 9 = 23.\n\nFind the maximum total from top to \
bottom of the triangle below:\n\n75\n95 64\n17 47 82\n18 35 87 10\n20 04 82 \
47 65\n19 01 23 75 03 34\n88 02 77 73 07 63 67\n99 65 04 28 06 16 70 92\n41 \
41 26 56 83 40 80 70 33\n41 48 72 33 47 32 37 16 94 29\n53 71 44 65 25 43 91 \
52 97 51 14\n70 11 33 28 77 73 17 78 39 68 17 57\n91 71 52 38 17 14 91 43 58 \
50 27 29 48\n63 66 04 68 89 53 67 30 73 16 69 87 40 31\n04 62 98 27 23 09 70 \
98 73 93 38 53 60 04 23\n\n",
 StyleBox["NOTE",
  FontWeight->"Bold"],
 ": As there are only 16384 routes, it is possible to solve this problem by \
trying every route. However, ",
 ButtonBox["Problem 67",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/problem=67"], None},
  ButtonNote->"https://projecteuler.net/problem=67"],
 ", is the same challenge with a triangle containing one-hundred rows; it \
cannot be solved by brute force, and requires a clever method! ;o)"
}], "Text",
 CellChangeTimes->{{3.640516089494918*^9, 3.640516101205998*^9}, {
  3.640516231189459*^9, 3.640516231190585*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"triangle", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<75\n95 64\n17 47 82\n18 35 87 10\n20 04 82 47 65\n19 01 23 75 03 34\n\
88 02 77 73 07 63 67\n99 65 04 28 06 16 70 92\n41 41 26 56 83 40 80 70 33\n41 \
48 72 33 47 32 37 16 94 29\n53 71 44 65 25 43 91 52 97 51 14\n70 11 33 28 77 \
73 17 78 39 68 17 57\n91 71 52 38 17 14 91 43 58 50 27 29 48\n63 66 04 68 89 \
53 67 30 73 16 69 87 40 31\n04 62 98 27 23 09 70 98 73 93 38 53 60 04 23\>\"",
      ",", "\"\<Table\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.640516238756557*^9, 3.64051626358409*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "@", 
  RowBox[{"Fold", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"MapThread", "[", 
      RowBox[{"Max", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Append", "[", 
           RowBox[{"#", ",", "0"}], "]"}], "+", "#2"}], ",", 
         RowBox[{
          RowBox[{"Prepend", "[", 
           RowBox[{"#", ",", "0"}], "]"}], "+", "#2"}]}], "}"}]}], "]"}], 
     "&"}], ",", 
    RowBox[{"{", "}"}], ",", "triangle"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.640516265564532*^9, 3.640516266938885*^9}, {
  3.640516329334614*^9, 3.640516353141472*^9}, {3.64051649599621*^9, 
  3.640516544485578*^9}, {3.640516680517515*^9, 3.64051670367008*^9}, {
  3.640516856421387*^9, 3.640516857476563*^9}}],

Cell[BoxData["1074"], "Output",
 CellChangeTimes->{
  3.640516267450976*^9, 3.640516331001449*^9, {3.64051669008335*^9, 
   3.640516704421884*^9}, 3.640516857870048*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 19 - Counting Sundays", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640513835610244*^9, 
   3.640513836714232*^9}, {3.640514032802044*^9, 3.640514042359292*^9}, {
   3.640516068628517*^9, 3.640516074475377*^9}, {3.640518442380931*^9, 
   3.640518446867623*^9}}],

Cell["\<\
You are given the following information, but you may prefer to do some \
research for yourself.

    1 Jan 1900 was a Monday.
    Thirty days has September,
    April, June and November.
    All the rest have thirty-one,
    Saving February alone,
    Which has twenty-eight, rain or shine.
    And on leap years, twenty-nine.
    A leap year occurs on any year evenly divisible by 4, but not on a \
century unless it is divisible by 400.

How many Sundays fell on the first of the month during the twentieth century \
(1 Jan 1901 to 31 Dec 2000)?\
\>", "Text",
 CellChangeTimes->{{3.640518456575582*^9, 3.640518462925346*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"DateRange", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1901", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2000", ",", "12", ",", "31"}], "}"}], ",", "Sunday"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"_", ",", "_", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.64051847558881*^9, 3.640518486774227*^9}, {
  3.640518702496416*^9, 3.64051870853617*^9}, {3.640518895669364*^9, 
  3.640518899583639*^9}}],

Cell[BoxData["171"], "Output",
 CellChangeTimes->{3.640519094819622*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 20 - Factorial digit sum", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, {3.640513851382765*^9, 3.640513852660755*^9}}],

Cell["\<\
n! means n \[Times] (n \[Minus] 1) \[Times] ... \[Times] 3 \[Times] 2 \
\[Times] 1

For example, 10! = 10 \[Times] 9 \[Times] ... \[Times] 3 \[Times] 2 \[Times] \
1 = 3628800,
and the sum of the digits in the number 10! is 3 + 6 + 2 + 8 + 8 + 0 + 0 = 27.

Find the sum of the digits in the number 100!\
\>", "Text",
 CellChangeTimes->{{3.640509721417184*^9, 3.640509729126361*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{"IntegerDigits", "[", 
   RowBox[{"100", "!"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.640509741865133*^9, 3.64050974831382*^9}}],

Cell[BoxData["648"], "Output",
 CellChangeTimes->{3.640509749199695*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 21 - Amicable numbers", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, {3.640513851382765*^9, 3.640513852660755*^9}, {
   3.64051696383441*^9, 3.64051696914254*^9}}],

Cell["\<\
Let d(n) be defined as the sum of proper divisors of n (numbers less than n \
which divide evenly into n).
If d(a) = b and d(b) = a, where a \[NotEqual] b, then a and b are an amicable \
pair and each of a and b are called amicable numbers.

For example, the proper divisors of 220 are 1, 2, 4, 5, 10, 11, 20, 22, 44, \
55 and 110; therefore d(220) = 284. The proper divisors of 284 are 1, 2, 4, \
71 and 142; so d(284) = 220.

Evaluate the sum of all the amicable numbers under 10000.\
\>", "Text",
 CellChangeTimes->{{3.640516979116745*^9, 3.640516983968356*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Range", "@", "10000"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#1", "\[Equal]", "#3", "\[NotEqual]", "#2"}], "&"}], "@@", 
      RowBox[{"NestList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"DivisorSigma", "[", 
           RowBox[{"1", ",", "#"}], "]"}], "-", "#"}], "&"}], ",", "#", ",", 
        "2"}], "]"}]}], "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.640517073482984*^9, 3.640517180377675*^9}, {
  3.640517228493097*^9, 3.640517232982995*^9}, {3.640517266556304*^9, 
  3.640517274670635*^9}}],

Cell[BoxData["31626"], "Output",
 CellChangeTimes->{{3.640517084068845*^9, 3.640517154687347*^9}, {
  3.640517268450084*^9, 3.640517275112167*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 22 - Names scores", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, {3.640513851382765*^9, 3.640513852660755*^9}, {
   3.64051696383441*^9, 3.64051696914254*^9}, {3.640517685522271*^9, 
   3.640517689447354*^9}}],

Cell[TextData[{
 "Using ",
 ButtonBox["names.txt",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/project/resources/p022_names.txt"], None},
  ButtonNote->"https://projecteuler.net/project/resources/p022_names.txt"],
 " (right click and \[OpenCurlyQuote]Save Link/Target \
As...\[CloseCurlyQuote]), a 46K text file containing over five-thousand first \
names, begin by sorting it into alphabetical order. Then working out the \
alphabetical value for each name, multiply this value by its alphabetical \
position in the list to obtain a name score.\n\nFor example, when the list is \
sorted into alphabetical order, COLIN, which is worth 3 + 15 + 12 + 9 + 14 = \
53, is the 938th name in the list. So, COLIN would obtain a score of 938 \
\[Times] 53 = 49714.\n\nWhat is the total of all the name scores in the \
file?"
}], "Text",
 CellChangeTimes->{{3.640517706193678*^9, 3.640517711903636*^9}, {
  3.640517741959117*^9, 3.640517741959997*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"names", "=", 
   RowBox[{"ToExpression", "[", 
    RowBox[{"\"\<{\>\"", "<>", 
     RowBox[{
     "Import", "@", 
      "\"\<https://projecteuler.net/project/resources/p022_names.txt\>\""}], 
     "<>", "\"\<}\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.640517720853318*^9, 3.64051772880681*^9}, {
  3.64051779070606*^9, 3.640517873497871*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{
   RowBox[{"MapIndexed", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"ToCharacterCode", "@", "#1"}], "-", "64"}], "]"}], "#2"}], 
      "&"}], ",", 
     RowBox[{"Sort", "@", "names"}]}], "]"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.640517940265174*^9, 3.640517964067242*^9}, {
  3.64051802198809*^9, 3.640518063715729*^9}, {3.640518217168592*^9, 
  3.640518217791784*^9}}],

Cell[BoxData["871198282"], "Output",
 CellChangeTimes->{{3.640518056847931*^9, 3.640518064247727*^9}, 
   3.640518220846765*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 23 - Non-abundant sums", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.64051968252481*^9, 3.64051968652138*^9}, {
   3.640522039180397*^9, 3.640522046879164*^9}}],

Cell["\<\
A perfect number is a number for which the sum of its proper divisors is \
exactly equal to the number. For example, the sum of the proper divisors of \
28 would be 1 + 2 + 4 + 7 + 14 = 28, which means that 28 is a perfect number.

A number n is called deficient if the sum of its proper divisors is less than \
n and it is called abundant if this sum exceeds n.

As 12 is the smallest abundant number, 1 + 2 + 3 + 4 + 6 = 16, the smallest \
number that can be written as the sum of two abundant numbers is 24. By \
mathematical analysis, it can be shown that all integers greater than 28123 \
can be written as the sum of two abundant numbers. However, this upper limit \
cannot be reduced any further by analysis even though it is known that the \
greatest number that cannot be expressed as the sum of two abundant numbers \
is less than this limit.

Find the sum of all the positive integers which cannot be written as the sum \
of two abundant numbers.\
\>", "Text",
 CellChangeTimes->{{3.640522053582085*^9, 3.640522062629957*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"abundants", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Range", "@", "28123"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"DivisorSigma", "[", 
        RowBox[{"1", ",", "#"}], "]"}], ">", 
       RowBox[{"2", " ", "#"}]}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Total", "[", 
  RowBox[{"Fold", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Complement", "[", 
      RowBox[{"#", ",", 
       RowBox[{"#2", "+", "abundants"}]}], "]"}], "&"}], ",", 
    RowBox[{"Range", "@", "28123"}], ",", "abundants"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.640522252230357*^9, {3.640522296765401*^9, 3.640522320732835*^9}, 
   3.64052236904681*^9, {3.640522767763269*^9, 3.640522788807625*^9}}],

Cell[BoxData["4179871"], "Output",
 CellChangeTimes->{{3.640522255336295*^9, 3.640522280097851*^9}, {
  3.640522365453218*^9, 3.640522370984431*^9}, {3.640522756209288*^9, 
  3.640522793662949*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 24 - Lexicographic permutations", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.64051968252481*^9, 3.64051968652138*^9}}],

Cell["\<\

A permutation is an ordered arrangement of objects. For example, 3124 is one \
possible permutation of the digits 1, 2, 3 and 4. If all of the permutations \
are listed numerically or alphabetically, we call it lexicographic order. The \
lexicographic permutations of 0, 1 and 2 are:

012   021   102   120   201   210

What is the millionth lexicographic permutation of the digits 0, 1, 2, 3, 4, \
5, 6, 7, 8 and 9?\
\>", "Text",
 CellChangeTimes->{{3.640519696063352*^9, 3.64051970025298*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "[", 
  RowBox[{
   RowBox[{"Permutations", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"0", ",", "9"}], "]"}], "]"}], "[", 
   RowBox[{"[", "1*^6", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.640519722178353*^9, 3.640519764692794*^9}, {
  3.640519804091103*^9, 3.640519821698587*^9}}],

Cell[BoxData["2783915460"], "Output",
 CellChangeTimes->{{3.640519760880398*^9, 3.640519765277161*^9}, 
   3.640519822549268*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 25 - 1000-digit Fibonacci number", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}}],

Cell[TextData[{
 "The Fibonacci sequence is defined by the recurrence relation:\n\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "n"], " ", "=", 
    RowBox[{
     SubscriptBox["F", 
      RowBox[{"n", "\[Minus]", "1"}]], "+", 
     SubscriptBox["F", 
      RowBox[{"n", "\[Minus]", "2"}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "1"], " ", "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "2"], " ", "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nHence the first 12 terms will be:\n\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "1"], " ", "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "2"], " ", "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "3"], " ", "=", "2"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "4"], " ", "=", "3"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "5"], " ", "=", "5"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "6"], " ", "=", "8"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "7"], " ", "=", "13"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "8"], " ", "=", "21"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "9"], " ", "=", "34"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "10"], " ", "=", "55"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "11"], " ", "=", "89"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "12"], " ", "=", "144"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nThe 12th term, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "12"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", is the first term to contain three digits.\n\nWhat is the index of the \
first term in the Fibonacci sequence to contain 1000 digits?"
}], "Text",
 CellChangeTimes->{{3.640510164290952*^9, 3.640510361131073*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IncreaseWhile", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Log10", "@", 
     RowBox[{"Fibonacci", "@", "#"}]}], "<", "999"}], "&"}], "]"}]], "Input",
 CellChangeTimes->{{3.64065895969431*^9, 3.640658970495597*^9}}],

Cell[BoxData["4782"], "Output",
 CellChangeTimes->{3.640658971767483*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 26 - 50", "Subsection",
 CellChangeTimes->{{3.640509015355191*^9, 3.640509022245683*^9}, {
  3.640519338671053*^9, 3.640519341443173*^9}}],

Cell[CellGroupData[{

Cell["Problem 26 - Reciprocal cycles", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640520171527652*^9, 3.640520177479712*^9}, {
   3.64059818593645*^9, 3.640598192432443*^9}, {3.640600354618932*^9, 
   3.64060035846278*^9}}],

Cell["\<\
A unit fraction contains 1 in the numerator. The decimal representation of \
the unit fractions with denominators 2 to 10 are given:

    1/2\t= \t0.5
    1/3\t= \t0.(3)
    1/4\t= \t0.25
    1/5\t= \t0.2
    1/6\t= \t0.1(6)
    1/7\t= \t0.(142857)
    1/8\t= \t0.125
    1/9\t= \t0.(1)
    1/10\t= \t0.1

Where 0.1(6) means 0.166666..., and has a 1-digit recurring cycle. It can be \
seen that 1/7 has a 6-digit recurring cycle.

Find the value of d < 1000 for which 1/d contains the longest recurring cycle \
in its decimal fraction part.\
\>", "Text",
 CellChangeTimes->{{3.64060036840329*^9, 3.640600375523665*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"MaximalBy", "[", 
   RowBox[{
    RowBox[{"Range", "@", "1000"}], ",", 
    RowBox[{
     RowBox[{"Length", "@", 
      RowBox[{
       RowBox[{"RealDigits", "[", 
        RowBox[{"1", "/", "#"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.640600742046372*^9, 3.640600823475737*^9}}],

Cell[BoxData["983"], "Output",
 CellChangeTimes->{
  3.640600777030921*^9, {3.640600814469052*^9, 3.640600823885588*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 27 - Quadratic primes", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640520171527652*^9, 3.640520177479712*^9}, {
   3.64059818593645*^9, 3.640598192432443*^9}}],

Cell["\<\
Euler discovered the remarkable quadratic formula:

n\.b2 + n + 41

It turns out that the formula will produce 40 primes for the consecutive \
values n = 0 to 39. However, when n = 40, 40\.b2 + 40 + 41 = 40(40 + 1) + 41 \
is divisible by 41, and certainly when n = 41, 41\.b2 + 41 + 41 is clearly \
divisible by 41.

The incredible formula  n\.b2 \[Minus] 79n + 1601 was discovered, which \
produces 80 primes for the consecutive values n = 0 to 79. The product of the \
coefficients, \[Minus]79 and 1601, is \[Minus]126479.

Considering quadratics of the form:

    n\.b2 + an + b, where |a| < 1000 and |b| < 1000

    where |n| is the modulus/absolute value of n
    e.g. |11| = 11 and |\[Minus]4| = 4

Find the product of the coefficients, a and b, for the quadratic expression \
that produces the maximum number of primes for consecutive values of n, \
starting with n = 0.\
\>", "Text",
 CellChangeTimes->{{3.640598204744462*^9, 3.640598227694513*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n", "=", 
  RowBox[{"Ceiling", "@", 
   RowBox[{"Root", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "^", "2"}], "+", "#", "+", "41", "-", "1000"}], "&"}], 
     ",", "1"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.640599589571545*^9, 3.640599643355664*^9}, {
  3.640599759710087*^9, 3.640599792965788*^9}}],

Cell[BoxData[
 RowBox[{"-", "31"}]], "Output",
 CellChangeTimes->{{3.640599640737284*^9, 3.640599643851432*^9}, {
  3.640599760179029*^9, 3.64059980991015*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Times", "@@", 
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "+", "n"}], ")"}], "^", "2"}], "+", 
     RowBox[{"(", 
      RowBox[{"x", "+", "n"}], ")"}], "+", "41"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.64059980832256*^9, 3.640599823151446*^9}}],

Cell[BoxData[
 RowBox[{"-", "59231"}]], "Output",
 CellChangeTimes->{{3.640599815570216*^9, 3.640599823531202*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 28 - Number spiral diagonals", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640520171527652*^9, 3.640520177479712*^9}}],

Cell[TextData[{
 "Starting with the number 1 and moving to the right in a clockwise direction \
a 5 by 5 spiral is formed as follows:\n\n",
 StyleBox["21",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " 22 23 24 ",
 StyleBox["25",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 "\n20  ",
 StyleBox["7",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 "  8  ",
 StyleBox["9",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " 10\n19  6  ",
 StyleBox["1",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 "  2 11\n18  ",
 StyleBox["5",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 "  4  ",
 StyleBox["3",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " 12\n",
 StyleBox["17",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " 16 15 14 ",
 StyleBox["13",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 "\n\nIt can be verified that the sum of the numbers on the diagonals is 101.\
\n\nWhat is the sum of the numbers on the diagonals in a 1001 by 1001 spiral \
formed in the same way?"
}], "Text",
 CellChangeTimes->{{3.640520183937674*^9, 3.640520189521792*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"4", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"4", 
       RowBox[{"n", "^", "2"}]}], "+", "n", "+", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1001", "-", "1"}], ")"}], "/", "2"}]}], "}"}]}], 
    "]"}]}]}]], "Input"],

Cell[BoxData["669171001"], "Output",
 CellChangeTimes->{3.64052050293651*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 29 - Distinct powers", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640520171527652*^9, 3.640520177479712*^9}, {
   3.640521548034308*^9, 3.640521551060534*^9}}],

Cell[TextData[{
 "Consider all integer combinations of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["a", "b"], TraditionalForm]]],
 " for 2 \[LessEqual] a \[LessEqual] 5 and 2 \[LessEqual] b \[LessEqual] 5:\n\
\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["2", "2"], "=", "4"}], ",", 
    RowBox[{
     SuperscriptBox["2", "3"], "=", "8"}], ",", 
    RowBox[{
     SuperscriptBox["2", "4"], "=", "16"}], ",", 
    RowBox[{
     SuperscriptBox["2", "5"], "=", "32"}]}], TraditionalForm]]],
 "\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["3", "2"], "=", "9"}], ",", " ", 
    RowBox[{
     SuperscriptBox["3", "3"], "=", "27"}], ",", " ", 
    RowBox[{
     SuperscriptBox["3", "4"], "=", "81"}], ",", " ", 
    RowBox[{
     SuperscriptBox["3", "5"], "=", "243"}]}], TraditionalForm]]],
 "\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["4", "2"], "=", "16"}], ",", " ", 
    RowBox[{
     SuperscriptBox["4", "3"], "=", "64"}], ",", " ", 
    RowBox[{
     SuperscriptBox["4", "4"], "=", "256"}], ",", " ", 
    RowBox[{
     SuperscriptBox["4", "5"], "=", "1024"}]}], TraditionalForm]]],
 "\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["5", "2"], "=", "25"}], ",", " ", 
    RowBox[{
     SuperscriptBox["5", "3"], "=", "125"}], ",", " ", 
    RowBox[{
     SuperscriptBox["5", "4"], "=", "625"}], ",", " ", 
    RowBox[{
     SuperscriptBox["5", "5"], "=", "3125"}]}], TraditionalForm]]],
 "\n\nIf they are then placed in numerical order, with any repeats removed, \
we get the following sequence of 15 distinct terms:\n\n4, 8, 9, 16, 25, 27, \
32, 64, 81, 125, 243, 256, 625, 1024, 3125\n\nHow many distinct terms are in \
the sequence generated by ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["a", "b"], TraditionalForm]]],
 " for 2 \[LessEqual] a \[LessEqual] 100 and 2 \[LessEqual] b \[LessEqual] \
100?"
}], "Text",
 CellChangeTimes->{{3.640521566909856*^9, 3.640521693038156*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"DeleteDuplicates", "@", 
   RowBox[{"Catenate", "@", 
    RowBox[{"Array", "[", 
     RowBox[{"Power", ",", 
      RowBox[{"{", 
       RowBox[{"99", ",", "99"}], "}"}], ",", "2"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.640521701387297*^9, 3.640521794928944*^9}}],

Cell[BoxData["9183"], "Output",
 CellChangeTimes->{{3.640521748464512*^9, 3.640521795713517*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 30 - Digit fifth powers", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640520171527652*^9, 3.640520177479712*^9}, {
   3.640520738744342*^9, 3.640520745551231*^9}}],

Cell[TextData[{
 "Surprisingly there are only three numbers that can be written as the sum of \
fourth powers of their digits:\n\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1634", "=", 
    RowBox[{
     SuperscriptBox["1", "4"], "+", 
     SuperscriptBox["6", "4"], "+", 
     SuperscriptBox["3", "4"], "+", 
     SuperscriptBox["4", "4"]}]}], TraditionalForm]]],
 "\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{"8208", "=", 
    RowBox[{
     SuperscriptBox["8", "4"], "+", 
     SuperscriptBox["2", "4"], "+", 
     SuperscriptBox["0", "4"], "+", 
     SuperscriptBox["8", "4"]}]}], TraditionalForm]]],
 "\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{"9474", "=", 
    RowBox[{
     SuperscriptBox["9", "4"], "+", 
     SuperscriptBox["4", "4"], "+", 
     SuperscriptBox["7", "4"], "+", 
     SuperscriptBox["4", "4"]}]}], TraditionalForm]]],
 "\n\nAs ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "=", 
    SuperscriptBox["1", "4"]}], TraditionalForm]]],
 " is not a sum it is not included.\n\nThe sum of these numbers is 1634 + \
8208 + 9474 = 19316.\n\nFind the sum of all the numbers that can be written \
as the sum of fifth powers of their digits."
}], "Text",
 CellChangeTimes->{{3.640520753209229*^9, 3.640520832547118*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"IncreaseWhile", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"9", "^", "5"}], "#"}], ">", 
      RowBox[{"10", "^", "#"}]}], "&"}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"Total", "@", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"9", "^", "5"}], "nmax"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"IntegerDigits", "@", "#"}], "^", "5"}], "]"}], "\[Equal]", 
        "#"}], "&"}]}], "]"}]}], "-", "1"}]}]], "Input",
 CellChangeTimes->{{3.640521070078972*^9, 3.640521123059286*^9}, {
   3.640521289796009*^9, 3.640521377444134*^9}, {3.640521442883831*^9, 
   3.640521444604914*^9}, {3.640521476506506*^9, 3.640521478529222*^9}, 
   3.640523224804524*^9, {3.640659034738303*^9, 3.640659038803858*^9}}],

Cell[BoxData["443839"], "Output",
 CellChangeTimes->{{3.6405210769732*^9, 3.640521087911324*^9}, 
   3.640521123428277*^9, {3.640521336965679*^9, 3.640521348036661*^9}, 
   3.640521446855095*^9, 3.640521486774346*^9, 3.640523227190937*^9, 
   3.640659072803245*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 31 - Coin sums", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640520171527652*^9, 3.640520177479712*^9}, {
   3.640520738744342*^9, 3.640520745551231*^9}, {3.640600060467916*^9, 
   3.640600068053672*^9}}],

Cell["\<\
In England the currency is made up of pound, \[Sterling], and pence, p, and \
there are eight coins in general circulation:

    1p, 2p, 5p, 10p, 20p, 50p, \[Sterling]1 (100p) and \[Sterling]2 (200p).

It is possible to make \[Sterling]2 in the following way:

    1\[Times]\[Sterling]1 + 1\[Times]50p + 2\[Times]20p + 1\[Times]5p + 1\
\[Times]2p + 3\[Times]1p

How many different ways can \[Sterling]2 be made using any number of coins?\
\>", "Text",
 CellChangeTimes->{{3.640600078566299*^9, 3.640600084655761*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"FrobeniusSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", "5", ",", "10", ",", "20", ",", "50", ",", "100", 
      ",", "200"}], "}"}], ",", "200"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.640599943245785*^9, 3.640600027342754*^9}, 
   3.64060010005465*^9}],

Cell[BoxData["73682"], "Output",
 CellChangeTimes->{{3.640600003760324*^9, 3.640600041536857*^9}, 
   3.640600101232712*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 32 - Pandigital products", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640520171527652*^9, 3.640520177479712*^9}, {
   3.640520738744342*^9, 3.640520745551231*^9}, {3.640523426344979*^9, 
   3.640523447312862*^9}, {3.64060620956512*^9, 3.640606214497008*^9}, {
   3.640606514016177*^9, 3.640606517499093*^9}}],

Cell["\<\
We shall say that an n-digit number is pandigital if it makes use of all the \
digits 1 to n exactly once; for example, the 5-digit number, 15234, is 1 \
through 5 pandigital.

The product 7254 is unusual, as the identity, 39 \[Times] 186 = 7254, \
containing multiplicand, multiplier, and product is 1 through 9 pandigital.

Find the sum of all products whose multiplicand/multiplier/product identity \
can be written as a 1 through 9 pandigital.
HINT: Some products can be obtained in more than one way so be sure to only \
include it once in your sum.\
\>", "Text",
 CellChangeTimes->{{3.640606526644654*^9, 3.640606531831159*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{"DeleteDuplicates", "@", 
   RowBox[{
    RowBox[{"Reap", "[", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Sort", "@", 
           RowBox[{"Catenate", "@", 
            RowBox[{"IntegerDigits", "@", 
             RowBox[{"{", 
              RowBox[{"i", ",", "j", ",", 
               RowBox[{"i", "*", "j"}]}], "}"}]}]}]}], "\[Equal]", 
          RowBox[{"Range", "@", "9"}]}], ",", 
         RowBox[{"Sow", "[", 
          RowBox[{"i", "*", "j"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"10000", "/", "i"}]}], "}"}]}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.640607060455105*^9, 3.640607174399588*^9}, {
  3.640607241444364*^9, 3.640607385238658*^9}, {3.640607544392186*^9, 
  3.64060756237924*^9}}],

Cell[BoxData["45228"], "Output",
 CellChangeTimes->{{3.640607081381246*^9, 3.640607096815641*^9}, {
  3.640607335181465*^9, 3.640607386594662*^9}, {3.640607546620679*^9, 
  3.640607563242731*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 33 - Digit cancelling fractions", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640520171527652*^9, 3.640520177479712*^9}, {
   3.640520738744342*^9, 3.640520745551231*^9}, {3.640523426344979*^9, 
   3.640523447312862*^9}, {3.64060620956512*^9, 3.640606214497008*^9}}],

Cell["\<\
The fraction 49/98 is a curious fraction, as an inexperienced mathematician \
in attempting to simplify it may incorrectly believe that 49/98 = 4/8, which \
is correct, is obtained by cancelling the 9s.

We shall consider fractions like, 30/50 = 3/5, to be trivial examples.

There are exactly four non-trivial examples of this type of fraction, less \
than one in value, and containing two digits in the numerator and denominator.

If the product of these four fractions is given in its lowest common terms, \
find the value of the denominator.\
\>", "Text",
 CellChangeTimes->{{3.640606237724186*^9, 3.640606243132511*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Denominator", "[", 
  RowBox[{"Times", "@@", 
   RowBox[{"Cases", "[", 
    RowBox[{
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"10", "#2"}], "+", "#"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"10", "#"}], "+", "#3"}], ")"}]}], ",", 
          RowBox[{"#2", "/", "#3"}]}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"9", ",", "9", ",", "9"}], "}"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n_", ",", "n_"}], "}"}], "/;", 
       RowBox[{"n", "<", "1"}]}], "\[RuleDelayed]", "n"}], ",", 
     RowBox[{"{", "3", "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.640606300839823*^9, 3.640606313689479*^9}, {
  3.640606417437975*^9, 3.640606483197411*^9}}],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{
  3.640606314941206*^9, {3.640606443361929*^9, 3.640606483588629*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 34 - Digit factorials", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640520171527652*^9, 3.640520177479712*^9}, {
   3.640520738744342*^9, 3.640520745551231*^9}, {3.640523426344979*^9, 
   3.640523447312862*^9}}],

Cell["\<\
145 is a curious number, as 1! + 4! + 5! = 1 + 24 + 120 = 145.

Find the sum of all numbers which are equal to the sum of the factorial of \
their digits.

Note: as 1! = 1 and 2! = 2 are not sums they are not included.\
\>", "Text",
 CellChangeTimes->{{3.640523432908529*^9, 3.640523437903235*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"nmax", "=", 
   RowBox[{"IncreaseWhile", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"9", "!"}], "#"}], ">", 
      RowBox[{"10", "^", "#"}]}], "&"}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"Total", "@", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"9", "!"}], "nmax"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"IntegerDigits", "@", "#"}], "!"}], "]"}], "\[Equal]", 
        "#"}], "&"}]}], "]"}]}], "-", "1", "-", "2"}]}]], "Input",
 CellChangeTimes->{{3.640523361545528*^9, 3.640523379688811*^9}, 
   3.640659097190712*^9}],

Cell[BoxData["40730"], "Output",
 CellChangeTimes->{3.640523400659877*^9, 3.640659116459952*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 35 - Circular primes", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640520171527652*^9, 3.640520177479712*^9}, {
   3.640520738744342*^9, 3.640520745551231*^9}, {3.640523426344979*^9, 
   3.640523447312862*^9}, {3.640523777803351*^9, 3.640523779513319*^9}}],

Cell["\<\
The number, 197, is called a circular prime because all rotations of the \
digits: 197, 971, and 719, are themselves prime.

There are thirteen such primes below 100: 2, 3, 5, 7, 11, 13, 17, 31, 37, 71, \
73, 79, and 97.

How many circular primes are there below one million?\
\>", "Text",
 CellChangeTimes->{{3.640523786293753*^9, 3.640523792146682*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"4", "+", 
  RowBox[{"Length", "@", 
   RowBox[{"Catenate", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "3", ",", "7", ",", "9"}], "}"}], ",", "n"}], 
         "]"}], ",", 
        RowBox[{
         RowBox[{"PrimeQ", "/@", 
          RowBox[{"And", "@@", 
           RowBox[{"FromDigits", "/@", 
            RowBox[{"NestList", "[", 
             RowBox[{"RotateLeft", ",", "#", ",", "n"}], "]"}]}]}]}], "&"}]}],
        "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "2", ",", "6"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.640524120924002*^9, 3.640524136308106*^9}, {
  3.640524189383961*^9, 3.640524189587763*^9}, {3.640524226712866*^9, 
  3.640524337619185*^9}, {3.640524374365981*^9, 3.640524418706376*^9}}],

Cell[BoxData["55"], "Output",
 CellChangeTimes->{{3.640524229921173*^9, 3.640524265267206*^9}, {
   3.640524313958792*^9, 3.640524326563678*^9}, 3.640524386776383*^9, 
   3.640524419760783*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 36 - Double-base palindromes", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640520171527652*^9, 3.640520177479712*^9}, {
   3.640520738744342*^9, 3.640520745551231*^9}, {3.640523426344979*^9, 
   3.640523447312862*^9}, {3.640523621749306*^9, 3.640523625292205*^9}}],

Cell[TextData[{
 "The decimal number, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"585", "=", 
    SubscriptBox["1001001001", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " (binary), is palindromic in both bases.\n\nFind the sum of all numbers, \
less than one million, which are palindromic in base 10 and base 2.\n\n\
(Please note that the palindromic number, in either base, may not include \
leading zeros.)"
}], "Text",
 CellChangeTimes->{{3.640523634829469*^9, 3.640523663697153*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Range", "[", "1*^6", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Reverse", "@", "#"}], "\[Equal]", "#"}], "&"}], "/@", 
      RowBox[{"And", "@@", 
       RowBox[{"IntegerDigits", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "10"}], "}"}]}], "]"}]}]}], "&"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.640523513833141*^9, 3.640523592488425*^9}}],

Cell[BoxData["872187"], "Output",
 CellChangeTimes->{{3.640523522386064*^9, 3.640523555863014*^9}, 
   3.640523598828568*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 37 - Truncatable primes", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640520171527652*^9, 3.640520177479712*^9}, {
   3.640520738744342*^9, 3.640520745551231*^9}, {3.640523426344979*^9, 
   3.640523447312862*^9}, {3.640523621749306*^9, 3.640523625292205*^9}, {
   3.640602640754864*^9, 3.640602644502388*^9}}],

Cell["\<\
The number 3797 has an interesting property. Being prime itself, it is \
possible to continuously remove digits from left to right, and remain prime \
at each stage: 3797, 797, 97, and 7. Similarly we can work from right to \
left: 3797, 379, 37, and 3.

Find the sum of the only eleven primes that are both truncatable from left to \
right and right to left.

NOTE: 2, 3, 5, and 7 are not considered to be truncatable primes.\
\>", "Text",
 CellChangeTimes->{{3.640602651489623*^9, 3.640602656305325*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{"Rest", "@", 
   RowBox[{"NestList", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NestWhile", "[", 
       RowBox[{"NextPrime", ",", 
        RowBox[{"#", "+", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"!", 
            RowBox[{"And", "@@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"i", "\[Equal]", "0"}], "||", 
                RowBox[{"PrimeQ", "@", 
                 RowBox[{"FromDigits", "@", 
                  RowBox[{"Take", "[", 
                   RowBox[{"#", ",", "i"}], "]"}]}]}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"-", 
                  RowBox[{"Length", "@", "#"}]}], ",", 
                 RowBox[{"Length", "@", "#"}]}], "}"}]}], "]"}]}]}], "&"}], 
          "@", 
          RowBox[{"IntegerDigits", "@", "#"}]}], "&"}]}], "]"}], "&"}], ",", 
     "7", ",", "11"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.640603607192305*^9, 3.640603776125854*^9}, {
  3.640603833226279*^9, 3.640603834667222*^9}}],

Cell[BoxData["748317"], "Output",
 CellChangeTimes->{{3.64060366283567*^9, 3.640603760613374*^9}, 
   3.640603795937407*^9, 3.64060383817978*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 38 - Pandigital multiples", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640520171527652*^9, 3.640520177479712*^9}, {
   3.640520738744342*^9, 3.640520745551231*^9}, {3.640523426344979*^9, 
   3.640523447312862*^9}, {3.640523621749306*^9, 3.640523625292205*^9}, {
   3.640602640754864*^9, 3.640602644502388*^9}, {3.640608177044352*^9, 
   3.640608181495856*^9}}],

Cell["\<\
Take the number 192 and multiply it by each of 1, 2, and 3:

    192 \[Times] 1 = 192
    192 \[Times] 2 = 384
    192 \[Times] 3 = 576

By concatenating each product we get the 1 to 9 pandigital, 192384576. We \
will call 192384576 the concatenated product of 192 and (1,2,3)

The same can be achieved by starting with 9 and multiplying by 1, 2, 3, 4, \
and 5, giving the pandigital, 918273645, which is the concatenated product of \
9 and (1,2,3,4,5).

What is the largest 1 to 9 pandigital 9-digit number that can be formed as \
the concatenated product of an integer with (1,2, ... , n) where n > 1?\
\>", "Text",
 CellChangeTimes->{{3.640608189804131*^9, 3.640608194541745*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"FromDigits", "/@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Catenate", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Catenate", "@", 
         RowBox[{"IntegerDigits", "[", 
          RowBox[{"j", "*", 
           RowBox[{"Range", "@", "i"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{"5", "-", "i"}], ")"}]}], ",", 
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{"6", "-", "i"}], ")"}]}]}], "}"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Sort", "@", "#"}], "\[Equal]", 
       RowBox[{"Range", "@", "9"}]}], "&"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.640609399496515*^9}],

Cell[BoxData["932718654"], "Output",
 CellChangeTimes->{3.640609401710142*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 39 - Integer right triangles", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640520171527652*^9, 3.640520177479712*^9}, {
   3.640520738744342*^9, 3.640520745551231*^9}, {3.640523426344979*^9, 
   3.640523447312862*^9}, {3.640523621749306*^9, 3.640523625292205*^9}, {
   3.640602640754864*^9, 3.640602644502388*^9}, {3.640605154329062*^9, 
   3.640605158924894*^9}}],

Cell["\<\
If p is the perimeter of a right angle triangle with integral length sides, \
{a,b,c}, there are exactly three solutions for p = 120.

{20,48,52}, {24,45,51}, {30,40,50}

For which value of p \[LessEqual] 1000, is the number of solutions maximised?\
\
\>", "Text",
 CellChangeTimes->{{3.640605165778718*^9, 3.640605183154317*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"Commonest", "@", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"CoprimeQ", "@@", "#"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"1000", "/", "#"}], "]"}], "#"}], "&"}], "@", 
           RowBox[{"Total", "@", "#"}]}], ",", 
          RowBox[{"{", "}"}]}], "]"}], "&"}], "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"m", "^", "2"}], "-", 
          RowBox[{"n", "^", "2"}]}], ",", 
         RowBox[{"2", "m", " ", "n"}], ",", 
         RowBox[{
          RowBox[{"m", "^", "2"}], "+", 
          RowBox[{"n", "^", "2"}]}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", 
        RowBox[{"Sqrt", "@", "500"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"m", "-", "1"}]}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.640605502451786*^9, 3.64060561406462*^9}, {
   3.640605657336495*^9, 3.640605658592584*^9}, {3.640605705803656*^9, 
   3.640605787826728*^9}, 3.640605863867057*^9, {3.640605965873564*^9, 
   3.640605966339957*^9}, {3.640605999469766*^9, 3.640606020501646*^9}}],

Cell[BoxData["840"], "Output",
 CellChangeTimes->{{3.640605509298221*^9, 3.640605614411458*^9}, 
   3.640605659178913*^9, {3.640605709522425*^9, 3.640605755008325*^9}, 
   3.640605788350588*^9, 3.640605864994302*^9, 3.640605967086315*^9, {
   3.640606001261603*^9, 3.640606020961884*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 40 - Champernowne\[CloseCurlyQuote]s constant", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640520171527652*^9, 3.640520177479712*^9}, {
   3.640520738744342*^9, 3.640520745551231*^9}, {3.640523426344979*^9, 
   3.640523447312862*^9}, {3.640523621749306*^9, 3.640523625292205*^9}, {
   3.640600968559671*^9, 3.640600974455387*^9}}],

Cell[TextData[{
 "An irrational decimal fraction is created by concatenating the positive \
integers:\n\n0.12345678910",
 StyleBox["1",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 "112131415161718192021...\n\nIt can be seen that the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["12", "th"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " digit of the fractional part is 1.\n\nIf ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["d", "n"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " represents the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " digit of the fractional part, find the value of the following expression.\n\
\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", "1"], " ", "\[Times]", " ", 
    SubscriptBox["d", "10"], " ", "\[Times]", " ", 
    SubscriptBox["d", "100"], " ", "\[Times]", " ", 
    SubscriptBox["d", "1000"], " ", "\[Times]", " ", 
    SubscriptBox["d", "10000"], " ", "\[Times]", " ", 
    SubscriptBox["d", "100000"], " ", "\[Times]", " ", 
    SubscriptBox["d", "1000000"]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.640601154461467*^9, 3.640601247473656*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Times", "@@", 
  RowBox[{
   RowBox[{"RealDigits", "[", 
    RowBox[{
     RowBox[{"ChampernowneNumber", "[", "10", "]"}], ",", "10", ",", 
     "1000000"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", 
     RowBox[{"10", "^", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "6"}], "]"}]}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.640601004238724*^9, 3.640601017203109*^9}, {
   3.640601251393199*^9, 3.640601297058799*^9}, 3.640601464085829*^9}],

Cell[BoxData["210"], "Output",
 CellChangeTimes->{{3.640600999231085*^9, 3.640601017721016*^9}, {
   3.64060125983039*^9, 3.640601277669006*^9}, 3.640601315513333*^9, 
   3.640601466267238*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 41 - Pandigital prime", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640520171527652*^9, 3.640520177479712*^9}, {
   3.640520738744342*^9, 3.640520745551231*^9}, {3.640523426344979*^9, 
   3.640523447312862*^9}, {3.640523621749306*^9, 3.640523625292205*^9}, {
   3.640600968559671*^9, 3.640600974455387*^9}, {3.640607742918773*^9, 
   3.640607748701214*^9}}],

Cell["\<\
We shall say that an n-digit number is pandigital if it makes use of all the \
digits 1 to n exactly once. For example, 2143 is a 4-digit pandigital and is \
also prime.

What is the largest n-digit pandigital prime that exists?\
\>", "Text",
 CellChangeTimes->{{3.640607757319577*^9, 3.640607762979622*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SelectFirst", "[", 
  RowBox[{
   RowBox[{"Reverse", "@", 
    RowBox[{"Catenate", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"FromDigits", "/@", 
        RowBox[{"Permutations", "@", 
         RowBox[{"Range", "@", "i"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "9"}], "}"}]}], "]"}]}]}], ",", "PrimeQ"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.640607642464404*^9, 3.64060769403628*^9}, {
  3.640607727896393*^9, 3.640607734501017*^9}, {3.640607780702205*^9, 
  3.640607812457329*^9}, {3.640607844031409*^9, 3.640607867635446*^9}}],

Cell[BoxData["7652413"], "Output",
 CellChangeTimes->{{3.640607644639871*^9, 3.640607735520847*^9}, {
   3.64060778417904*^9, 3.640607810042564*^9}, 3.640607868673342*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 42 - Coded triangle numbers", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640520171527652*^9, 3.640520177479712*^9}, {
   3.640520738744342*^9, 3.640520745551231*^9}, {3.640523426344979*^9, 
   3.640523447312862*^9}, {3.640523621749306*^9, 3.640523625292205*^9}, {
   3.640600968559671*^9, 3.640600974455387*^9}, {3.640602086796955*^9, 
   3.640602092404351*^9}}],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]]],
 " term of the sequence of triangle numbers is given by, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", "n"], " ", "=", 
    RowBox[{"\.bd", " ", 
     RowBox[{"n", "(", 
      RowBox[{"n", "+", "1"}], ")"}]}]}], TraditionalForm]]],
 "; so the first ten triangle numbers are:\n\n1, 3, 6, 10, 15, 21, 28, 36, \
45, 55, ...\n\nBy converting each letter in a word to a number corresponding \
to its alphabetical position and adding these values we form a word value. \
For example, the word value for SKY is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"19", "+", "11", "+", "25"}], "=", 
    RowBox[{"55", "=", 
     SubscriptBox["t", "10"]}]}], TraditionalForm]]],
 ". If the word value is a triangle number then we shall call the word a \
triangle word.\n\nUsing ",
 ButtonBox["words.txt",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/project/resources/p042_words.txt"], None},
  ButtonNote->"https://projecteuler.net/project/resources/p042_words.txt"],
 " (right click and \[OpenCurlyQuote]Save Link/Target \
As...\[CloseCurlyQuote]), a 16K text file containing nearly two-thousand \
common English words, how many are triangle words?"
}], "Text",
 CellChangeTimes->{{3.640602098383865*^9, 3.640602150973186*^9}, {
  3.640602274234318*^9, 3.640602274234867*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], "n", 
     RowBox[{"(", 
      RowBox[{"n", "+", "1"}], ")"}]}], "\[Equal]", "t"}], ",", "n"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.640602326642082*^9, 3.640602355764746*^9}, 
   3.640602395061259*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"n", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"8", " ", "t"}]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"8", " ", "t"}]}]]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.640602356705663*^9, 3.640602400231629*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"words", "=", 
   RowBox[{"ToExpression", "[", 
    RowBox[{"\"\<{\>\"", "<>", 
     RowBox[{
     "Import", "@", 
      "\"\<https://projecteuler.net/project/resources/p042_words.txt\>\""}], 
     "<>", "\"\<}\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.640602165016338*^9, 3.640602194076618*^9}, {
  3.640602232179925*^9, 3.640602233317448*^9}, {3.640602287519767*^9, 
  3.640602291683841*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Select", "[", 
   RowBox[{"words", ",", 
    RowBox[{
     RowBox[{"IntegerQ", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"1", "+", 
        RowBox[{"8", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"ToCharacterCode", "@", "#"}], "-", "64"}], "]"}]}]}], 
       "]"}], "]"}], "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.640602373658355*^9, 3.640602440377947*^9}}],

Cell[BoxData["162"], "Output",
 CellChangeTimes->{{3.640602381811164*^9, 3.640602403876189*^9}, 
   3.640602445824855*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 43 - Sub-string divisibility", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640520171527652*^9, 3.640520177479712*^9}, {
   3.640520738744342*^9, 3.640520745551231*^9}, {3.640523426344979*^9, 
   3.640523447312862*^9}, {3.640523621749306*^9, 3.640523625292205*^9}, {
   3.640600968559671*^9, 3.640600974455387*^9}, {3.640602086796955*^9, 
   3.640602092404351*^9}, {3.640676970551809*^9, 3.640676974878777*^9}}],

Cell[TextData[{
 "The number, 1406357289, is a 0 to 9 pandigital number because it is made up \
of each of the digits 0 to 9 in some order, but it also has a rather \
interesting sub-string divisibility property.\n\nLet ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["d", "1"], TraditionalForm]]],
 " be the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["1", "st"], "s"}], TraditionalForm]]],
 " digit, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["d", "2"], TraditionalForm]]],
 " be the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "nd"], TraditionalForm]]],
 " digit, and so on. In this way, we note the following:\n\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["d", "2"], 
     SubscriptBox["d", "3"], 
     SubscriptBox["d", "4"]}], "=", "406"}], TraditionalForm]]],
 " is divisible by 2\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["d", "3"], 
     SubscriptBox["d", "4"], 
     SubscriptBox["d", "5"]}], "=", "063"}], TraditionalForm]]],
 " is divisible by 3\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["d", "4"], 
     SubscriptBox["d", "5"], 
     SubscriptBox["d", "6"]}], "=", "635"}], TraditionalForm]]],
 " is divisible by 5\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["d", "5"], 
     SubscriptBox["d", "6"], 
     SubscriptBox["d", "7"]}], "=", "357"}], TraditionalForm]]],
 " is divisible by 7\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["d", "6"], 
     SubscriptBox["d", "7"], 
     SubscriptBox["d", "8"]}], "=", "572"}], TraditionalForm]]],
 " is divisible by 11\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["d", "7"], 
     SubscriptBox["d", "8"], 
     SubscriptBox["d", "9"]}], "=", "728"}], TraditionalForm]]],
 " is divisible by 13\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["d", "8"], 
     SubscriptBox["d", "9"], 
     SubscriptBox["d", "10"]}], "=", "289"}], TraditionalForm]]],
 " is divisible by 17\n\nFind the sum of all 0 to 9 pandigital numbers with \
this property."
}], "Text",
 CellChangeTimes->{{3.6406769857792*^9, 3.640677135317155*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"FromDigits", "/@", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"Catenate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Through", "@", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Append", "/@", 
               RowBox[{"Complement", "[", 
                RowBox[{
                 RowBox[{"Range", "[", 
                  RowBox[{"0", ",", "9"}], "]"}], ",", "#"}], "]"}]}], ")"}], 
             "@", "#"}]}], "&"}], "/@", "#"}], "]"}], ",", 
        RowBox[{"ds_", "/;", 
         RowBox[{"Divisible", "[", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"FromDigits", "@", "ds"}], ",", "1000"}], "]"}], ",", 
           "#2"}], "]"}]}]}], "]"}], "&"}], ",", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"Permutations", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "9"}], "]"}], ",", 
         RowBox[{"{", "3", "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "__"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17"}], 
      "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.64067864995107*^9, 3.640678660659562*^9}, 
   3.640678803059116*^9}],

Cell[BoxData["16695334890"], "Output",
 CellChangeTimes->{{3.640678651104927*^9, 3.64067866164608*^9}, {
  3.640678804837459*^9, 3.640678809105098*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 44 - Pentagon numbers", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640520171527652*^9, 3.640520177479712*^9}, {
   3.640520738744342*^9, 3.640520745551231*^9}, {3.640523426344979*^9, 
   3.640523447312862*^9}, {3.640523621749306*^9, 3.640523625292205*^9}, {
   3.640600968559671*^9, 3.640600974455387*^9}, {3.640602086796955*^9, 
   3.640602092404351*^9}, {3.640604796218103*^9, 3.640604799990348*^9}, {
   3.640680764534817*^9, 3.640680771563355*^9}}],

Cell[TextData[{
 "Pentagonal numbers are generated by the formula, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["P", "n"], "=", 
    RowBox[{"n", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", "n"}], "\[Minus]", "1"}], ")"}], "/", "2"}]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". The first ten pentagonal numbers are:\n\n1, 5, 12, 22, 35, 51, 70, 92, \
117, 145, ...\n\nIt can be seen that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["P", "4"], " ", "+", " ", 
     SubscriptBox["P", "7"]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"22", " ", "+", " ", "70"}], " ", "=", " ", 
     RowBox[{"92", " ", "=", " ", 
      SubscriptBox["P", "8"]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". However, their difference, 70 \[Minus] 22 = 48, is not pentagonal.\n\n\
Find the pair of pentagonal numbers, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "j"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "k"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", for which their sum and difference are pentagonal and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"D", " ", "=", " ", 
    RowBox[{"|", 
     RowBox[{
      SubscriptBox["P", "k"], " ", "\[Minus]", " ", 
      SubscriptBox["P", "j"]}], "|"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is minimised; what is the value of D?"
}], "Text",
 CellChangeTimes->{{3.640680777549701*^9, 3.640680851076474*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "[", "n_", "]"}], ":=", 
  RowBox[{"n", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", "n"}], "-", "1"}], ")"}], "/", "2"}]}]}]], "Input",
 CellChangeTimes->{{3.640681930159007*^9, 3.640681938529283*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"p", "[", "n", "]"}], "\[Equal]", "x"}], ",", "n"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.640685458254043*^9, 3.640685463863957*^9}, {
  3.640689473209*^9, 3.640689474128153*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"n", "\[Rule]", 
     RowBox[{
      FractionBox["1", "6"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"24", " ", "x"}]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", "\[Rule]", 
     RowBox[{
      FractionBox["1", "6"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"24", " ", "x"}]}]]}], ")"}]}]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.640685464407259*^9, 3.640689474880941*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pentagonalQ", "[", "x_", "]"}], ":=", 
   RowBox[{"IntegerQ", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "+", 
         RowBox[{"24", "x"}]}], "]"}]}], ")"}], "/", "6"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.640685442558026*^9, 3.640685485005522*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"k", "+", "i"}], "]"}], "-", 
     RowBox[{"p", "[", "k", "]"}]}], "\[Equal]", 
    RowBox[{"p", "[", "d", "]"}]}], ",", "k"}], "]"}]], "Input",
 CellChangeTimes->{{3.640689495565074*^9, 3.64068952904306*^9}, {
  3.640689771968714*^9, 3.640689781033126*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"k", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "d"}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["d", "2"]}], "+", "i", "-", 
      RowBox[{"3", " ", 
       SuperscriptBox["i", "2"]}]}], 
     RowBox[{"6", " ", "i"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.640689457916718*^9, {3.640689500147408*^9, 3.640689529749316*^9}, {
   3.640689775418273*^9, 3.640689781413368*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "@", 
  RowBox[{"IncreaseWhile", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"Or", "@@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"IntegerQ", "@", "#"}], "&&", 
           RowBox[{"pentagonalQ", "[", 
            RowBox[{
             RowBox[{"p", "[", 
              RowBox[{"#", "+", "i"}], "]"}], "+", 
             RowBox[{"p", "[", "#", "]"}]}], "]"}]}], "&"}], "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "#"}], "+", 
            RowBox[{"3", 
             RowBox[{"#", "^", "2"}]}], "+", "i", "-", 
            RowBox[{"3", 
             RowBox[{"i", "^", "2"}]}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"6", "i"}], ")"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"#", "-", "1"}]}], "}"}]}], "]"}]}]}], "&"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.640689992305221*^9, 3.640690027130164*^9}}],

Cell[BoxData["5482660"], "Output",
 CellChangeTimes->{{3.640689999640462*^9, 3.640690038908686*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 45 - Triangular, pentagonal, and hexagonal", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640520171527652*^9, 3.640520177479712*^9}, {
   3.640520738744342*^9, 3.640520745551231*^9}, {3.640523426344979*^9, 
   3.640523447312862*^9}, {3.640523621749306*^9, 3.640523625292205*^9}, {
   3.640600968559671*^9, 3.640600974455387*^9}, {3.640602086796955*^9, 
   3.640602092404351*^9}, {3.640604796218103*^9, 3.640604799990348*^9}, {
   3.640680816323843*^9, 3.640680820611433*^9}, {3.640682860696197*^9, 
   3.64068286207417*^9}}],

Cell[TextData[{
 "Triangle, pentagonal, and hexagonal numbers are generated by the following \
formulae:\nTriangle \t  \t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", "n"], "=", 
    RowBox[{
     RowBox[{"n", "(", 
      RowBox[{"n", "+", "1"}], ")"}], "/", "2"}]}], TraditionalForm]]],
 " \t  \t1, 3, 6, 10, 15, ...\nPentagonal \t  \t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["P", "n"], "=", 
    RowBox[{"n", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", "n"}], "\[Minus]", "1"}], ")"}], "/", "2"}]}]}], 
   TraditionalForm]]],
 " \t  \t1, 5, 12, 22, 35, ...\nHexagonal \t  \t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["H", "n"], "=", 
    RowBox[{"n", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "n"}], "\[Minus]", "1"}], ")"}]}]}], TraditionalForm]]],
 " \t  \t1, 6, 15, 28, 45, ...\n\nIt can be verified that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", "285"], " ", "=", " ", 
    RowBox[{
     SubscriptBox["P", "165"], " ", "=", " ", 
     RowBox[{
      SubscriptBox["H", "143"], " ", "=", " ", "40755"}]}]}], 
   TraditionalForm]]],
 ".\n\nFind the next triangle number that is also pentagonal and hexagonal."
}], "Text",
 CellChangeTimes->{{3.640604806887696*^9, 3.640604878517984*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solution", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", "2"}], "n", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", "n"}], "-", "1"}], ")"}]}], "\[Equal]", 
       RowBox[{"m", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "m"}], "-", "1"}], ")"}]}]}], ",", 
      RowBox[{"m", ">", "0"}], ",", 
      RowBox[{"n", ">", "0"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "n"}], "}"}], ",", "Integers"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.640605084601933*^9, 3.640605086606419*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"m", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", "48"], " ", 
        RowBox[{"(", 
         RowBox[{"12", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"7", "-", 
                 RowBox[{"4", " ", 
                  SqrtBox["3"]}]}], ")"}], 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"C", "[", "1", "]"}]}]}]]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"7", "-", 
                 RowBox[{"4", " ", 
                  SqrtBox["3"]}]}], ")"}], 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"C", "[", "1", "]"}]}]}]]}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"7", "+", 
                 RowBox[{"4", " ", 
                  SqrtBox["3"]}]}], ")"}], 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"C", "[", "1", "]"}]}]}]]}], "-", 
             RowBox[{
              SqrtBox["3"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"7", "+", 
                 RowBox[{"4", " ", 
                  SqrtBox["3"]}]}], ")"}], 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"C", "[", "1", "]"}]}]}]]}]}], ")"}]}]}], ")"}]}], 
       ",", 
       RowBox[{
        RowBox[{
         RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}], "&&", 
        RowBox[{
         RowBox[{"C", "[", "1", "]"}], "\[GreaterEqual]", "0"}]}]}], "]"}]}], 
    ",", 
    RowBox[{"n", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", "6"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"7", "-", 
                 RowBox[{"4", " ", 
                  SqrtBox["3"]}]}], ")"}], 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"C", "[", "1", "]"}]}]}]]}], "-", 
             RowBox[{
              SqrtBox["3"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"7", "-", 
                 RowBox[{"4", " ", 
                  SqrtBox["3"]}]}], ")"}], 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"C", "[", "1", "]"}]}]}]]}], "-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"7", "+", 
                RowBox[{"4", " ", 
                 SqrtBox["3"]}]}], ")"}], 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", 
                RowBox[{"C", "[", "1", "]"}]}]}]], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"7", "+", 
                 RowBox[{"4", " ", 
                  SqrtBox["3"]}]}], ")"}], 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"C", "[", "1", "]"}]}]}]]}]}], ")"}]}]}], ")"}]}], 
       ",", 
       RowBox[{
        RowBox[{
         RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}], "&&", 
        RowBox[{
         RowBox[{"C", "[", "1", "]"}], "\[GreaterEqual]", "0"}]}]}], 
      "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.640605087954238*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"m", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "m"}], "-", "1"}], ")"}]}], "/.", 
    RowBox[{"First", "@", "solution"}]}], "/.", 
   RowBox[{
    RowBox[{"C", "[", "1", "]"}], "\[Rule]", "2"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.640603961432949*^9, 3.640604035177728*^9}, 
   3.640604138748512*^9, {3.64060450188652*^9, 3.640604525639961*^9}, {
   3.640604984280734*^9, 3.640605056820308*^9}, {3.640605091523618*^9, 
   3.640605096304607*^9}}],

Cell[BoxData["1533776805"], "Output",
 CellChangeTimes->{
  3.640604527378795*^9, 3.640604994781018*^9, {3.64060503667265*^9, 
   3.640605057865676*^9}, 3.640605098884103*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 46 - Goldbach\[CloseCurlyQuote]s other conjecture", \
"Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640520171527652*^9, 3.640520177479712*^9}, {
   3.640520738744342*^9, 3.640520745551231*^9}, {3.640523426344979*^9, 
   3.640523447312862*^9}, {3.640523621749306*^9, 3.640523625292205*^9}, {
   3.640600968559671*^9, 3.640600974455387*^9}, {3.640602086796955*^9, 
   3.640602092404351*^9}, {3.640604796218103*^9, 3.640604799990348*^9}, {
   3.640674817613442*^9, 3.640674821137399*^9}}],

Cell[TextData[{
 "It was proposed by Christian Goldbach that every odd composite number can \
be written as the sum of a prime and twice a square.\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"9", " ", "=", " ", 
    RowBox[{"7", " ", "+", " ", 
     RowBox[{"2", "\[Times]", 
      SuperscriptBox["1", "2"]}]}]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"15", " ", "=", " ", 
    RowBox[{"7", " ", "+", " ", 
     RowBox[{"2", "\[Times]", 
      SuperscriptBox["2", "2"]}]}]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"21", " ", "=", " ", 
    RowBox[{"3", " ", "+", " ", 
     RowBox[{"2", "\[Times]", 
      SuperscriptBox["3", "2"]}]}]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"25", " ", "=", " ", 
    RowBox[{"7", " ", "+", " ", 
     RowBox[{"2", "\[Times]", 
      SuperscriptBox["3", "2"]}]}]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"27", " ", "=", " ", 
    RowBox[{"19", " ", "+", " ", 
     RowBox[{"2", "\[Times]", 
      SuperscriptBox["2", "2"]}]}]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"33", " ", "=", " ", 
    RowBox[{"31", " ", "+", " ", 
     RowBox[{"2", "\[Times]", 
      SuperscriptBox["1", "2"]}]}]}], TraditionalForm]]],
 "\n\nIt turns out that the conjecture was false.\n\nWhat is the smallest odd \
composite that cannot be written as the sum of a prime and twice a square?"
}], "Text",
 CellChangeTimes->{{3.640674828519482*^9, 3.640674883563155*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IncreaseWhile", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Or", "@@", 
     RowBox[{"PrimeQ", "[", 
      RowBox[{"#", "-", 
       RowBox[{"2", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"#", "/", "2"}], "]"}]}], "]"}], "^", "2"}]}]}], "]"}]}], 
    "&"}], ",", "3", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.641345228527622*^9, 3.641345239236379*^9}}],

Cell[BoxData["5777"], "Output",
 CellChangeTimes->{{3.641345240225234*^9, 3.641345249927378*^9}, 
   3.641345342034326*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 47 - Distinct primes factors", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640520171527652*^9, 3.640520177479712*^9}, {
   3.640520738744342*^9, 3.640520745551231*^9}, {3.640523426344979*^9, 
   3.640523447312862*^9}, {3.640523621749306*^9, 3.640523625292205*^9}, {
   3.640600968559671*^9, 3.640600974455387*^9}, {3.640602086796955*^9, 
   3.640602092404351*^9}, {3.640604796218103*^9, 3.640604799990348*^9}, {
   3.640674817613442*^9, 3.640674821137399*^9}, {3.640678977318686*^9, 
   3.640678981158103*^9}}],

Cell["\<\
The first two consecutive numbers to have two distinct prime factors are:

14 = 2 \[Times] 7
15 = 3 \[Times] 5

The first three consecutive numbers to have three distinct prime factors are:

644 = 2\.b2 \[Times] 7 \[Times] 23
645 = 3 \[Times] 5 \[Times] 43
646 = 2 \[Times] 17 \[Times] 19.

Find the first four consecutive integers to have four distinct prime factors. \
What is the first of these numbers?\
\>", "Text",
 CellChangeTimes->{{3.640678987605211*^9, 3.640678995335195*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IncreaseWhile", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Or", "@@", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"PrimeNu", "@", 
        RowBox[{"{", 
         RowBox[{"#", ",", 
          RowBox[{"#", "+", "1"}], ",", 
          RowBox[{"#", "+", "2"}], ",", 
          RowBox[{"#", "+", "3"}]}], "}"}]}], "\[NotEqual]", 
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "4", ",", "4"}], "}"}]}], "]"}]}], "]"}], 
   "&"}], "]"}]], "Input",
 CellChangeTimes->{{3.64067903798931*^9, 3.640679196292091*^9}, {
   3.640679339640467*^9, 3.640679346722192*^9}, 3.640679382379634*^9}],

Cell[BoxData["134043"], "Output",
 CellChangeTimes->{{3.640679059485567*^9, 3.640679078563228*^9}, 
   3.640679124174607*^9, {3.640679154334864*^9, 3.640679207200278*^9}, 
   3.640679387182038*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 48 - Self powers", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}}],

Cell[TextData[{
 "The series, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["1", "1"], "+", 
       SuperscriptBox["2", "2"], "+", 
       SuperscriptBox["3", "3"], "+"}], "..."}], "+", 
     SuperscriptBox["10", "10"]}], "=", "10405071317"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nFind the last ten digits of the series, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["1", "1"], "+", 
      SuperscriptBox["2", "2"], "+", 
      SuperscriptBox["3", "3"], "+"}], "..."}], "+", 
    SuperscriptBox["1000", "1000"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.640519369564018*^9, 3.640519430525407*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"i", "^", "i"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1000"}], "}"}]}], "]"}], ",", "1*^10"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.64051944022621*^9, 3.640519465817413*^9}, {
  3.640519610235984*^9, 3.640519620799982*^9}}],

Cell[BoxData["9110846700"], "Output",
 CellChangeTimes->{{3.640519443782602*^9, 3.640519466291329*^9}, 
   3.640519624984555*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 49 - Prime permutations", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640679579837533*^9, 3.640679584158731*^9}}],

Cell["\<\
The arithmetic sequence, 1487, 4817, 8147, in which each of the terms \
increases by 3330, is unusual in two ways: (i) each of the three terms are \
prime, and, (ii) each of the 4-digit numbers are permutations of one another.

There are no arithmetic sequences made up of three 1-, 2-, or 3-digit primes, \
exhibiting this property, but there is one other 4-digit increasing sequence.

What 12-digit number do you form by concatenating the three terms in this \
sequence?\
\>", "Text",
 CellChangeTimes->{{3.640679590523488*^9, 3.640679596100387*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"FromDigits", "/@", 
   RowBox[{"Cases", "[", 
    RowBox[{
     RowBox[{"GatherBy", "[", 
      RowBox[{
       RowBox[{"IntegerDigits", "@", 
        RowBox[{"PrimeRange", "[", 
         RowBox[{"1*^3", ",", "1*^4"}], "]"}]}], ",", "Sort"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "___", ",", "a_", ",", "___", ",", "b_", ",", "___", ",", "c_", ",", 
         "___"}], "}"}], "/;", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#1", "+", "#3"}], "\[Equal]", 
            RowBox[{"2", "#2"}]}], "&&", 
           RowBox[{"#1", "\[NotEqual]", "1487"}]}], "&"}], "@@", 
         RowBox[{"FromDigits", "/@", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}]}]}], ")"}]}], 
      "\[RuleDelayed]", 
      RowBox[{"Join", "[", 
       RowBox[{"a", ",", "b", ",", "c"}], "]"}]}]}], "]"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.640680042034697*^9, 3.640680094479748*^9}, {
   3.64068014220387*^9, 3.640680147676224*^9}, {3.640680188148301*^9, 
   3.640680225096126*^9}, 3.640680264700683*^9, {3.640680303078208*^9, 
   3.640680320148003*^9}, {3.640680389295419*^9, 3.640680431899074*^9}, {
   3.640680462134565*^9, 3.640680529292345*^9}, {3.642561850223184*^9, 
   3.642561873980149*^9}}],

Cell[BoxData["296962999629"], "Output",
 CellChangeTimes->{3.642561876604594*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 50 - Consecutive prime sum", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640659705205784*^9, 3.640659725903356*^9}}],

Cell["\<\
The prime 41, can be written as the sum of six consecutive primes:
41 = 2 + 3 + 5 + 7 + 11 + 13

This is the longest sum of consecutive primes that adds to a prime below \
one-hundred.

The longest sum of consecutive primes below one-thousand that adds to a \
prime, contains 21 terms, and is equal to 953.

Which prime, below one-million, can be written as the sum of the most \
consecutive primes?\
\>", "Text",
 CellChangeTimes->{{3.640659734051913*^9, 3.640659741947853*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "//.", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n_", ",", 
        RowBox[{"{", 
         RowBox[{"max_", ",", "sum_"}], "}"}]}], "}"}], "/;", 
      RowBox[{"n", "<", 
       RowBox[{"PrimePi", "[", 
        RowBox[{"1*^6", "/", "max"}], "]"}]}]}], "\[RuleDelayed]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n", "+", "1"}], ",", 
       RowBox[{"First", "@", 
        RowBox[{"MaximalBy", "[", 
         RowBox[{
          RowBox[{"Prepend", "[", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"NestWhileList", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "+", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", 
                    RowBox[{"Prime", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "n"}], "]"}]}], 
                   "}"}]}], "&"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "0"}], "}"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "<", "1*^6"}], "&"}]}], 
               "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"PrimeQ", "@", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "&&", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "<", "1*^6"}]}], "&"}]}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"max", ",", "sum"}], "}"}]}], "]"}], ",", "First"}], 
         "]"}]}]}], "}"}]}]}], ")"}], "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{3.640663076424888*^9}],

Cell[BoxData["997651"], "Output",
 CellChangeTimes->{3.640663079618655*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 51 - 75", "Subsection",
 CellChangeTimes->{{3.640509015355191*^9, 3.640509022245683*^9}, {
  3.640519338671053*^9, 3.640519341443173*^9}, {3.6405218351164*^9, 
  3.640521837410107*^9}}],

Cell[CellGroupData[{

Cell["Problem 51 - Prime digit replacements", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.64092609153257*^9, 3.640926095361416*^9}}],

Cell[TextData[{
 "By replacing the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["1", "st"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " digit of the 2-digit number *3, it turns out that six of the nine possible \
values: 13, 23, 43, 53, 73, and 83, are all prime.\n\nBy replacing the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["3", "rd"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["4", "th"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " digits of 56**3 with the same digit, this 5-digit number is the first \
example having seven primes among the ten generated numbers, yielding the \
family: 56003, 56113, 56333, 56443, 56663, 56773, and 56993. Consequently \
56003, being the first member of this family, is the smallest prime with this \
property.\n\nFind the smallest prime which, by replacing part of the number \
(not necessarily adjacent digits) with the same digit, is part of an eight \
prime value family."
}], "Text",
 CellChangeTimes->{{3.640926103417212*^9, 3.640926127688728*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestWhile", "[", 
  RowBox[{"NextPrime", ",", "2", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"!", 
      RowBox[{"Or", "@@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"#", ",", "i"}], "]"}], "&&", 
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"FromDigits", "[", 
                RowBox[{"#", "/.", 
                 RowBox[{"{", 
                  RowBox[{"i", "\[Rule]", "j"}], "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "i", ",", "9"}], "}"}]}], "]"}], ",", 
             RowBox[{"_", "?", "PrimeQ"}]}], "]"}], "\[GreaterEqual]", 
           "8"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "2"}], "}"}]}], "]"}]}]}], "&"}], "@*", 
    "IntegerDigits"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.640929098333478*^9, 3.640929110873569*^9}, {
  3.64092917196144*^9, 3.640929260209748*^9}, {3.640929291594433*^9, 
  3.640929421482461*^9}, {3.640929521051687*^9, 3.640929626189863*^9}, {
  3.640929658764494*^9, 3.640929757038781*^9}}],

Cell[BoxData["121313"], "Output",
 CellChangeTimes->{{3.64092923614879*^9, 3.640929260581122*^9}, {
  3.640929346882189*^9, 3.640929421908898*^9}, {3.64092952445578*^9, 
  3.640929626564422*^9}, {3.640929659321279*^9, 3.640929682958869*^9}, {
  3.640929739636619*^9, 3.64092975854799*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 52 - Permuted multiples", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}}],

Cell["\<\
It can be seen that the number, 125874, and its double, 251748, contain \
exactly the same digits, but in a different order.

Find the smallest positive integer, x, such that 2x, 3x, 4x, 5x, and 6x, \
contain the same digits.\
\>", "Text",
 CellChangeTimes->{{3.64060795258861*^9, 3.640607955965556*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "[", 
  RowBox[{
   RowBox[{"RealDigits", "[", 
    RowBox[{"1", "/", "7"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.640607970213601*^9, 3.640608014609741*^9}}],

Cell[BoxData["142857"], "Output",
 CellChangeTimes->{3.640607981869466*^9, 3.640608015221624*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 53 - Combinatoric selections", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640609706940191*^9, 3.640609712530469*^9}}],

Cell[TextData[{
 "There are exactly ten ways of selecting three from five, 12345:\n\n123, \
124, 125, 134, 135, 145, 234, 235, 245, and 345\n\nIn combinatorics, we use \
the notation, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["C", "3", "5"], "=", "10"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nIn general,\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["C", "r", "n"], "=", 
    FractionBox[
     RowBox[{"n", "!"}], 
     RowBox[{
      RowBox[{"r", "!"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "\[Minus]", "r"}], ")"}], "!"}]}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ",where r \[LessEqual] n, n! = n\[Times](n\[Minus]1)\[Times]...\[Times]3\
\[Times]2\[Times]1, and 0! = 1.\n\nIt is not until n = 23, that a value \
exceeds one-million: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["C", "10", "23"], " ", "=", " ", "1144066"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nHow many, not necessarily distinct, values of  ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["C", "r", "n"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", for 1 \[LessEqual] n \[LessEqual] 100, are greater than one-million?"
}], "Text",
 CellChangeTimes->{{3.640609720427543*^9, 3.640609778676962*^9}, {
  3.640609874912407*^9, 3.640609992104522*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"Array", "[", 
    RowBox[{"Binomial", ",", 
     RowBox[{"{", 
      RowBox[{"100", ",", "100"}], "}"}]}], "]"}], ",", 
   RowBox[{"n_", "/;", 
    RowBox[{"n", ">", "1*^6"}]}], ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.640610060075558*^9, 3.640610114048899*^9}}],

Cell[BoxData["4075"], "Output",
 CellChangeTimes->{3.640610064884538*^9, 3.640610114994302*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 54 - Poker hands", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640609706940191*^9, 3.640609712530469*^9}, {
   3.640828145526115*^9, 3.640828152573837*^9}}],

Cell[TextData[{
 "In the card game poker, a hand consists of five cards and are ranked, from \
lowest to highest, in the following way:\n\n    ",
 StyleBox["High Card",
  FontWeight->"Bold"],
 ": Highest value card.\n    ",
 StyleBox["One Pair",
  FontWeight->"Bold"],
 ": Two cards of the same value.\n    ",
 StyleBox["Two Pairs",
  FontWeight->"Bold"],
 ": Two different pairs.\n    ",
 StyleBox["Three of a Kind",
  FontWeight->"Bold"],
 ": Three cards of the same value.\n    ",
 StyleBox["Straight",
  FontWeight->"Bold"],
 ": All cards are consecutive values.\n    ",
 StyleBox["Flush",
  FontWeight->"Bold"],
 ": All cards of the same suit.\n    ",
 StyleBox["Full House",
  FontWeight->"Bold"],
 ": Three of a kind and a pair.\n    ",
 StyleBox["Four of a Kind",
  FontWeight->"Bold"],
 ": Four cards of the same value.\n    ",
 StyleBox["Straight Flush",
  FontWeight->"Bold"],
 ": All cards are consecutive values of same suit.\n    ",
 StyleBox["Royal Flush",
  FontWeight->"Bold"],
 ": Ten, Jack, Queen, King, Ace, in same suit.\n\nThe cards are valued in the \
order:\n2, 3, 4, 5, 6, 7, 8, 9, 10, Jack, Queen, King, Ace.\n\nIf two players \
have the same ranked hands then the rank made up of the highest value wins; \
for example, a pair of eights beats a pair of fives (see example 1 below). \
But if two ranks tie, for example, both players have a pair of queens, then \
highest cards in each hand are compared (see example 4 below); if the highest \
cards tie then the next highest cards are compared, and so on.\n\nConsider \
the following five hands dealt to two players:\n",
 StyleBox["Hand",
  FontWeight->"Bold"],
 "\t",
 StyleBox["Player 1",
  FontWeight->"Bold"],
 "\t\t",
 StyleBox["Player 2",
  FontWeight->"Bold"],
 "\t\t",
 StyleBox["Winner",
  FontWeight->"Bold"],
 "\n",
 StyleBox["1",
  FontWeight->"Bold"],
 "\t5H 5C 6S 7S KD\t2C 3S 8S 8D TD\tPlayer 2\n\tPair of Fives\t\tPair of \
Eights\n",
 StyleBox["2",
  FontWeight->"Bold"],
 "\t5D 8C 9S JS AC\t2C 5C 7D 8S QH\tPlayer 1\n\tHighest card Ace\tHighest \
card Queen\n",
 StyleBox["3",
  FontWeight->"Bold"],
 "\t2D 9C AS AH AC\t3D 6D 7D TD QD\tPlayer 2\n\tThree Aces\t\tFlush with \
Diamonds\n",
 StyleBox["4",
  FontWeight->"Bold"],
 "\t4D 6S 9H QH QC\t3D 6D 7H QD QS\tPlayer 1\n\tPair of Queens\tPair of \
Queens\n\tHighest card Nine\tHighest card Seven\n",
 StyleBox["5",
  FontWeight->"Bold"],
 "\t2H 2D 4C 4D 4S\t3C 3D 3S 9S 9D\tPlayer 1\n\tFull House\t\tFull House\n\t\
With Three Fours\twith Three Threes\n\nThe file, ",
 ButtonBox["poker.txt",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/project/resources/p054_poker.txt"], None},
  ButtonNote->"https://projecteuler.net/project/resources/p054_poker.txt"],
 ", contains one-thousand random hands dealt to two players. Each line of the \
file contains ten cards (separated by a single space): the first five are \
Player 1\[CloseCurlyQuote]s cards and the last five are Player 2\
\[CloseCurlyQuote]s cards. You can assume that all hands are valid (no \
invalid characters or repeated cards), each player\[CloseCurlyQuote]s hand is \
in no specific order, and in each hand there is a clear winner.\n\nHow many \
hands does Player 1 win?"
}], "Text",
 CellChangeTimes->{{3.640828163817493*^9, 3.640828174413851*^9}, {
  3.640828224395243*^9, 3.640828537892459*^9}, {3.640834824663609*^9, 
  3.640834824664196*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"poker", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://projecteuler.net/project/resources/p054_poker.txt\>\"", ",", 
     "\"\<Table\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.64083481336783*^9, 3.640834835500748*^9}, {
  3.640835506641198*^9, 3.64083551292459*^9}, {3.640835776499276*^9, 
  3.640835776987334*^9}, {3.640835812468597*^9, 3.640835813241236*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"hand", ",", "Orderless"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hand", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a_", ",", "s_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b_", ",", "s_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"c_", ",", "s_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"d_", ",", "s_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e_", ",", "s_"}], "}"}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", "c", ",", "d", ",", "e"}], "}"}], "\[Equal]", 
     RowBox[{"a", "+", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}]}]}], ":=", 
   RowBox[{"9", "[", 
    RowBox[{"e", ",", "d", ",", "c", ",", "b", ",", "a"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hand", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a_", ",", "_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b_", ",", "_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b_", ",", "_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b_", ",", "_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b_", ",", "_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"8", "[", 
    RowBox[{"b", ",", "a"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hand", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a_", ",", "_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a_", ",", "_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b_", ",", "_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b_", ",", "_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b_", ",", "_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"7", "[", 
    RowBox[{"b", ",", "a"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hand", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a_", ",", "s_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b_", ",", "s_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c_", ",", "s_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d_", ",", "s_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"e_", ",", "s_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"6", "[", 
    RowBox[{"e", ",", "d", ",", "c", ",", "b", ",", "a"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hand", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a_", ",", "_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b_", ",", "_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"c_", ",", "_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"d_", ",", "_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e_", ",", "_"}], "}"}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", "c", ",", "d", ",", "e"}], "}"}], "\[Equal]", 
     RowBox[{"a", "+", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}]}]}], ":=", 
   RowBox[{"5", "[", 
    RowBox[{"e", ",", "d", ",", "c", ",", "b", ",", "a"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hand", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a_", ",", "_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b_", ",", "_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c_", ",", "_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c_", ",", "_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c_", ",", "_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"4", "[", 
    RowBox[{"c", ",", "b", ",", "a"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hand", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a_", ",", "_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b_", ",", "_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b_", ",", "_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c_", ",", "_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c_", ",", "_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"3", "[", 
    RowBox[{"c", ",", "b", ",", "a"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hand", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a_", ",", "_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b_", ",", "_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c_", ",", "_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d_", ",", "_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d_", ",", "_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"2", "[", 
    RowBox[{"d", ",", "c", ",", "b", ",", "a"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hand", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a_", ",", "_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b_", ",", "_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c_", ",", "_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d_", ",", "_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"e_", ",", "_"}], "}"}]}], "]"}], ":=", 
   RowBox[{"1", "[", 
    RowBox[{"e", ",", "d", ",", "c", ",", "b", ",", "a"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.640836055693813*^9, 3.640836133605022*^9}, {
   3.64083625125241*^9, 3.640836307283131*^9}, {3.640836424216126*^9, 
   3.640836597446082*^9}, {3.64083665867639*^9, 3.640836795620842*^9}, {
   3.64092476307506*^9, 3.640924838159746*^9}, 3.640924927471014*^9, {
   3.640924978169758*^9, 3.640925010607268*^9}, {3.640925101494123*^9, 
   3.640925247688714*^9}, {3.64092558139874*^9, 3.640925610649128*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Order", "@@", 
      RowBox[{"hand", "@@@", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"StringCases", "[", 
          RowBox[{"#", ",", 
           RowBox[{
            RowBox[{"value_", "~~", "suit_"}], "\[RuleDelayed]", 
            RowBox[{"Sequence", "[", 
             RowBox[{
              RowBox[{"value", "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\"\<T\>\"", "\[Rule]", "10"}], ",", 
                 RowBox[{"\"\<J\>\"", "\[Rule]", "11"}], ",", 
                 RowBox[{"\"\<Q\>\"", "\[Rule]", "12"}], ",", 
                 RowBox[{"\"\<K\>\"", "\[Rule]", "13"}], ",", 
                 RowBox[{"\"\<A\>\"", "\[Rule]", "14"}], ",", 
                 RowBox[{"n_", "\[RuleDelayed]", 
                  RowBox[{"ToExpression", "@", "n"}]}]}], "}"}]}], ",", 
              "suit"}], "]"}]}]}], "]"}], ",", "5"}], "]"}]}]}], "&"}], "/@", 
    "poker"}], ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.640925404102941*^9, 3.640925454420442*^9}, {
  3.640925484455377*^9, 3.640925560601876*^9}, {3.640925655334566*^9, 
  3.640925668512656*^9}}],

Cell[BoxData["376"], "Output",
 CellChangeTimes->{{3.640925418803948*^9, 3.640925457911085*^9}, {
   3.640925491622029*^9, 3.64092555362172*^9}, 3.640925616594751*^9, 
   3.640925671302583*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 55 - Lychrel numbers", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640609706940191*^9, 3.640609712530469*^9}, {
   3.640690494725291*^9, 3.640690499075387*^9}}],

Cell["\<\
If we take 47, reverse and add, 47 + 74 = 121, which is palindromic.

Not all numbers produce palindromes so quickly. For example,

349 + 943 = 1292,
1292 + 2921 = 4213
4213 + 3124 = 7337

That is, 349 took three iterations to arrive at a palindrome.

Although no one has proved it yet, it is thought that some numbers, like 196, \
never produce a palindrome. A number that never forms a palindrome through \
the reverse and add process is called a Lychrel number. Due to the \
theoretical nature of these numbers, and for the purpose of this problem, we \
shall assume that a number is Lychrel until proven otherwise. In addition you \
are given that for every number below ten-thousand, it will either (i) become \
a palindrome in less than fifty iterations, or, (ii) no one, with all the \
computing power that exists, has managed so far to map it to a palindrome. In \
fact, 10677 is the first number to be shown to require over fifty iterations \
before producing a palindrome: 4668731596684224866951378664 (53 iterations, \
28-digits).

Surprisingly, there are palindromic numbers that are themselves Lychrel \
numbers; the first example is 4994.

How many Lychrel numbers are there below ten-thousand?

NOTE: Wording was modified slightly on 24 April 2007 to emphasise the \
theoretical nature of Lychrel numbers.\
\>", "Text",
 CellChangeTimes->{{3.640690514969622*^9, 3.64069052064148*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Range", "@", "10000"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"First", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "#"}], "}"}], "//.", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "n_"}], "}"}], "/;", 
          RowBox[{
           RowBox[{"i", "<", "50"}], "&&", 
           RowBox[{"!", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"i", ">", "0"}], "&&", 
              RowBox[{"PalindromeQ", "@", "n"}]}], ")"}]}]}]}], 
         "\[RuleDelayed]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", 
           RowBox[{"n", "+", 
            RowBox[{"FromDigits", "@", 
             RowBox[{"Reverse", "@", 
              RowBox[{"IntegerDigits", "@", "n"}]}]}]}]}], "}"}]}]}], "]"}], 
      "\[Equal]", "50"}], "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.640691567968014*^9, 3.640691580913342*^9}, {
  3.640691704731446*^9, 3.640691714193608*^9}, {3.640691746285124*^9, 
  3.640691838394502*^9}, {3.640691885029564*^9, 3.640691896251706*^9}}],

Cell[BoxData["249"], "Output",
 CellChangeTimes->{{3.640691707129481*^9, 3.640691715032392*^9}, {
  3.64069177199899*^9, 3.640691778086434*^9}, {3.640691815037095*^9, 
  3.640691839130513*^9}, {3.640691889725687*^9, 3.640691897428038*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 56 - Powerful digit sum", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640675167037351*^9, 3.640675171146824*^9}}],

Cell[TextData[{
 "A googol ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["10", "100"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") is a massive number: one followed by one-hundred zeros; ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["100", "100"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is almost unimaginably large: one followed by two-hundred zeros. Despite \
their size, the sum of the digits in each number is only 1.\n\nConsidering \
natural numbers of the form, ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["a", "b"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", where a, b < 100, what is the maximum digital sum?"
}], "Text",
 CellChangeTimes->{{3.640675182681987*^9, 3.640675202346399*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "@", 
  RowBox[{"Array", "[", 
   RowBox[{
    RowBox[{"Total", "@*", "IntegerDigits", "@*", "Power"}], ",", 
    RowBox[{"{", 
     RowBox[{"99", ",", "99"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.640675214656197*^9, 3.640675269277846*^9}}],

Cell[BoxData["972"], "Output",
 CellChangeTimes->{{3.640675216899225*^9, 3.640675270254947*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 57 - Square root convergents", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640675167037351*^9, 3.640675171146824*^9}, {
   3.64073672345449*^9, 3.640736726611088*^9}}],

Cell[TextData[{
 "It is possible to show that the square root of two can be expressed as an \
infinite continued fraction.\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Sqrt]", " ", "2"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"1", " ", "+", " ", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", "+", " ", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", "+", " ", 
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "+"}], " ", "..."}], " ", ")"}]}]}], 
           ")"}]}]}], ")"}]}]}], " ", "=", " ", 
     RowBox[{"1.414213", "..."}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nBy expanding this for the first four iterations, we get:\n\n1 + 1/2 = \
3/2 = 1.5\n1 + 1/(2 + 1/2) = 7/5 = 1.4\n1 + 1/(2 + 1/(2 + 1/2)) = 17/12 = \
1.41666...\n1 + 1/(2 + 1/(2 + 1/(2 + 1/2))) = 41/29 = 1.41379...\n\nThe next \
three expansions are 99/70, 239/169, and 577/408, but the eighth expansion, \
1393/985, is the first example where the number of digits in the numerator \
exceeds the number of digits in the denominator.\n\nIn the first one-thousand \
expansions, how many fractions contain a numerator with more digits than \
denominator?"
}], "Text",
 CellChangeTimes->{{3.640736732263724*^9, 3.640736737860953*^9}, 
   3.640932514424747*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"NestList", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "+", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", "#"}], ")"}]}]}], "&"}], ",", "1", ",", "1000"}], 
    "]"}], ",", 
   RowBox[{
    RowBox[{"Rational", "[", 
     RowBox[{"n_", ",", "d_"}], "]"}], "/;", 
    RowBox[{"Greater", "@@", 
     RowBox[{"IntegerLength", "@", 
      RowBox[{"{", 
       RowBox[{"n", ",", "d"}], "}"}]}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.640736785410427*^9, 3.640736820838632*^9}, {
  3.640736916123018*^9, 3.640736932056007*^9}, {3.640736988615942*^9, 
  3.640736995550511*^9}}],

Cell[BoxData["153"], "Output",
 CellChangeTimes->{{3.640736813363407*^9, 3.64073682176251*^9}, 
   3.64073692789371*^9, {3.640736989714264*^9, 3.640736996059852*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 58 - Spiral primes", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640609706940191*^9, 3.640609712530469*^9}, {
   3.640690494725291*^9, 3.640690499075387*^9}, {3.640734793831659*^9, 
   3.640734800663662*^9}, {3.640737507261215*^9, 3.640737511774584*^9}}],

Cell[TextData[{
 "Starting with 1 and spiralling anticlockwise in the following way, a square \
spiral with side length 7 is formed.\n\n",
 StyleBox["37",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " 36 35 34 33 32 ",
 StyleBox["31",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 "\n38 ",
 StyleBox["17",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " 16 15 14 ",
 StyleBox["13",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " 30\n39 18  ",
 StyleBox["5",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 "  4  ",
 StyleBox["3",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " 12 29\n40 19  6  1  2 11 28\n41 20  ",
 StyleBox["7",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 "  8  9 10 27\n42 21 22 23 24 25 26\n",
 StyleBox["43",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " 44 45 46 47 48 49\n\nIt is interesting to note that the odd squares lie \
along the bottom right diagonal, but what is more interesting is that 8 out \
of the 13 numbers lying along both diagonals are prime; that is, a ratio of \
8/13 \[TildeTilde] 62%.\n\nIf one complete new layer is wrapped around the \
spiral above, a square spiral with side length 9 will be formed. If this \
process is continued, what is the side length of the square spiral for which \
the ratio of primes along both diagonals first falls below 10%?"
}], "Text",
 CellChangeTimes->{{3.640737519115692*^9, 3.640737524733724*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"NestWhile", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "+", 
      RowBox[{"{", 
       RowBox[{"2", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Count", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "^", "2"}], "-", 
               RowBox[{"j", "#"}], "+", "j"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "0", ",", "3"}], "}"}]}], "]"}], ",", 
            RowBox[{"_", "?", "PrimeQ"}]}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", "2"}], "]"}]}], "}"}]}], 
     "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"#", ".", 
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"-", "10"}]}], "}"}]}], "<", "1"}], "&"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.640738642270479*^9, 3.640738807565401*^9}, {
  3.640739306105008*^9, 3.640739341232809*^9}}],

Cell[BoxData["26241"], "Output",
 CellChangeTimes->{{3.640738767623362*^9, 3.640738808518325*^9}, {
  3.6407393355457*^9, 3.640739341859269*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 59 - XOR decryption", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640609706940191*^9, 3.640609712530469*^9}, {
   3.640690494725291*^9, 3.640690499075387*^9}, {3.640734793831659*^9, 
   3.640734800663662*^9}}],

Cell[TextData[{
 "Each character on a computer is assigned a unique code and the preferred \
standard is ASCII (American Standard Code for Information Interchange). For \
example, uppercase A = 65, asterisk (*) = 42, and lowercase k = 107.\n\nA \
modern encryption method is to take a text file, convert the bytes to ASCII, \
then XOR each byte with a given value, taken from a secret key. The advantage \
with the XOR function is that using the same encryption key on the cipher \
text, restores the plain text; for example, 65 XOR 42 = 107, then 107 XOR 42 \
= 65.\n\nFor unbreakable encryption, the key is the same length as the plain \
text message, and the key is made up of random bytes. The user would keep the \
encrypted message and the encryption key in different locations, and without \
both \[OpenCurlyDoubleQuote]halves\[CloseCurlyDoubleQuote], it is impossible \
to decrypt the message.\n\nUnfortunately, this method is impractical for most \
users, so the modified method is to use a password as a key. If the password \
is shorter than the message, which is likely, the key is repeated cyclically \
throughout the message. The balance for this method is using a sufficiently \
long password key for security, but short enough to be memorable.\n\nYour \
task has been made easy, as the encryption key consists of three lower case \
characters. Using ",
 ButtonBox["cipher.txt",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/project/resources/p059_cipher.txt"], None},
  ButtonNote->"https://projecteuler.net/project/resources/p059_cipher.txt"],
 " (right click and \[OpenCurlyQuote]Save Link/Target \
As...\[CloseCurlyQuote]), a file containing the encrypted ASCII codes, and \
the knowledge that the plain text must contain common English words, decrypt \
the message and find the sum of the ASCII values in the original text."
}], "Text",
 CellChangeTimes->{{3.640734808457158*^9, 3.640734840373571*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cipher", "=", 
   RowBox[{"ToExpression", "[", 
    RowBox[{"\"\<{\>\"", "<>", 
     RowBox[{
     "Import", "@", 
      "\"\<https://projecteuler.net/project/resources/p059_cipher.txt\>\""}], 
     "<>", "\"\<}\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.640734842821854*^9, 3.640734870564468*^9}, {
  3.64073493047161*^9, 3.640734957665348*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{"SelectFirst", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"BitXor", "[", 
       RowBox[{"cipher", ",", 
        RowBox[{"PadRight", "[", 
         RowBox[{"#", ",", 
          RowBox[{"Length", "@", "cipher"}], ",", "#"}], "]"}]}], "]"}], 
      "&"}], "/@", 
     RowBox[{"Tuples", "[", 
      RowBox[{
       RowBox[{"Range", "@@", 
        RowBox[{"ToCharacterCode", "@", "\"\<az\>\""}]}], ",", "3"}], "]"}]}],
     ",", 
    RowBox[{
     RowBox[{"StringMatchQ", "[", 
      RowBox[{
       RowBox[{"FromCharacterCode", "@", "#"}], ",", 
       RowBox[{"__", "~~", "\"\< the \>\"", "~~", "__"}]}], "]"}], "&"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.641036250546434*^9, 3.641036252687597*^9}}],

Cell[BoxData["107359"], "Output",
 CellChangeTimes->{{3.641036247171052*^9, 3.641036253666032*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 60 - Prime pair sets", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640609706940191*^9, 3.640609712530469*^9}, {
   3.640690494725291*^9, 3.640690499075387*^9}, {3.640734793831659*^9, 
   3.640734800663662*^9}, {3.641032122972966*^9, 3.641032129351514*^9}}],

Cell["\<\
The primes 3, 7, 109, and 673, are quite remarkable. By taking any two primes \
and concatenating them in any order the result will always be prime. For \
example, taking 7 and 109, both 7109 and 1097 are prime. The sum of these \
four primes, 792, represents the lowest sum for a set of four primes with \
this property.

Find the lowest sum for a set of five primes for which any two primes \
concatenate to produce another prime.\
\>", "Text",
 CellChangeTimes->{{3.641032135925*^9, 3.641032140461153*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "[", 
  RowBox[{"Total", "/@", 
   RowBox[{"FindClique", "[", 
    RowBox[{
     RowBox[{"Graph", "[", 
      RowBox[{"Rule", "@@@", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Tuples", "[", 
          RowBox[{
           RowBox[{"Prime", "@", 
            RowBox[{"Range", "@", "2000"}]}], ",", "2"}], "]"}], ",", 
         RowBox[{
         "PrimeQ", "@*", "FromDigits", "@*", "Catenate", "@*", 
          "IntegerDigits"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", "5", "}"}], ",", "All"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.64103214763967*^9, 3.64103227825573*^9}, {
  3.64103232400801*^9, 3.641032365611479*^9}, {3.641032439820527*^9, 
  3.641032451978289*^9}, {3.641032484345311*^9, 3.641032590720239*^9}, {
  3.641032784058337*^9, 3.641032830500867*^9}, {3.641032868466192*^9, 
  3.641032872547171*^9}, {3.64103304627056*^9, 3.641033048353249*^9}, {
  3.641033133738336*^9, 3.641033170450856*^9}}],

Cell[BoxData["26033"], "Output",
 CellChangeTimes->{{3.641032164551163*^9, 3.64103225032242*^9}, {
   3.641032336249949*^9, 3.641032367324871*^9}, {3.641032440885073*^9, 
   3.64103245258829*^9}, {3.641032489988537*^9, 3.641032555748374*^9}, {
   3.641032588125296*^9, 3.641032605596612*^9}, 3.641032792688826*^9, 
   3.641032825010174*^9, 3.641033110730966*^9, 3.641033198883463*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 61 - Cyclical figurate numbers", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640609706940191*^9, 3.640609712530469*^9}, {
   3.640690494725291*^9, 3.640690499075387*^9}, {3.640734793831659*^9, 
   3.640734800663662*^9}, {3.641032122972966*^9, 3.641032129351514*^9}, {
   3.64103336416183*^9, 3.641033380924961*^9}}],

Cell[TextData[{
 "Triangle, square, pentagonal, hexagonal, heptagonal, and octagonal numbers \
are all figurate (polygonal) numbers and are generated by the following \
formulae:\nTriangle \t  \t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"3", ",", "n"}]], "=", 
    RowBox[{"n", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "+", "1"}], ")"}], "/", "2"}]}]}], TraditionalForm]]],
 " \t  \t1, 3, 6, 10, 15, ...\nSquare \t  \t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"4", ",", "n"}]], "=", 
    SuperscriptBox["n", "2"]}], TraditionalForm]]],
 " \t  \t  \t1, 4, 9, 16, 25, ...\nPentagonal \t  \t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"5", ",", "n"}]], "=", 
    RowBox[{"n", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", "n"}], "\[Minus]", "1"}], ")"}], "/", "2"}]}]}], 
   TraditionalForm]]],
 " \t  \t1, 5, 12, 22, 35, ...\nHexagonal \t  \t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"6", ",", "n"}]], "=", 
    RowBox[{"n", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "n"}], "\[Minus]", "1"}], ")"}]}]}], TraditionalForm]]],
 " \t  \t1, 6, 15, 28, 45, ...\nHeptagonal \t  \t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"7", ",", "n"}]], "=", 
    RowBox[{"n", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"5", "n"}], "\[Minus]", "3"}], ")"}], "/", "2"}]}]}], 
   TraditionalForm]]],
 " \t  \t1, 7, 18, 34, 55, ...\nOctagonal \t  \t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"8", ",", "n"}]], "=", 
    RowBox[{"n", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", "n"}], "\[Minus]", "2"}], ")"}]}]}], TraditionalForm]]],
 " \t  \t1, 8, 21, 40, 65, ...\n\nThe ordered set of three 4-digit numbers: \
8128, 2882, 8281, has three interesting properties.\n\n    The set is cyclic, \
in that the last two digits of each number is the first two digits of the \
next number (including the last number with the first).\n    Each polygonal \
type: triangle (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"3", ",", "127"}]], "=", "8128"}], TraditionalForm]]],
 "), square (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"4", ",", "91"}]], "=", "8281"}], TraditionalForm]]],
 "), and pentagonal (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"5", ",", "44"}]], "=", "2882"}], TraditionalForm]]],
 "), is represented by a different number in the set.\n    This is the only \
set of 4-digit numbers with this property.\n\nFind the sum of the only \
ordered set of six cyclic 4-digit numbers for which each polygonal type: \
triangle, square, pentagonal, hexagonal, heptagonal, and octagonal, is \
represented by a different number in the set."
}], "Text",
 CellChangeTimes->{{3.641033398334913*^9, 3.641033406609545*^9}, {
  3.641033475451398*^9, 3.641033592125256*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"3", ",", "n_"}], "]"}], ":=", 
   RowBox[{"n", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", "+", "1"}], ")"}], "/", "2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"4", ",", "n_"}], "]"}], ":=", 
   RowBox[{"n", "^", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"5", ",", "n_"}], "]"}], ":=", 
   RowBox[{"n", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", "n"}], "-", "1"}], ")"}], "/", "2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"6", ",", "n_"}], "]"}], ":=", 
   RowBox[{"n", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "n"}], "-", "1"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"7", ",", "n_"}], "]"}], ":=", 
   RowBox[{"n", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"5", "n"}], "-", "3"}], ")"}], "/", "2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"8", ",", "n_"}], "]"}], ":=", 
   RowBox[{"n", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", "n"}], "-", "2"}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.641033926626848*^9, 3.641033931970325*^9}, {
   3.641033975043559*^9, 3.641034006101965*^9}, 3.641034103526842*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"polygonals", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "@@@", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"IntegerDigits", "[", 
           RowBox[{
            RowBox[{"p", "[", 
             RowBox[{"i", ",", "n"}], "]"}], ",", "100"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", 
            RowBox[{"Sqrt", "@", "20000"}]}], "}"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", "#"}], "\[Equal]", "2"}], "&&", 
          RowBox[{
           RowBox[{"Min", "@", "#"}], ">", "9"}]}], "&"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "3", ",", "8"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.641034110418574*^9, 3.641034168659647*^9}, 
   3.64103428470494*^9, {3.641034469339942*^9, 3.641034537205681*^9}, {
   3.641034887322903*^9, 3.641034891332161*^9}, {3.641035520651895*^9, 
   3.641035526922643*^9}, {3.64103574802726*^9, 3.641035756324191*^9}, 
   3.64103611253517*^9, 3.641036400741022*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FromDigits", "[", 
     RowBox[{"#", ",", "100"}], "]"}], "&"}], "/@", 
   RowBox[{"List", "@@@", 
    RowBox[{"SelectFirst", "[", 
     RowBox[{
      RowBox[{"Nest", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Catenate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Cases", "[", 
             RowBox[{"polygonals", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"x", ":", 
                 RowBox[{"i_", "[", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "_"}], "]"}]}], "/;", 
                RowBox[{"FreeQ", "[", 
                 RowBox[{
                  RowBox[{"Head", "/@", "#"}], ",", "i"}], "]"}]}], 
               "\[RuleDelayed]", 
               RowBox[{"Append", "[", 
                RowBox[{"#", ",", "x"}], "]"}]}], ",", 
              RowBox[{"{", "2", "}"}]}], "]"}], "&"}], "/@", "#"}], "]"}], 
         "&"}], ",", 
        RowBox[{"List", "/@", 
         RowBox[{"First", "@", "polygonals"}]}], ",", "5"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[Equal]", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], "&"}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.641036135697783*^9, 3.641036169390646*^9}, {
  3.641036200042929*^9, 3.64103620699288*^9}, {3.641036268637444*^9, 
  3.641036297159464*^9}, {3.641036404171463*^9, 3.641036407831938*^9}}],

Cell[BoxData["28684"], "Output",
 CellChangeTimes->{
  3.641036115112045*^9, {3.641036162721984*^9, 3.641036170401046*^9}, 
   3.641036207560815*^9, {3.64103627220092*^9, 3.641036298115761*^9}, {
   3.641036408635693*^9, 3.641036415340741*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 62 - Cubic permutations", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640675167037351*^9, 3.640675171146824*^9}, {
   3.640693907634862*^9, 3.640693912687057*^9}, {3.640931057586515*^9, 
   3.640931061184862*^9}}],

Cell[TextData[{
 "The cube, 41063625 ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["345", "3"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "), can be permuted to produce two other cubes: 56623104 ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["384", "3"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") and 66430125 ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["405", "3"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "). In fact, 41063625 is the smallest cube which has exactly three \
permutations of its digits which are also cube.\n\nFind the smallest cube for \
which exactly five permutations of its digits are cube."
}], "Text",
 CellChangeTimes->{{3.640931071228916*^9, 3.640931092194172*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "@", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"GatherBy", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Range", "[", "10000", "]"}], "^", "3"}], ",", 
      RowBox[{"Sort", "@*", "IntegerDigits"}]}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "@", "#"}], "==", "5"}], "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.640931639860495*^9, 3.640931812277418*^9}, {
  3.640931914686798*^9, 3.640931915308148*^9}, {3.640931950344595*^9, 
  3.640931957469784*^9}, {3.640932022543496*^9, 3.640932043389294*^9}}],

Cell[BoxData["127035954683"], "Output",
 CellChangeTimes->{{3.640931663979661*^9, 3.640931690761413*^9}, {
   3.640931722093212*^9, 3.640931813024592*^9}, 3.64093191578778*^9, {
   3.640931950963572*^9, 3.640931958874308*^9}, {3.64093202450175*^9, 
   3.640932043968241*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 63 - Powerful digit counts", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640675167037351*^9, 3.640675171146824*^9}, {
   3.640693907634862*^9, 3.640693912687057*^9}}],

Cell[TextData[{
 "The 5-digit number, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"16807", "=", 
    SuperscriptBox["7", "5"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", is also a fifth power. Similarly, the 9-digit number, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"134217728", "=", 
    SuperscriptBox["8", "9"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", is a ninth power.\n\nHow many n-digit positive integers exist which are \
also an nth power?"
}], "Text",
 CellChangeTimes->{{3.640693919590997*^9, 3.640693946151482*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Log10", "[", 
     RowBox[{"d", "^", "n"}], "]"}], "\[Equal]", 
    RowBox[{"n", "-", "1"}]}], ",", "d"}], "]"}]], "Input",
 CellChangeTimes->{{3.640694158778453*^9, 3.640694216895623*^9}, {
  3.640694260512716*^9, 3.640694264340013*^9}, {3.640694368097577*^9, 
  3.640694372824962*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"d", "\[Rule]", 
    SuperscriptBox["10", 
     RowBox[{"1", "-", 
      FractionBox["1", "n"]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.640694167649887*^9, 3.64069421873475*^9}, {
  3.640694262096261*^9, 3.640694264805347*^9}, {3.640694370885567*^9, 
  3.640694373437806*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"Floor", "[", 
    RowBox[{"10", "-", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"1", "/", "n"}]}], ")"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"IncreaseWhile", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"IntegerLength", "[", 
         RowBox[{"9", "^", "#"}], "]"}], "\[Equal]", "#"}], "&"}], "]"}]}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.640694276609562*^9, 3.640694350716779*^9}, {
  3.64069438470851*^9, 3.640694415372204*^9}, {3.640694476982641*^9, 
  3.640694495421469*^9}}],

Cell[BoxData["49"], "Output",
 CellChangeTimes->{
  3.640694320118708*^9, 3.640694357897814*^9, 3.640694416029796*^9, {
   3.640694477966378*^9, 3.640694495980456*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 64 - Odd period square roots", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640675167037351*^9, 3.640675171146824*^9}, {
   3.640693907634862*^9, 3.640693912687057*^9}, {3.641175146847176*^9, 
   3.64117515282811*^9}}],

Cell[TextData[{
 "All square roots are periodic when written as continued fractions and can \
be written in the form:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Sqrt]", "N"}], " ", "=", " ", 
    RowBox[{
     SubscriptBox["a", "0"], " ", "+", 
     FractionBox["1", 
      RowBox[{
       SubscriptBox["a", "1"], " ", "+", " ", 
       FractionBox["1", 
        RowBox[{
         SubscriptBox["a", "2"], " ", "+", " ", 
         FractionBox["1", 
          RowBox[{
           RowBox[{
            SubscriptBox["a", "3"], " ", "+"}], " ", "..."}]]}]]}]]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nFor example, let us consider ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Sqrt]", "23"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ":\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Sqrt]", "23"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"4", " ", "+", " ", 
      RowBox[{"\[Sqrt]", "23"}], " ", "-", " ", "4"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"4", " ", "+", " ", 
       FractionBox["1", 
        FractionBox["1", 
         RowBox[{
          RowBox[{"\[Sqrt]", "23"}], " ", "-", " ", "4", " "}]]]}], "=", 
      RowBox[{"4", " ", "+", " ", 
       FractionBox["1", 
        RowBox[{"1", " ", "+", " ", 
         FractionBox[
          RowBox[{
           RowBox[{"\[Sqrt]", "23"}], " ", "-", " ", "3", " "}], 
          "7"]}]]}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \n\nIf we continue we would get the following expansion:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Sqrt]", "23"}], " ", "=", " ", 
    RowBox[{"4", " ", "+", 
     FractionBox["1", 
      RowBox[{"1", " ", "+", " ", 
       FractionBox["1", 
        RowBox[{"3", " ", "+", " ", 
         FractionBox["1", 
          RowBox[{"1", " ", "+", " ", 
           FractionBox["1", 
            RowBox[{
             RowBox[{"8", " ", "+"}], " ", "..."}]]}]]}]]}]]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nThe process can be summarised as follows:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["a", "0"], " ", "=", " ", "4"}], ",", " ", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       RowBox[{"\[Sqrt]", "23"}], "-", "4"}]], " ", "=", " ", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"\[Sqrt]", "23"}], "+", "4"}], "7"], " ", "=", " ", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sqrt]", "23"}], "-", "3"}], "7"]}]}]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["a", "1"], " ", "=", " ", "1"}], ",", " ", 
    RowBox[{
     FractionBox["7", 
      RowBox[{
       RowBox[{"\[Sqrt]", "23"}], "-", "3"}]], " ", "=", " ", 
     RowBox[{
      FractionBox[
       RowBox[{"7", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Sqrt]", "23"}], "+", "3"}], ")"}]}], "14"], " ", "=", 
      " ", 
      RowBox[{"3", "+", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sqrt]", "23"}], "-", "3"}], "2"]}]}]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["a", "2"], " ", "=", " ", "3"}], ",", " ", 
    RowBox[{
     FractionBox["2", 
      RowBox[{
       RowBox[{"\[Sqrt]", "23"}], "-", "3"}]], " ", "=", " ", 
     RowBox[{
      FractionBox[
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Sqrt]", "23"}], "+", "3"}], ")"}]}], "14"], " ", "=", 
      " ", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sqrt]", "23"}], "-", "4"}], "7"]}]}]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["a", "3"], " ", "=", " ", "1"}], ",", " ", 
    RowBox[{
     FractionBox["7", 
      RowBox[{
       RowBox[{"\[Sqrt]", "23"}], "-", "4"}]], " ", "=", " ", 
     RowBox[{
      FractionBox[
       RowBox[{"7", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Sqrt]", "23"}], "+", "4"}], ")"}]}], "7"], " ", "=", " ", 
      RowBox[{"8", "+", 
       RowBox[{"\[Sqrt]", "23"}], "-", "4"}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["a", "4"], " ", "=", " ", "8"}], ",", " ", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       RowBox[{"\[Sqrt]", "23"}], "-", "4"}]], " ", "=", " ", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"\[Sqrt]", "23"}], "+", "4"}], "7"], " ", "=", " ", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sqrt]", "23"}], "-", "3"}], "7"]}]}]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["a", "5"], " ", "=", " ", "1"}], ",", " ", 
    RowBox[{
     FractionBox["7", 
      RowBox[{
       RowBox[{"\[Sqrt]", "23"}], "-", "3"}]], " ", "=", " ", 
     RowBox[{
      FractionBox[
       RowBox[{"7", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Sqrt]", "23"}], "+", "3"}], ")"}]}], "14"], " ", "=", 
      " ", 
      RowBox[{"3", "+", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sqrt]", "23"}], "-", "3"}], "2"]}]}]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["a", "6"], " ", "=", " ", "3"}], ",", " ", 
    RowBox[{
     FractionBox["2", 
      RowBox[{
       RowBox[{"\[Sqrt]", "23"}], "-", "3"}]], " ", "=", " ", 
     RowBox[{
      FractionBox[
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Sqrt]", "23"}], "+", "3"}], ")"}]}], "14"], " ", "=", 
      " ", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Sqrt]", "23"}], "-", "4"}], "7"]}]}]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["a", "7"], " ", "=", " ", "1"}], ",", " ", 
    RowBox[{
     FractionBox["7", 
      RowBox[{
       RowBox[{"\[Sqrt]", "23"}], "-", "4"}]], " ", "=", " ", 
     RowBox[{
      FractionBox[
       RowBox[{"7", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Sqrt]", "23"}], "+", "4"}], ")"}]}], "7"], " ", "=", " ", 
      RowBox[{"8", "+", 
       RowBox[{"\[Sqrt]", "23"}], "-", "4"}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nIt can be seen that the sequence is repeating. For conciseness, we use \
the notation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Sqrt]", "23"}], " ", "=", " ", 
    RowBox[{"[", 
     RowBox[{"4", ";", 
      RowBox[{"(", 
       RowBox[{"1", ",", "3", ",", "1", ",", "8"}], ")"}]}], "]"}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", to indicate that the block (1,3,1,8) repeats indefinitely.\n\nThe first \
ten continued fraction representations of (irrational) square roots are:\n\n\
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Sqrt]", "2"}], "=", 
    RowBox[{"[", 
     RowBox[{"1", ";", 
      RowBox[{"(", "2", ")"}]}], "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", period=1\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Sqrt]", "3"}], "=", 
    RowBox[{"[", 
     RowBox[{"1", ";", 
      RowBox[{"(", 
       RowBox[{"1", ",", "2"}], ")"}]}], "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", period=2\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Sqrt]", "5"}], "=", 
    RowBox[{"[", 
     RowBox[{"2", ";", 
      RowBox[{"(", "4", ")"}]}], "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", period=1\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Sqrt]", "6"}], "=", 
    RowBox[{"[", 
     RowBox[{"2", ";", 
      RowBox[{"(", 
       RowBox[{"2", ",", "4"}], ")"}]}], "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", period=2\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Sqrt]", "7"}], "=", 
    RowBox[{"[", 
     RowBox[{"2", ";", 
      RowBox[{"(", 
       RowBox[{"1", ",", "1", ",", "1", ",", "4"}], ")"}]}], "]"}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", period=4\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Sqrt]", "8"}], "=", 
    RowBox[{"[", 
     RowBox[{"2", ";", 
      RowBox[{"(", 
       RowBox[{"1", ",", "4"}], ")"}]}], "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", period=2\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Sqrt]", "10"}], "=", 
    RowBox[{"[", 
     RowBox[{"3", ";", 
      RowBox[{"(", "6", ")"}]}], "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", period=1\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Sqrt]", "11"}], "=", 
    RowBox[{"[", 
     RowBox[{"3", ";", 
      RowBox[{"(", 
       RowBox[{"3", ",", "6"}], ")"}]}], "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", period=2\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Sqrt]", "12"}], "=", " ", 
    RowBox[{"[", 
     RowBox[{"3", ";", 
      RowBox[{"(", 
       RowBox[{"2", ",", "6"}], ")"}]}], "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", period=2\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Sqrt]", "13"}], "=", 
    RowBox[{"[", 
     RowBox[{"3", ";", 
      RowBox[{"(", 
       RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "6"}], ")"}]}], 
     "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", period=5\n\nExactly four continued fractions, for N \[LessEqual] 13, have \
an odd period.\n\nHow many continued fractions for N \[LessEqual] 10000 have \
an odd period?"
}], "Text",
 CellChangeTimes->{{3.641175162506113*^9, 3.641175698880207*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"ContinuedFraction", "@", 
    RowBox[{"Sqrt", "@", 
     RowBox[{"Range", "@", "10000"}]}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"_", ",", "period_"}], "}"}], "/;", 
    RowBox[{"OddQ", "@", 
     RowBox[{"Length", "@", "period"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.64117571110842*^9, 3.641175837384212*^9}}],

Cell[BoxData["1322"], "Output",
 CellChangeTimes->{{3.641175736303751*^9, 3.641175786048385*^9}, {
  3.641175830133228*^9, 3.641175842212609*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 65 - Convergents of e", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640675167037351*^9, 3.640675171146824*^9}, {
   3.640693907634862*^9, 3.640693912687057*^9}, {3.640932279276186*^9, 
   3.640932284118983*^9}, 3.641176581952932*^9}],

Cell[TextData[{
 "The square root of 2 can be written as an infinite continued fraction.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Sqrt]", "2"}], "=", 
    RowBox[{"1", "+", 
     FractionBox["1", 
      RowBox[{"2", "+", 
       FractionBox["1", 
        RowBox[{"2", "+", 
         FractionBox["1", 
          RowBox[{"2", "+", 
           FractionBox["1", 
            RowBox[{
             RowBox[{"2", "+"}], "..."}]]}]]}]]}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nThe infinite continued fraction can be written, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Sqrt]", "2"}], " ", "=", " ", 
    RowBox[{"[", 
     RowBox[{"1", ";", 
      RowBox[{"(", "2", ")"}]}], "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", (2) indicates that 2 repeats ad infinitum. In a similar way, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Sqrt]", "23"}], " ", "=", " ", 
    RowBox[{"[", 
     RowBox[{"4", ";", 
      RowBox[{"(", 
       RowBox[{"1", ",", "3", ",", "1", ",", "8"}], ")"}]}], "]"}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nIt turns out that the sequence of partial values of continued \
fractions for square roots provide the best rational approximations. Let us \
consider the convergents for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Sqrt]", "2"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "+", 
     FractionBox["1", "2"]}], "=", 
    RowBox[{"3", "/", "2"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\t \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "+", 
     FractionBox["1", 
      RowBox[{"2", "+", 
       FractionBox["1", "2"]}]]}], "=", 
    RowBox[{"7", "/", "5"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\t \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "+", 
     FractionBox["1", 
      RowBox[{"2", "+", 
       FractionBox["1", 
        RowBox[{"2", "+", 
         FractionBox["1", "2"]}]]}]]}], "=", 
    RowBox[{"17", "/", "12"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\t \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "+", 
     FractionBox["1", 
      RowBox[{"2", "+", 
       FractionBox["1", 
        RowBox[{"2", "+", 
         FractionBox["1", 
          RowBox[{"2", "+", 
           FractionBox["1", "2"]}]]}]]}]]}], "=", 
    RowBox[{"41", "/", "29"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\t \n\nHence the sequence of the first ten convergents for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Sqrt]", "2"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " are:\n1, 3/2, 7/5, 17/12, 41/29, 99/70, 239/169, 577/408, 1393/985, \
3363/2378, ...\n\nWhat is most surprising is that the important mathematical \
constant,\ne = [2; 1,2,1, 1,4,1, 1,6,1 , ... , 1,2k,1, ...].\n\nThe first ten \
terms in the sequence of convergents for e are:\n2, 3, 8/3, 11/4, 19/7, \
87/32, 106/39, 193/71, 1264/465, 1457/536, ...\n\nThe sum of digits in the \
numerator of the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "th"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " convergent is 1+4+5+7=17.\n\nFind the sum of digits in the numerator of \
the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["100", "th"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " convergent of the continued fraction for e."
}], "Text",
 CellChangeTimes->{{3.640932293044794*^9, 3.64093250128911*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{"IntegerDigits", "@", 
   RowBox[{"Numerator", "@", 
    RowBox[{"FromContinuedFraction", "@", 
     RowBox[{"ContinuedFraction", "[", 
      RowBox[{"E", ",", "100"}], "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.640932549012388*^9, 3.64093258927863*^9}}],

Cell[BoxData["272"], "Output",
 CellChangeTimes->{{3.640932561223994*^9, 3.640932589798076*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 66 - Diophantine equation", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640675167037351*^9, 3.640675171146824*^9}, {
   3.640693907634862*^9, 3.640693912687057*^9}, {3.640932279276186*^9, 
   3.640932284118983*^9}, 3.641176581952932*^9, {3.641255465489409*^9, 
   3.641255470356732*^9}}],

Cell[TextData[{
 "Consider quadratic Diophantine equations of the form:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "2"], " ", "\[Dash]", " ", 
    RowBox[{
     RowBox[{"D", " ", 
      SuperscriptBox["y", "2"]}], " ", "=", " ", "1"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nFor example, when D=13, the minimal solution in x is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["649", "2"], " ", "\[Dash]", " ", 
    RowBox[{
     RowBox[{"13", "\[Times]", 
      SuperscriptBox["180", "2"]}], " ", "=", " ", "1"}]}], TraditionalForm]],
  
  FormatType->"TraditionalForm"],
 ".\n\nIt can be assumed that there are no solutions in positive integers \
when D is square.\n\nBy finding minimal solutions in x for D = {2, 3, 5, 6, \
7}, we obtain the following:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["3", "2"], " ", "\[Dash]", " ", 
    RowBox[{
     RowBox[{"2", "\[Times]", 
      SuperscriptBox["2", "2"]}], " ", "=", " ", "1"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", "2"], " ", "\[Dash]", " ", 
    RowBox[{
     RowBox[{"3", "\[Times]", 
      SuperscriptBox["1", "2"]}], " ", "=", " ", "1"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["9", "2"], " ", "\[Dash]", " ", 
    RowBox[{
     RowBox[{"5", "\[Times]", 
      SuperscriptBox["4", "2"]}], " ", "=", " ", "1"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["5", "2"], " ", "\[Dash]", " ", 
    RowBox[{
     RowBox[{"6", "\[Times]", 
      SuperscriptBox["2", "2"]}], " ", "=", " ", "1"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["8", "2"], " ", "\[Dash]", " ", 
    RowBox[{
     RowBox[{"7", "\[Times]", 
      SuperscriptBox["3", "2"]}], " ", "=", " ", "1"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nHence, by considering minimal solutions in x for D \[LessEqual] 7, the \
largest x is obtained when D=5.\n\nFind the value of D \[LessEqual] 1000 in \
minimal solutions of x for which the largest value of x is obtained."
}], "Text",
 CellChangeTimes->{{3.641255478504356*^9, 3.641255567577012*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{
   RowBox[{"MaximalBy", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "/.", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"x", "^", "2"}], "-", 
             RowBox[{"#", " ", 
              RowBox[{"y", "^", "2"}]}]}], "\[Equal]", "1"}], ",", 
           RowBox[{"x", ">", "0"}], ",", 
           RowBox[{"y", ">", "0"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], ",", "Integers"}], "]"}]}], "/.", 
      RowBox[{
       RowBox[{"C", "[", "1", "]"}], "\[Rule]", "1"}]}], "&"}], "]"}], "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Range", "@", "1000"}], ",", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"IntegerQ", "@", 
        RowBox[{"Sqrt", "@", "#"}]}]}], "&"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.641255858911541*^9, 3.641255959722673*^9}}],

Cell[BoxData["661"], "Output",
 CellChangeTimes->{{3.641255876804862*^9, 3.641255895834865*^9}, {
   3.641255932669046*^9, 3.641255939217441*^9}, 3.64125597591176*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 67 - Maximum path sum II", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}}],

Cell[TextData[{
 "By starting at the top of the triangle below and moving to adjacent numbers \
on the row below, the maximum total from top to bottom is 23.\n\n",
 StyleBox["3",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 "\n",
 StyleBox["7",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " 4\n2 ",
 StyleBox["4",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " 6\n8 5 ",
 StyleBox["9",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " 3\n\nThat is, 3 + 7 + 4 + 9 = 23.\n\nFind the maximum total from top to \
bottom in ",
 ButtonBox["triangle.txt",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/project/resources/p067_triangle.txt"], None},
  ButtonNote->
   "https://projecteuler.net/project/resources/p067_triangle.txt"],
 " (right click and \[OpenCurlyQuote]Save Link/Target \
As...\[CloseCurlyQuote]), a 15K text file containing a triangle with \
one-hundred rows.\n\n",
 StyleBox["NOTE",
  FontWeight->"Bold"],
 ": This is a much more difficult version of ",
 ButtonBox["Problem 18",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/problem=18"], None},
  ButtonNote->"https://projecteuler.net/problem=18"],
 ". It is not possible to try every route to solve this problem, as there are \
299 altogether! If you could check one trillion (1012) routes every second it \
would take over twenty billion years to check them all. There is an efficient \
algorithm to solve it. ;o)"
}], "Text",
 CellChangeTimes->{{3.640521857026136*^9, 3.640521864604573*^9}, {
  3.640521925423942*^9, 3.640521940943587*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"triangle", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://projecteuler.net/project/resources/p067_triangle.txt\>\"", 
     ",", "\"\<Table\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.640516238756557*^9, 3.64051626358409*^9}, {
  3.640521983612761*^9, 3.640521987194159*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "@", 
  RowBox[{"Fold", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"MapThread", "[", 
      RowBox[{"Max", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Append", "[", 
           RowBox[{"#", ",", "0"}], "]"}], "+", "#2"}], ",", 
         RowBox[{
          RowBox[{"Prepend", "[", 
           RowBox[{"#", ",", "0"}], "]"}], "+", "#2"}]}], "}"}]}], "]"}], 
     "&"}], ",", 
    RowBox[{"{", "}"}], ",", "triangle"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.640516265564532*^9, 3.640516266938885*^9}, {
  3.640516329334614*^9, 3.640516353141472*^9}, {3.64051649599621*^9, 
  3.640516544485578*^9}, {3.640516680517515*^9, 3.64051670367008*^9}, {
  3.640516856421387*^9, 3.640516857476563*^9}}],

Cell[BoxData["7273"], "Output",
 CellChangeTimes->{
  3.640516267450976*^9, 3.640516331001449*^9, {3.64051669008335*^9, 
   3.640516704421884*^9}, 3.640516857870048*^9, 3.640521992877929*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 68 - Magic 5-gon ring", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.641188734557348*^9, 
   3.641188740362408*^9}}],

Cell[TextData[{
 "Consider the following \[OpenCurlyDoubleQuote]magic\[CloseCurlyDoubleQuote] \
3-gon ring, filled with the numbers 1 to 6, and each line adding to nine.\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnQu8TXXax5ved6amRKK5NMZIanIZCeOaIaSQS6QRIpFcitySSEPuhEgy
cslUqFDEJCX3a+RSJqWQKCY1pMzUzPxf36e2l5PLXmuvtfbl/L6fz56TM2et
vc4+61n/5/9cfs+ld3Rq0Obss846q+u5R/+nQcse13bp0rJnw/89+o+qPbvd
ecf/HP2Pfx99fXP0xTeFEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBDpzZdf
fuk+++wz99///tcl+1qEEInz73//261evdoNHjzYderUydWuXdtVq1bNVa5c
2f779ttvd7169XIvvfSS++KLL2T3QqQJBw8edCtXrnQ9e/Z0RYsWdb/85S9d
wYIFXeHChV3x4sVdzZo1XePGjd1VV13lihQp4i6//HL361//2l58//nnn3f7
9+93//nPf2T3QqQY//znP92aNWtchw4d3CWXXGI23LRpU/fEE0+4N9980/39
73//gd0ePnzYbdu2zb3wwguuY8eOrkqVKi5nzpyufv367rnnnjvpMUKI5HDo
0CE3evRoW6/z5ctnvjj+Ot+P9xzffPON2759u5s6daorVaqU+/nPf+6aNWvm
du3aJVsXIskQV7v33nvdz372M1u/N23a5L7++mvftom/vnPnTjdixAh3xRVX
uEqVKrkNGza4b7/9VvYuRBL44IMPXPPmzc1PHzp0qPvHP/4RqC0uXrzYlSlT
xvyEOXPmONb8IM8vhDg9n376qWvTpo3F2Z5++mnHXjuM98H/J0ZP3G7dunWy
cyEigpjbgAED3MUXX+zGjBkTqk+NH79s2TJXsmRJi9MRiw/rvYQQ/8/06dNd
rly5XN++fUNbx7OyaNEi268Tm/v8889l60KEyCeffGJ75jp16rg9e/ZEam/E
5oj3PfPMM44anCjfW4jsAj708OHDzdZmz54duZ3t3bvXXX311a5evXqO/476
/YXIDrz11luW22Yt97Oe7tu3z91xxx0uR44cVuPu9XieM9OmTXN58uSxr16P
F0KcHmxsypQpZmPLly/3bGPE7oYNG2b1L0f/6bvWbceOHa5GjRpWH+/neCHE
qSHeRj1M6dKlfe3LX3nlFcvD3XnnnQnZOTl0aufz5s3rqNHxcw4hxMn5+OOP
zWfH1r3E2PHv582b5ypUqGB1rfSunZWAnQO178QI5s+fLzsXIkDoRWFfTf15
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
HcyePdv6tZkxTJ36tddea/bMvGH0Ing24K8Te0OHnVkoyf69EmHdunWmO8Pc
dNahZF9POkFcg36BefPmuapVq9o9RXwTfQ/qFHr27Gn30jPPPGOzNpi5QX0F
eyXuKX6eOTrjx4931Dakm0+Yanz99dfmP9HHQcyMdfqBBx6wXPKZZgjzvF27
dq1povO3u/jii20WGjMQiWVF9TuESefOnW29Yc+S9f+jzo+1/s0337QZb9TH
8yxkr7Js2TLr1cE3SsZ1JxN8b2bn3H777XYvVK5c2fKqzMM5k1/OXpF7Cm0v
1pzcuXPbV+oV1WfkD2x8woQJtvbyDMVfYg3202OCn4s2DM9uZpTy3OA5HMZ1
Rwl7ED4fZsWgdcX38H3QlmOWGz4NPiefH/o4PCuJ1fO8K1GihO1tuMd5DqRa
XX9YsJdj7eb5yBrw/vvve/bB8Qf27t1rddKsPazvaIbK1r3BcxV9BfQemjRp
Yv52or4pf0tmmfK3pVa8YcOGDjtJZ5+L9YW1BftlraZWrkiRIubPUzt38803
mw/KPGd81OXLl9vPoYuFv89+k8+CnyeuQVyP50Sm7T2xS2Ixffr0seccsRm0
BhKdfcO9Q3yO+Zp8huwj8aHS+Z6KCnJF1KJy73LfhpH3YoYxaxoxl3TWSuf+
XblypcUffvrTn1oOgeci+8r9+/fH9Xt98MEHts9kJjt7GzSzOP5M+6J0ghg6
PhzrBus5WgNBnp/nBfMyuaeqVatmM3VU23Bq8B0HDRrkLrroIvfYY4+Fdq/x
d2F9w6dl3lG6+vDMaW3evLnZJ/4JsUq/OQTq6yZNmmS+PvaAHxC0PSQD/EB8
F2K32HiY8+tmzZpl+yjiQel6T4UNvs4LL7xg91i7du3ckSNHQv2c+HvH+j07
dep0bH+bDrBWUCNQvXp1u3/Zi7BfTPS8+Ov4nb169Trm36ZzrI7PiVnV5Fyw
9bDzqOyjiCnhVxEjlf/+Q6hFwFcnL84+Oqr3xWdlPRw9enRazCrl3lm9erVp
wZJbfPXVV0O55qeeesr2nMSTiVWF8R5hQwyddQOfPevM+rDgHiJmwj01ZcoU
+e/Hwb3L2sH+hpxPlO/NOs5MBPKhzFOL8r39wH6a60XHjrhaWO9DXoO6O2L1
LVq0SDsdedbuO+64w+LqxNyifG9iSuR2qlSp4vh7RfneqcyKFSvsfkJn1ev9
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
kf78H38UqQc=
     "], {{0, 252}, {250, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{250, 252},
   PlotRange->{{0, 250}, {0, 252}}]], "Output",
  CellChangeTimes->{3.64118877220118*^9}],
 "\nWorking ",
 StyleBox["clockwise",
  FontWeight->"Bold"],
 ", and starting from the group of three with the numerically lowest external \
node (4,3,2 in this example), each solution can be described uniquely. For \
example, the above solution can be described by the set: 4,3,2; 6,2,1; 5,1,3.\
\n\nIt is possible to complete the ring with four different totals: 9, 10, \
11, and 12. There are eight solutions in total.\n",
 StyleBox["Total",
  FontWeight->"Bold"],
 "\t",
 StyleBox["Solution Set",
  FontWeight->"Bold"],
 "\n9\t4,2,3; 5,3,1; 6,1,2\n9\t4,3,2; 6,2,1; 5,1,3\n10\t2,3,5; 4,5,1; 6,1,3\n\
10\t2,5,3; 6,3,1; 4,1,5\n11\t1,4,6; 3,6,2; 5,2,4\n11\t1,6,4; 5,4,2; 3,2,6\n12\
\t1,5,6; 2,6,4; 3,4,5\n12\t1,6,5; 3,5,4; 2,4,6\n\nBy concatenating each group \
it is possible to form 9-digit strings; the maximum string for a 3-gon ring \
is 432621513.\n\nUsing the numbers 1 to 10, and depending on arrangements, it \
is possible to form 16- and 17-digit strings. What is the maximum ",
 StyleBox["16-digit",
  FontWeight->"Bold"],
 " string for a \[OpenCurlyDoubleQuote]magic\[CloseCurlyDoubleQuote] 5-gon \
ring?\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
CCGEEEIIIYTwjv8L/xubPw==
     "], {{0, 325}, {320, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{320, 325},
   PlotRange->{{0, 320}, {0, 325}}]], "Output",
  CellChangeTimes->{{3.64118877220118*^9, 3.641188795782485*^9}}]
}], "Text",
 CellChangeTimes->{{3.641188751014867*^9, 3.641188799070575*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "@", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FromDigits", "@*", "Flatten", "@*", "IntegerDigits"}], "/@", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a1", ",", "a2", ",", "a4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"a3", ",", "a4", ",", "a6"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"a5", ",", "a6", ",", "a8"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"a7", ",", "a8", ",", "a10"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"a9", ",", "a10", ",", "a2"}], "}"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"a1", ",", "1", ",", "6"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"a2", ",", 
           RowBox[{"Complement", "[", 
            RowBox[{
             RowBox[{"Range", "@", "10"}], ",", 
             RowBox[{"{", "a1", "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"a3", ",", 
           RowBox[{"Complement", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"a1", ",", "10"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"a1", ",", "a2"}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"a4", ",", 
           RowBox[{"Complement", "[", 
            RowBox[{
             RowBox[{"Range", "@", "10"}], ",", 
             RowBox[{"{", 
              RowBox[{"a1", ",", "a2", ",", "a3"}], "}"}]}], "]"}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"a5", ",", 
           RowBox[{"Complement", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"a1", ",", "10"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"a1", ",", "a2", ",", "a3", ",", "a4"}], "}"}]}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"a6", ",", 
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{"Complement", "[", 
              RowBox[{
               RowBox[{"Range", "@", "10"}], ",", 
               RowBox[{"{", 
                RowBox[{"a1", ",", "a2", ",", "a3", ",", "a4", ",", "a5"}], 
                "}"}]}], "]"}], ",", 
             RowBox[{"a1", "+", "a2", "-", "a3"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"a7", ",", 
           RowBox[{"Complement", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"a1", ",", "10"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "a1", ",", "a2", ",", "a3", ",", "a4", ",", "a5", ",", "a6"}], 
              "}"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"a8", ",", 
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{"Complement", "[", 
              RowBox[{
               RowBox[{"Range", "@", "10"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "a1", ",", "a2", ",", "a3", ",", "a4", ",", "a5", ",", "a6", 
                 ",", "a7"}], "}"}]}], "]"}], ",", 
             RowBox[{"a3", "+", "a4", "-", "a5"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"a9", ",", 
           RowBox[{"Complement", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"a1", ",", "10"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "a1", ",", "a2", ",", "a3", ",", "a4", ",", "a5", ",", "a6", 
               ",", "a7", ",", "a8"}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"a10", ",", 
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{"Complement", "[", 
                RowBox[{
                 RowBox[{"Range", "@", "10"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "a1", ",", "a2", ",", "a3", ",", "a4", ",", "a5", ",", "a6",
                    ",", "a7", ",", "a8", ",", "a9"}], "}"}]}], "]"}], ",", 
               RowBox[{"a5", "+", "a6", "-", "a7"}]}], "]"}], ",", 
             RowBox[{"a1", "+", "a4", "-", "a9"}]}], "]"}]}], "}"}]}], "]"}], 
       ",", "9"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"IntegerLength", "@", "#"}], "\[Equal]", "16"}], "&"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.641193942543488*^9}],

Cell[BoxData["6531031914842725"], "Output",
 CellChangeTimes->{3.641193946717641*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 69 - Totient maximum", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640925791755147*^9, 
   3.640925795630116*^9}}],

Cell[TextData[{
 "Euler\[CloseCurlyQuote]s Totient function, \[CurlyPhi](n) [sometimes called \
the phi function], is used to determine the number of numbers less than n \
which are relatively prime to n. For example, as 1, 2, 4, 5, 7, and 8, are \
all less than nine and relatively prime to nine, \[CurlyPhi](9)=6.\n",
 StyleBox["n",
  FontWeight->"Bold"],
 " \t",
 StyleBox["Relatively Prime",
  FontWeight->"Bold"],
 " \t",
 StyleBox["\[CurlyPhi](n)",
  FontWeight->"Bold"],
 " \t",
 StyleBox["n/\[CurlyPhi](n)",
  FontWeight->"Bold"],
 "\n2 \t1 \t\t\t1 \t2\n3 \t1,2 \t\t\t2 \t1.5\n4 \t1,3 \t\t\t2 \t2\n5 \t\
1,2,3,4 \t\t4 \t1.25\n6 \t1,5 \t\t\t2 \t3\n7 \t1,2,3,4,5,6 \t\t6 \t1.1666...\n\
8 \t1,3,5,7 \t\t4 \t2\n9 \t1,2,4,5,7,8 \t\t6 \t1.5\n10 \t1,3,7,9 \t\t4 \t2.5\n\
\nIt can be seen that n=6 produces a maximum n/\[CurlyPhi](n) for n \
\[LessEqual] 10.\n\nFind the value of n \[LessEqual] 1,000,000 for which n/\
\[CurlyPhi](n) is a maximum."
}], "Text",
 CellChangeTimes->{{3.640925807649007*^9, 3.640925853253755*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{
   RowBox[{"MaximalBy", "[", 
    RowBox[{
     RowBox[{"#", "/", 
      RowBox[{"EulerPhi", "[", "#", "]"}]}], "&"}], "]"}], "@", 
   RowBox[{"Range", "@", "1000000"}]}]}]], "Input",
 CellChangeTimes->{{3.640925866502033*^9, 3.640925971964197*^9}}],

Cell[BoxData["510510"], "Output",
 CellChangeTimes->{{3.640925876255788*^9, 3.640925981650306*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 70 - Totient permutation", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640925791755147*^9, 
   3.640925795630116*^9}, {3.640932959627257*^9, 3.640932963527789*^9}, {
   3.641167398411392*^9, 3.641167404496723*^9}}],

Cell[TextData[{
 "Euler\[CloseCurlyQuote]s Totient function, \[CurlyPhi](n) [sometimes called \
the phi function], is used to determine the number of positive numbers less \
than or equal to n which are relatively prime to n. For example, as 1, 2, 4, \
5, 7, and 8, are all less than nine and relatively prime to nine, \
\[CurlyPhi](9)=6.\nThe number 1 is considered to be relatively prime to every \
positive number, so \[CurlyPhi](1)=1.\n\nInterestingly, \
\[CurlyPhi](87109)=79180, and it can be seen that 87109 is a permutation of \
79180.\n\nFind the value of n, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", " ", "<", " ", "n", " ", "<", " ", 
    SuperscriptBox["10", "7"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", for which \[CurlyPhi](n) is a permutation of n and the ratio \
n/\[CurlyPhi](n) produces a minimum."
}], "Text",
 CellChangeTimes->{{3.641167413958277*^9, 3.641167433639751*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MinimalBy", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Reap", "[", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"Equal", "@@", 
               RowBox[{"Sort", "/@", 
                RowBox[{"IntegerDigits", "@", "#"}]}]}], ",", 
              RowBox[{"Sow", "@", "#"}]}], "]"}], "&"}], "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Times", "@@", "#"}], ",", 
             RowBox[{"Times", "@@", 
              RowBox[{"(", 
               RowBox[{"#", "-", "1"}], ")"}]}]}], "}"}]}], "&"}], "@", 
         RowBox[{"{", 
          RowBox[{"i", ",", "j"}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"PrimeRange", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sqrt", "@", "1*^7"}], "/", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1"}], "}"}]}], ")"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"PrimeRange", "[", 
           RowBox[{"i", ",", 
            RowBox[{"1*^7", "/", "i"}]}], "]"}]}], "}"}]}], "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"Divide", "@@", "#"}], "&"}]}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.642561926789081*^9, 3.642561968929116*^9}}],

Cell[BoxData["8319823"], "Output",
 CellChangeTimes->{3.642561971990444*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 71 - Ordered fractions", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640925791755147*^9, 
   3.640925795630116*^9}, {3.640932959627257*^9, 3.640932963527789*^9}}],

Cell[TextData[{
 "Consider the fraction, n/d, where n and d are positive integers. If n<d and \
HCF(n,d)=1, it is called a reduced proper fraction.\n\nIf we list the set of \
reduced proper fractions for d \[LessEqual] 8 in ascending order of size, we \
get:\n\n1/8, 1/7, 1/6, 1/5, 1/4, 2/7, 1/3, 3/8, ",
 StyleBox["2/5",
  FontWeight->"Bold"],
 ", 3/7, 1/2, 4/7, 3/5, 5/8, 2/3, 5/7, 3/4, 4/5, 5/6, 6/7, 7/8\n\nIt can be \
seen that 2/5 is the fraction immediately to the left of 3/7.\n\nBy listing \
the set of reduced proper fractions for d \[LessEqual] 1,000,000 in ascending \
order of size, find the numerator of the fraction immediately to the left of \
3/7."
}], "Text",
 CellChangeTimes->{{3.640932969649814*^9, 3.640932974116408*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Numerator", "@", 
  RowBox[{"Max", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Ceiling", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"3", "/", "7"}], "#"}], "-", "1"}], "]"}], "/", "#"}], "&"}],
     "@", 
    RowBox[{"Range", "@", "1000000"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.640933111812857*^9, 3.640933142256001*^9}, {
  3.640933187149592*^9, 3.640933232808943*^9}, {3.640933282064614*^9, 
  3.640933338983625*^9}}],

Cell[BoxData["428570"], "Output",
 CellChangeTimes->{{3.640933115390573*^9, 3.640933143419662*^9}, {
  3.640933209116681*^9, 3.640933233403547*^9}, {3.640933282707583*^9, 
  3.640933293409121*^9}, {3.640933323516408*^9, 3.640933341768321*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 72 - Counting fractions", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640925791755147*^9, 
   3.640925795630116*^9}, {3.640932959627257*^9, 3.640932963527789*^9}, {
   3.641173307692584*^9, 3.641173313064656*^9}}],

Cell["\<\
Consider the fraction, n/d, where n and d are positive integers. If n<d and \
HCF(n,d)=1, it is called a reduced proper fraction.

If we list the set of reduced proper fractions for d \[LessEqual] 8 in \
ascending order of size, we get:

1/8, 1/7, 1/6, 1/5, 1/4, 2/7, 1/3, 3/8, 2/5, 3/7, 1/2, 4/7, 3/5, 5/8, 2/3, \
5/7, 3/4, 4/5, 5/6, 6/7, 7/8

It can be seen that there are 21 elements in this set.

How many elements would be contained in the set of reduced proper fractions \
for d \[LessEqual] 1,000,000?\
\>", "Text",
 CellChangeTimes->{{3.641173319776134*^9, 3.64117332369549*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"EulerPhi", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1*^6"}], "}"}]}], "]"}], "-", "1"}]], "Input",
 CellChangeTimes->{{3.641173670649484*^9, 3.641173701095642*^9}, {
   3.641173749535469*^9, 3.641173755844792*^9}, 3.641173805824231*^9}],

Cell[BoxData["303963552391"], "Output",
 CellChangeTimes->{{3.641173682055093*^9, 3.641173693322389*^9}, {
   3.641173746856565*^9, 3.641173761220181*^9}, 3.641173812059478*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 73 - Counting fractions in a range", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640925791755147*^9, 
   3.640925795630116*^9}, {3.640932959627257*^9, 3.640932963527789*^9}, {
   3.640936841091004*^9, 3.640936844566233*^9}}],

Cell[TextData[{
 "Consider the fraction, n/d, where n and d are positive integers. If n<d and \
HCF(n,d)=1, it is called a reduced proper fraction.\n\nIf we list the set of \
reduced proper fractions for d \[LessEqual] 8 in ascending order of size, we \
get:\n\n1/8, 1/7, 1/6, 1/5, 1/4, 2/7, 1/3, ",
 StyleBox["3/8",
  FontWeight->"Bold"],
 ", ",
 StyleBox["2/5",
  FontWeight->"Bold"],
 ", ",
 StyleBox["3/7",
  FontWeight->"Bold"],
 ", 1/2, 4/7, 3/5, 5/8, 2/3, 5/7, 3/4, 4/5, 5/6, 6/7, 7/8\n\nIt can be seen \
that there are 3 fractions between 1/3 and 1/2.\n\nHow many fractions lie \
between 1/3 and 1/2 in the sorted set of reduced proper fractions for d \
\[LessEqual] 12,000?"
}], "Text",
 CellChangeTimes->{{3.640936853478581*^9, 3.640936858347778*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"Count", "[", 
    RowBox[{
     RowBox[{"CoprimeQ", "[", 
      RowBox[{"d", ",", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"d", "/", "3"}], "+", "1"}], "]"}], ",", 
         RowBox[{"Ceiling", "[", 
          RowBox[{
           RowBox[{"d", "/", "2"}], "-", "1"}], "]"}]}], "]"}]}], "]"}], ",", 
     "True"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "12000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.640937182824699*^9, 3.640937184892565*^9}, {
  3.640937374084933*^9, 3.640937416185512*^9}}],

Cell[BoxData["7295372"], "Output",
 CellChangeTimes->{{3.640937405868083*^9, 3.640937424176915*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 74 - Digit factorial chains", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640925791755147*^9, 
   3.640925795630116*^9}, {3.640932959627257*^9, 3.640932963527789*^9}, {
   3.640936068551717*^9, 3.640936072989195*^9}}],

Cell["\<\
The number 145 is well known for the property that the sum of the factorial \
of its digits is equal to 145:

1! + 4! + 5! = 1 + 24 + 120 = 145

Perhaps less well known is 169, in that it produces the longest chain of \
numbers that link back to 169; it turns out that there are only three such \
loops that exist:

169 \[RightArrow] 363601 \[RightArrow] 1454 \[RightArrow] 169
871 \[RightArrow] 45361 \[RightArrow] 871
872 \[RightArrow] 45362 \[RightArrow] 872

It is not difficult to prove that EVERY starting number will eventually get \
stuck in a loop. For example,

69 \[RightArrow] 363600 \[RightArrow] 1454 \[RightArrow] 169 \[RightArrow] \
363601 (\[RightArrow] 1454)
78 \[RightArrow] 45360 \[RightArrow] 871 \[RightArrow] 45361 (\[RightArrow] \
871)
540 \[RightArrow] 145 (\[RightArrow] 145)

Starting with 69 produces a chain of five non-repeating terms, but the \
longest non-repeating chain with a starting number below one million is sixty \
terms.

How many chains, with a starting number below one million, contain exactly \
sixty non-repeating terms?\
\>", "Text",
 CellChangeTimes->{{3.64093607892655*^9, 3.640936083739895*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"l", "[", 
    RowBox[{"1", "|", "2", "|", "145", "|", "40585"}], "]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"l", "[", 
    RowBox[{"871", "|", "872", "|", "45361", "|", "45362"}], "]"}], "=", 
   "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"l", "[", 
    RowBox[{"169", "|", "1454", "|", "363601"}], "]"}], "=", "3"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"l", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"l", "[", "n", "]"}], "=", 
    RowBox[{
     RowBox[{"l", "[", 
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{"IntegerDigits", "[", "n", "]"}], "!"}], "]"}], "]"}], "+", 
     "1"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.64093599871927*^9, 3.640936044619223*^9}, {
   3.640936111118533*^9, 3.640936119956136*^9}, {3.6409362459775*^9, 
   3.640936270433937*^9}, {3.64093632353481*^9, 3.640936338270959*^9}, {
   3.640936378425004*^9, 3.640936425998957*^9}, {3.640936463849917*^9, 
   3.640936464212252*^9}, 3.6409367078887*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"Array", "[", 
    RowBox[{"l", ",", "1*^6"}], "]"}], ",", "60"}], "]"}]], "Input",
 CellChangeTimes->{{3.64093651050917*^9, 3.640936545112721*^9}, {
  3.64093662408883*^9, 3.640936654069719*^9}}],

Cell[BoxData["402"], "Output",
 CellChangeTimes->{{3.64093651581338*^9, 3.640936555214508*^9}, 
   3.640936627571301*^9, 3.640936666445579*^9, 3.640936723866651*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 75 - Singular integer right triangles", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640925791755147*^9, 
   3.640925795630116*^9}, {3.640932959627257*^9, 3.640932963527789*^9}, {
   3.640936068551717*^9, 3.640936072989195*^9}, {3.641258132973052*^9, 
   3.641258136084386*^9}}],

Cell[TextData[{
 "It turns out that 12 cm is the smallest length of wire that can be bent to \
form an integer sided right angle triangle in exactly one way, but there are \
many more examples.\n\n",
 StyleBox["12 cm",
  FontWeight->"Bold"],
 ": (3,4,5)\n",
 StyleBox["24 cm",
  FontWeight->"Bold"],
 ": (6,8,10)\n",
 StyleBox["30 cm",
  FontWeight->"Bold"],
 ": (5,12,13)\n",
 StyleBox["36 cm",
  FontWeight->"Bold"],
 ": (9,12,15)\n",
 StyleBox["40 cm",
  FontWeight->"Bold"],
 ": (8,15,17)\n",
 StyleBox["48 cm",
  FontWeight->"Bold"],
 ": (12,16,20)\n\nIn contrast, some lengths of wire, like 20 cm, cannot be \
bent to form an integer sided right angle triangle, and other lengths allow \
more than one solution to be found; for example, using 120 cm it is possible \
to form exactly three different integer sided right angle triangles.\n\n",
 StyleBox["120 cm",
  FontWeight->"Bold"],
 ": (30,40,50), (20,48,52), (24,45,51)\n\nGiven that L is the length of the \
wire, for how many values of L \[LessEqual] 1,500,000 can exactly one integer \
sided right angle triangle be formed?"
}], "Text",
 CellChangeTimes->{{3.641258143012646*^9, 3.641258147755157*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"Tally", "@", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"2", "k", " ", "m", 
        RowBox[{"(", 
         RowBox[{"m", "+", "n"}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1500000", "/", "2"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Pick", "[", 
            RowBox[{"#", ",", 
             RowBox[{"CoprimeQ", "[", 
              RowBox[{"#", ",", "m"}], "]"}]}], "]"}], "&"}], "@", 
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{"m", ",", "2"}], "]"}], "+", "1"}], ",", 
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"1500000", "/", 
                RowBox[{"(", 
                 RowBox[{"2", "m"}], ")"}]}], "-", " ", "m"}], ",", 
              RowBox[{"m", "-", "1"}]}], "]"}], ",", "2"}], "]"}]}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"1500000", "/", 
          RowBox[{"(", 
           RowBox[{"2", "m", 
            RowBox[{"(", 
             RowBox[{"m", "+", "n"}], ")"}]}], ")"}]}]}], "}"}]}], "]"}]}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"_", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641260153805346*^9, 3.641260173706761*^9}, {
   3.641264723064734*^9, 3.641264723422013*^9}, 3.64126476630411*^9, 
   3.641265310452517*^9}],

Cell[BoxData["161667"], "Output",
 CellChangeTimes->{
  3.641260185397514*^9, 3.641264733886815*^9, {3.641264777415698*^9, 
   3.641264792691391*^9}, 3.641265313644613*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 76 - 100", "Subsection",
 CellChangeTimes->{{3.640509015355191*^9, 3.640509022245683*^9}, {
  3.640519338671053*^9, 3.640519341443173*^9}, {3.6405218351164*^9, 
  3.640521837410107*^9}, {3.640692001248666*^9, 3.64069200435303*^9}}],

Cell[CellGroupData[{

Cell["Problem 76 - Counting summations", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640692358181316*^9, 3.640692361901387*^9}, {3.640933559225977*^9, 
   3.640933562569939*^9}}],

Cell["\<\
It is possible to write five as a sum in exactly six different ways:

4 + 1
3 + 2
3 + 1 + 1
2 + 2 + 1
2 + 1 + 1 + 1
1 + 1 + 1 + 1 + 1

How many different ways can one hundred be written as a sum of at least two \
positive integers?\
\>", "Text",
 CellChangeTimes->{{3.64093357038056*^9, 3.6409335765757*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PartitionsP", "@", "100"}], "-", "1"}]], "Input",
 CellChangeTimes->{{3.640933581768389*^9, 3.640933596584048*^9}}],

Cell[BoxData["190569291"], "Output",
 CellChangeTimes->{{3.640933590226762*^9, 3.640933597165834*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 77 - Prime summations", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640692358181316*^9, 3.640692361901387*^9}, {3.640933559225977*^9, 
   3.640933562569939*^9}, {3.641257493098583*^9, 3.641257497467353*^9}}],

Cell["\<\
It is possible to write ten as the sum of primes in exactly five different \
ways:

7 + 3
5 + 5
5 + 3 + 2
3 + 3 + 2 + 2
2 + 2 + 2 + 2 + 2

What is the first value which can be written as the sum of primes in over \
five thousand different ways?\
\>", "Text",
 CellChangeTimes->{{3.641257504382803*^9, 3.6412575092397*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IncreaseWhile", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Length", "@", 
     RowBox[{"IntegerPartitions", "[", 
      RowBox[{"#", ",", "All", ",", 
       RowBox[{"PrimeRange", "@", "#"}]}], "]"}]}], "<", "5*^3"}], "&"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.642561991387412*^9, 3.64256199417558*^9}}],

Cell[BoxData["71"], "Output",
 CellChangeTimes->{3.64256199509888*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 78 - Coin partitions", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640692358181316*^9, 3.640692361901387*^9}, {3.640933559225977*^9, 
   3.640933562569939*^9}, {3.641257493098583*^9, 3.641257497467353*^9}, {
   3.641296710202093*^9, 3.641296713267389*^9}}],

Cell["\<\
Let p(n) represent the number of different ways in which n coins can be \
separated into piles. For example, five coins can be separated into piles in \
exactly seven different ways, so p(5)=7.
OOOOO
OOOO   O
OOO   OO
OOO   O   O
OO   OO   O
OO   O   O   O
O   O   O   O   O

Find the least value of n for which p(n) is divisible by one million.\
\>", "Text",
 CellChangeTimes->{{3.641296722504782*^9, 3.641296726881249*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", "0", "]"}], "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"p", "[", "n", "]"}], "=", 
    RowBox[{"Mod", "[", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"k", "-", "1"}], ")"}]}], 
         RowBox[{"p", "[", 
          RowBox[{"n", "-", 
           RowBox[{"k", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", "k"}], "-", "1"}], ")"}], "/", "2"}]}]}], "]"}]}],
         ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{"#1", ",", 
              RowBox[{"-", "#2"}]}], "]"}], "&"}], "@@", 
           RowBox[{"Range", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"1", "+", 
                 RowBox[{"24", "n"}]}], "]"}], "+", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], ")"}], "/", "6"}], "]"}]}]}], 
         "}"}]}], "]"}], ",", "1*^6"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.641299564148845*^9, 3.641299584234977*^9}, {
  3.641299627553863*^9, 3.641299636710704*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IncreaseWhile", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"p", "@", "#"}], ">", "0"}], "&"}], "]"}]], "Input",
 CellChangeTimes->{{3.641299682786573*^9, 3.641299734699583*^9}, 
   3.641299823547407*^9}],

Cell[BoxData["55374"], "Output",
 CellChangeTimes->{{3.641299697750086*^9, 3.641299725925066*^9}, 
   3.641299794450267*^9, 3.641299824652559*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 79 - Passcode derivation", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640692358181316*^9, 3.640692361901387*^9}}],

Cell[TextData[{
 "A common security method used for online banking is to ask the user for \
three random characters from a passcode. For example, if the passcode was \
531278, they may ask for the 2nd, 3rd, and 5th characters; the expected reply \
would be: 317.\n\nThe text file, ",
 ButtonBox["keylog.txt",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/project/resources/p079_keylog.txt"], None},
  ButtonNote->"https://projecteuler.net/project/resources/p079_keylog.txt"],
 ", contains fifty successful login attempts.\n\nGiven that the three \
characters are always asked for in order, analyse the file so as to determine \
the shortest possible secret passcode of unknown length."
}], "Text",
 CellChangeTimes->{{3.640692367659233*^9, 3.640692386646243*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"keylog", "=", 
   RowBox[{"IntegerDigits", "/@", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<https://projecteuler.net/project/resources/p079_keylog.txt\>\"", 
      ",", "\"\<List\>\""}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.64069244363885*^9, 3.640692531719593*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "@", 
  RowBox[{"First", "@", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"___", ",", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "___", ",", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "___", ",", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", "___"}], "}"}]}], "]"}], 
      "&"}], ",", 
     RowBox[{"Permutations", "[", 
      RowBox[{"Union", "@@", "keylog"}], "]"}], ",", "keylog"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.64069342138487*^9, 3.640693523400934*^9}, {
  3.640693575013955*^9, 3.640693587059196*^9}}],

Cell[BoxData["73162890"], "Output",
 CellChangeTimes->{
  3.640693431423178*^9, 3.640693466620766*^9, 3.640693524965079*^9, {
   3.640693576007952*^9, 3.64069358750742*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 80 - Square root digital expansion", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640692358181316*^9, 3.640692361901387*^9}, {3.641204212335503*^9, 
   3.641204215725983*^9}}],

Cell["\<\
It is well known that if the square root of a natural number is not an \
integer, then it is irrational. The decimal expansion of such square roots is \
infinite without any repeating pattern at all.

The square root of two is 1.41421356237309504880..., and the digital sum of \
the first one hundred decimal digits is 475.

For the first one hundred natural numbers, find the total of the digital sums \
of the first one hundred decimal digits for all the irrational square roots.\
\>", "Text",
 CellChangeTimes->{{3.641204221452057*^9, 3.641204224756338*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"IntegerQ", "@", "#"}], ",", "0", ",", 
       RowBox[{"Total", "@", 
        RowBox[{"First", "@", 
         RowBox[{"RealDigits", "[", 
          RowBox[{"#", ",", "10", ",", "100"}], "]"}]}]}]}], "]"}], "&"}], 
    "@", 
    RowBox[{"Sqrt", "@", "i"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641204228656726*^9, 3.641204294851692*^9}, {
  3.641204333677305*^9, 3.641204337831964*^9}}],

Cell[BoxData["40886"], "Output",
 CellChangeTimes->{{3.641204241567352*^9, 3.641204260615052*^9}, 
   3.641204340987623*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 81 - Path sum: two ways", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640692358181316*^9, 3.640692361901387*^9}, {3.640739795222963*^9, 
   3.64073979825358*^9}, 3.640936365900233*^9}],

Cell[TextData[{
 "In the 5 by 5 matrix below, the minimal path sum from the top left to the \
bottom right, by ",
 StyleBox["only moving to the right and down",
  FontWeight->"Bold"],
 ", is indicated in bold red and is equal to 2427.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {
       StyleBox["131",
        FontColor->RGBColor[1, 0, 0]], "673", "234", "103", "18"},
      {
       StyleBox["201",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox["96",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox["342",
        FontColor->RGBColor[1, 0, 0]], "965", "150"},
      {"630", "803", 
       StyleBox["746",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox["422",
        FontColor->RGBColor[1, 0, 0]], "111"},
      {"537", "699", "497", 
       StyleBox["121",
        FontColor->RGBColor[1, 0, 0]], "956"},
      {"805", "732", "524", 
       StyleBox["37",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox["331",
        FontColor->RGBColor[1, 0, 0]]}
     }], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nFind the minimal path sum, in ",
 ButtonBox["matrix.txt",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/project/resources/p081_matrix.txt"], None},
  ButtonNote->"https://projecteuler.net/project/resources/p081_matrix.txt"],
 " (right click and \[OpenCurlyDoubleQuote]Save Link/Target As...\
\[CloseCurlyDoubleQuote]), a 31K text file containing a 80 by 80 matrix, from \
the top left to the bottom right by only moving right and down."
}], "Text",
 CellChangeTimes->{{3.640739811570829*^9, 3.640739916176326*^9}, {
  3.640739981007031*^9, 3.640739981007794*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrix", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://projecteuler.net/project/resources/p081_matrix.txt\>\"", 
     ",", "\"\<CSV\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.640739983117333*^9, 3.640740009082032*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"matrix", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", 
    RowBox[{"Round", "@", 
     RowBox[{"GraphDistance", "[", 
      RowBox[{
       RowBox[{"Graph", "[", 
        RowBox[{"#1", ",", 
         RowBox[{"EdgeWeight", "\[Rule]", "#2"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"Dimensions", "@", "matrix"}]}], "]"}]}]}], "&"}], "@@", 
  RowBox[{"Transpose", "@", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"#2", "-", "d"}], "\[Rule]", "#2"}], ",", "#"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"d", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "}"}]}], "]"}], 
        "&"}], ",", "matrix", ",", 
       RowBox[{"{", "2", "}"}]}], "]"}], ",", "2"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.641180494893382*^9, 3.641180536241664*^9}, {
  3.641180631019401*^9, 3.641180631992623*^9}, {3.64118075440596*^9, 
  3.641180854002111*^9}, {3.641180885196079*^9, 3.641180935915972*^9}, {
  3.641180990011906*^9, 3.641181007057039*^9}, {3.641181053888259*^9, 
  3.641181082740979*^9}}],

Cell[BoxData["427337"], "Output",
 CellChangeTimes->{{3.641180531562139*^9, 3.64118053666036*^9}, 
   3.641180633505743*^9, {3.641180755372481*^9, 3.641180839141878*^9}, {
   3.641180886252347*^9, 3.641180892185053*^9}, 3.641180936305728*^9, {
   3.641180990412362*^9, 3.641181007428487*^9}, {3.641181066100957*^9, 
   3.641181083113166*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 82 - Path sum: three ways", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640692358181316*^9, 3.640692361901387*^9}, {3.640739795222963*^9, 
   3.64073979825358*^9}, 3.640936365900233*^9, {3.641179703421526*^9, 
   3.6411797070649*^9}}],

Cell[TextData[{
 "NOTE: This problem is a more challenging version of Problem 81.\n\nThe \
minimal path sum in the 5 by 5 matrix below, by starting in any cell in the \
left column and finishing in any cell in the right column, and only moving \
up, down, and right, is indicated in red and bold; the sum is equal to 994.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"131", "673", 
       StyleBox["234",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox["103",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox["18",
        FontColor->RGBColor[1, 0, 0]]},
      {
       StyleBox["201",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox["96",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox["342",
        FontColor->RGBColor[1, 0, 0]], "965", "150"},
      {"630", "803", "746", "422", "111"},
      {"537", "699", "497", "121", "956"},
      {"805", "732", "524", "37", "331"}
     }], ")"}], TraditionalForm]]],
 "\n\nFind the minimal path sum, in ",
 ButtonBox["matrix.txt",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/project/resources/p082_matrix.txt"], None},
  ButtonNote->"https://projecteuler.net/project/resources/p082_matrix.txt"],
 " (right click and \[OpenCurlyDoubleQuote]Save Link/Target As...\
\[CloseCurlyDoubleQuote]), a 31K text file containing a 80 by 80 matrix, from \
the left column to the right column."
}], "Text",
 CellChangeTimes->{{3.640739811570829*^9, 3.640739916176326*^9}, {
  3.640739981007031*^9, 3.640739981007794*^9}, {3.641179712940703*^9, 
  3.641179722061016*^9}, {3.641179795402559*^9, 3.641179799675531*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrix", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://projecteuler.net/project/resources/p082_matrix.txt\>\"", 
     ",", "\"\<CSV\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.640739983117333*^9, 3.640740009082032*^9}, 
   3.641179785123598*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Round", "@", 
    RowBox[{"GraphDistance", "[", 
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"EdgeWeight", "\[Rule]", "#2"}]}], "]"}], ",", "0", ",", 
      RowBox[{"Last", "@", 
       RowBox[{"Dimensions", "@", "matrix"}]}]}], "]"}]}], "&"}], "@@", 
  RowBox[{"Transpose", "@", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#2", "-", "d"}], "\[Rule]", "#2"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"_", ",", "0"}], "}"}], "\[Rule]", "0"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"_", ",", "#"}], "}"}], "\[Rule]", "#"}], "&"}], 
                "@", 
                RowBox[{"Last", "@", 
                 RowBox[{"Dimensions", "@", "matrix"}]}]}]}], "}"}]}], ",", 
            "#"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"d", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "}"}]}], "]"}], 
        "&"}], ",", "matrix", ",", 
       RowBox[{"{", "2", "}"}]}], "]"}], ",", "2"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.641180494893382*^9, 3.641180536241664*^9}, {
  3.641180631019401*^9, 3.641180631992623*^9}, {3.64118075440596*^9, 
  3.641180854002111*^9}, {3.641180885196079*^9, 3.641180935915972*^9}, {
  3.641180990011906*^9, 3.641181007057039*^9}, {3.641181053888259*^9, 
  3.641181127513529*^9}, {3.641181200963162*^9, 3.641181203437894*^9}, {
  3.641181529226084*^9, 3.64118160259642*^9}, {3.641181779697061*^9, 
  3.641181841244012*^9}}],

Cell[BoxData["260324"], "Output",
 CellChangeTimes->{{3.641180531562139*^9, 3.64118053666036*^9}, 
   3.641180633505743*^9, {3.641180755372481*^9, 3.641180839141878*^9}, {
   3.641180886252347*^9, 3.641180892185053*^9}, 3.641180936305728*^9, {
   3.641180990412362*^9, 3.641181007428487*^9}, {3.641181066100957*^9, 
   3.641181083113166*^9}, 3.641181127950946*^9, {3.64118157677213*^9, 
   3.641181603361557*^9}, {3.641181786043857*^9, 3.641181842034134*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 83 - Path sum: four ways", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640692358181316*^9, 3.640692361901387*^9}, {3.640739795222963*^9, 
   3.64073979825358*^9}, 3.640936365900233*^9, {3.641179703421526*^9, 
   3.6411797070649*^9}, {3.641257903613148*^9, 3.641257911292564*^9}}],

Cell[TextData[{
 "NOTE: This problem is a more challenging version of Problem 81.\n\nIn the 5 \
by 5 matrix below, the minimal path sum from the top left to the bottom \
right, by moving left, right, up, and down, is indicated in bold red and is \
equal to 2297.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {
       StyleBox["131",
        FontColor->RGBColor[1, 0, 0]], "673", 
       StyleBox["234",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox["103",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox["18",
        FontColor->RGBColor[1, 0, 0]]},
      {
       StyleBox["201",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox["96",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox["342",
        FontColor->RGBColor[1, 0, 0]], "965", 
       StyleBox["150",
        FontColor->RGBColor[1, 0, 0]]},
      {"630", "803", "746", 
       StyleBox["422",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox["111",
        FontColor->RGBColor[1, 0, 0]]},
      {"537", "699", "497", 
       StyleBox["121",
        FontColor->RGBColor[1, 0, 0]], "956"},
      {"805", "732", "524", 
       StyleBox["37",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox["331",
        FontColor->RGBColor[1, 0, 0]]}
     }], ")"}], TraditionalForm]]],
 "\n\nFind the minimal path sum, in ",
 ButtonBox["matrix.txt",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/project/resources/p083_matrix.txt"], None},
  ButtonNote->"https://projecteuler.net/project/resources/p083_matrix.txt"],
 " (right click and \[OpenCurlyDoubleQuote]Save Link/Target As...\
\[CloseCurlyDoubleQuote]), a 31K text file containing a 80 by 80 matrix, from \
the top left to the bottom right by moving left, right, up, and down."
}], "Text",
 CellChangeTimes->{{3.640739811570829*^9, 3.640739916176326*^9}, {
  3.640739981007031*^9, 3.640739981007794*^9}, {3.641179712940703*^9, 
  3.641179722061016*^9}, {3.641179795402559*^9, 3.641179799675531*^9}, {
  3.641257918399639*^9, 3.641257956719179*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrix", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://projecteuler.net/project/resources/p083_matrix.txt\>\"", 
     ",", "\"\<CSV\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.640739983117333*^9, 3.640740009082032*^9}, 
   3.641179785123598*^9, 3.641257948008952*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"matrix", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", 
    RowBox[{"Round", "@", 
     RowBox[{"GraphDistance", "[", 
      RowBox[{
       RowBox[{"Graph", "[", 
        RowBox[{"#1", ",", 
         RowBox[{"EdgeWeight", "\[Rule]", "#2"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"Dimensions", "@", "matrix"}]}], "]"}]}]}], "&"}], "@@", 
  RowBox[{"Transpose", "@", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"#2", "-", "d"}], "\[Rule]", "#2"}], ",", "#"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"d", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}]}], "]"}], "&"}],
        ",", "matrix", ",", 
       RowBox[{"{", "2", "}"}]}], "]"}], ",", "2"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.641180494893382*^9, 3.641180536241664*^9}, {
  3.641180631019401*^9, 3.641180631992623*^9}, {3.64118075440596*^9, 
  3.641180854002111*^9}, {3.641180885196079*^9, 3.641180935915972*^9}, {
  3.641180990011906*^9, 3.641181007057039*^9}, {3.641181053888259*^9, 
  3.641181082740979*^9}, {3.641258030385111*^9, 3.64125803752679*^9}}],

Cell[BoxData["425185"], "Output",
 CellChangeTimes->{{3.641180531562139*^9, 3.64118053666036*^9}, 
   3.641180633505743*^9, {3.641180755372481*^9, 3.641180839141878*^9}, {
   3.641180886252347*^9, 3.641180892185053*^9}, 3.641180936305728*^9, {
   3.641180990412362*^9, 3.641181007428487*^9}, {3.641181066100957*^9, 
   3.641181083113166*^9}, {3.641258048902253*^9, 3.641258056641476*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 84 - Monopoly odds", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640692358181316*^9, 3.640692361901387*^9}, {3.640739795222963*^9, 
   3.64073979825358*^9}, 3.640936365900233*^9, {3.641179703421526*^9, 
   3.6411797070649*^9}, {3.641257903613148*^9, 3.641257911292564*^9}, {
   3.641530975766841*^9, 3.641530989036099*^9}}],

Cell[TextData[{
 "In the game, ",
 StyleBox["Monopoly",
  FontSlant->"Italic"],
 ", the standard board is set up in the following way:\n\n",
 Cell[BoxData[GridBox[{
    {"GO", "A1", "CC1", "A2", "T1", "R1", "B1", "CH1", "B2", "B3", "JAIL"},
    {"H2", " ", "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]", "C1"},
    {"T2", "\[SpanFromAbove]", "\[SpanFromBoth]", "\[SpanFromBoth]", 
     "\[SpanFromBoth]", "\[SpanFromBoth]", "\[SpanFromBoth]", 
     "\[SpanFromBoth]", "\[SpanFromBoth]", "\[SpanFromBoth]", "U1"},
    {"H1", "\[SpanFromAbove]", "\[SpanFromBoth]", "\[SpanFromBoth]", 
     "\[SpanFromBoth]", "\[SpanFromBoth]", "\[SpanFromBoth]", 
     "\[SpanFromBoth]", "\[SpanFromBoth]", "\[SpanFromBoth]", "C2"},
    {"CH3", "\[SpanFromAbove]", "\[SpanFromBoth]", "\[SpanFromBoth]", 
     "\[SpanFromBoth]", "\[SpanFromBoth]", "\[SpanFromBoth]", 
     "\[SpanFromBoth]", "\[SpanFromBoth]", "\[SpanFromBoth]", "C3"},
    {"R4", "\[SpanFromAbove]", "\[SpanFromBoth]", "\[SpanFromBoth]", 
     "\[SpanFromBoth]", "\[SpanFromBoth]", "\[SpanFromBoth]", 
     "\[SpanFromBoth]", "\[SpanFromBoth]", "\[SpanFromBoth]", "R2"},
    {"G3", "\[SpanFromAbove]", "\[SpanFromBoth]", "\[SpanFromBoth]", 
     "\[SpanFromBoth]", "\[SpanFromBoth]", "\[SpanFromBoth]", 
     "\[SpanFromBoth]", "\[SpanFromBoth]", "\[SpanFromBoth]", "D1"},
    {"CC3", "\[SpanFromAbove]", "\[SpanFromBoth]", "\[SpanFromBoth]", 
     "\[SpanFromBoth]", "\[SpanFromBoth]", "\[SpanFromBoth]", 
     "\[SpanFromBoth]", "\[SpanFromBoth]", "\[SpanFromBoth]", "CC2"},
    {"G2", "\[SpanFromAbove]", "\[SpanFromBoth]", "\[SpanFromBoth]", 
     "\[SpanFromBoth]", "\[SpanFromBoth]", "\[SpanFromBoth]", 
     "\[SpanFromBoth]", "\[SpanFromBoth]", "\[SpanFromBoth]", "D2"},
    {"G1", "\[SpanFromAbove]", "\[SpanFromBoth]", "\[SpanFromBoth]", 
     "\[SpanFromBoth]", "\[SpanFromBoth]", "\[SpanFromBoth]", 
     "\[SpanFromBoth]", "\[SpanFromBoth]", "\[SpanFromBoth]", "D3"},
    {"G2J", "F3", "U2", "F2", "F1", "R3", "E3", "E2", "CH2", "E1", "FP"}
   },
   GridBoxDividers->{
    "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
     "RowsIndexed" -> {}}]]],
 "\n\nA player starts on the GO square and adds the scores on two 6-sided \
dice to determine the number of squares they advance in a clockwise \
direction. Without any further rules we would expect to visit each square \
with equal probability: 2.5%. However, landing on G2J (Go To Jail), CC \
(community chest), and CH (chance) changes this distribution.\n\nIn addition \
to G2J, and one card from each of CC and CH, that orders the player to go \
directly to jail, if a player rolls three consecutive doubles, they do not \
advance the result of their 3rd roll. Instead they proceed directly to jail.\n\
\nAt the beginning of the game, the CC and CH cards are shuffled. When a \
player lands on CC or CH they take a card from the top of the respective pile \
and, after following the instructions, it is returned to the bottom of the \
pile. There are sixteen cards in each pile, but for the purpose of this \
problem we are only concerned with cards that order a movement; any \
instruction not concerned with movement will be ignored and the player will \
remain on the CC/CH square.\n\n    Community Chest (2/16 cards):\n        \
Advance to GO\n        Go to JAIL\n    Chance (10/16 cards):\n        Advance \
to GO\n        Go to JAIL\n        Go to C1\n        Go to E3\n        Go to \
H2\n        Go to R1\n        Go to next R (railway company)\n        Go to \
next R\n        Go to next U (utility company)\n        Go back 3 squares.\n\n\
The heart of this problem concerns the likelihood of visiting a particular \
square. That is, the probability of finishing at that square after a roll. \
For this reason it should be clear that, with the exception of G2J for which \
the probability of finishing on it is zero, the CH squares will have the \
lowest probabilities, as 5/8 request a movement to another square, and it is \
the final square that the player finishes at on each roll that we are \
interested in. We shall make no distinction between \
\[OpenCurlyDoubleQuote]Just Visiting\[CloseCurlyDoubleQuote] and being sent \
to JAIL, and we shall also ignore the rule about requiring a double to \
\[OpenCurlyDoubleQuote]get out of jail\[CloseCurlyDoubleQuote], assuming that \
they pay to get out on their next turn.\n\nBy starting at GO and numbering \
the squares sequentially from 00 to 39 we can concatenate these two-digit \
numbers to produce strings that correspond with sets of squares.\n\n\
Statistically it can be shown that the three most popular squares, in order, \
are JAIL (6.24%) = Square 10, E3 (3.18%) = Square 24, and GO (3.09%) = Square \
00. So these three most popular squares can be listed with the six-digit \
modal string: 102400.\n\nIf, instead of using two 6-sided dice, two 4-sided \
dice are used, find the six-digit modal string."
}], "Text",
 CellChangeTimes->{{3.641530998559247*^9, 3.641531280222646*^9}, {
  3.641531350178188*^9, 3.641531350178218*^9}, {3.641531380571209*^9, 
  3.641531387446434*^9}, {3.641531434465777*^9, 3.641531444016445*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "[", 
  RowBox[{
   RowBox[{"Mod", "[", 
    RowBox[{
     RowBox[{"TakeLargestBy", "[", 
      RowBox[{
       RowBox[{"Range", "@", "40"}], ",", 
       RowBox[{"PDF", "@", 
        RowBox[{"StationaryDistribution", "@", 
         RowBox[{"DiscreteMarkovProcess", "[", 
          RowBox[{
           RowBox[{"SparseArray", "[", 
            RowBox[{
             RowBox[{"40", "\[Rule]", "1"}], ",", "40"}], "]"}], ",", 
           RowBox[{
            RowBox[{"MatrixPower", "[", 
             RowBox[{
              RowBox[{"SparseArray", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
                  RowBox[{"1", "\[LessEqual]", 
                   RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"j", "-", "i"}], ",", "40"}], "]"}], 
                   "\[LessEqual]", "4"}]}], "\[Rule]", 
                 RowBox[{"1", "/", "4"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"40", ",", "40"}], "}"}]}], "]"}], ",", "2"}], "]"}],
             ".", "\[IndentingNewLine]", 
            RowBox[{"SparseArray", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"i_", ",", "i_"}], "}"}], "/;", 
                  RowBox[{"FreeQ", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "2", ",", "7", ",", "17", ",", "22", ",", "30", ",", "33",
                     ",", "36"}], "}"}], ",", "i"}], "]"}]}], "\[Rule]", 
                 "1"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"30", ",", "10"}], "}"}], "\[Rule]", "1"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"2", "|", "17", "|", "33"}], ",", 
                   RowBox[{"40", "|", "10"}]}], "}"}], "\[Rule]", 
                 RowBox[{"1", "/", "16"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"cc", ":", 
                    RowBox[{"2", "|", "17", "|", "33"}]}], ",", "cc_"}], 
                  "}"}], "\[Rule]", 
                 RowBox[{"14", "/", "16"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"7", "|", "22", "|", "36"}], ",", 
                    RowBox[{
                    "40", "|", "10", "|", "11", "|", "24", "|", "39"}]}], 
                   "}"}], "|", 
                  RowBox[{"{", 
                   RowBox[{"7", ",", 
                    RowBox[{"5", "|", "4", "|", "12"}]}], "}"}], "|", 
                  RowBox[{"{", 
                   RowBox[{"22", ",", 
                    RowBox[{"5", "|", "19", "|", "28"}]}], "}"}], "|", 
                  RowBox[{"{", 
                   RowBox[{"36", ",", 
                    RowBox[{"33", "|", "12"}]}], "}"}]}], "\[Rule]", 
                 RowBox[{"1", "/", "16"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"7", ",", "15"}], "}"}], "|", 
                  RowBox[{"{", 
                   RowBox[{"22", ",", "25"}], "}"}]}], "\[Rule]", 
                 RowBox[{"2", "/", "16"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"36", ",", "5"}], "}"}], "\[Rule]", 
                 RowBox[{"3", "/", "16"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"ch", ":", 
                    RowBox[{"7", "|", "22", "|", "36"}]}], ",", "ch_"}], 
                  "}"}], "\[Rule]", 
                 RowBox[{"6", "/", "16"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"40", ",", "40"}], "}"}]}], "]"}], ".", 
            "\[IndentingNewLine]", 
            RowBox[{"SparseArray", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"i_", ",", "i_"}], "}"}], "/;", 
                  RowBox[{"i", "\[NotEqual]", "10"}]}], "\[Rule]", 
                 RowBox[{"1", "-", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"2", "/", 
                    RowBox[{"4", "^", "2"}]}], ")"}], "^", "2"}]}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"i_", ",", "10"}], "}"}], "/;", 
                  RowBox[{"i", "\[NotEqual]", "10"}]}], "\[Rule]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"2", "/", 
                    RowBox[{"4", "^", "2"}]}], ")"}], "^", "2"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"10", ",", "10"}], "}"}], "\[Rule]", "1"}]}], "}"}],
               ",", 
              RowBox[{"{", 
               RowBox[{"40", ",", "40"}], "}"}]}], "]"}]}]}], "]"}]}]}], ",", 
       "3"}], "]"}], ",", "40"}], "]"}], ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.641546271002864*^9, 3.64154630052539*^9}, 
   3.64154664392681*^9, {3.641546802782688*^9, 3.641546809330699*^9}, {
   3.641546864517815*^9, 3.641546901207723*^9}, {3.641547367910572*^9, 
   3.641547369116978*^9}, {3.641547516771251*^9, 3.641547524821501*^9}, 
   3.641547595948106*^9}],

Cell[BoxData["101524"], "Output",
 CellChangeTimes->{{3.641546281248532*^9, 3.64154630360095*^9}, 
   3.641546655357087*^9, 3.641546811900731*^9, {3.641546880308355*^9, 
   3.641546903226672*^9}, 3.641547371742345*^9, 3.641547527098975*^9, 
   3.641547597783997*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.641547536353026*^9, 3.641547591814792*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "15", ",", "24"}], "}"}]], "Output",
 CellChangeTimes->{{3.641547562158879*^9, 3.641547583901327*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 85 - Counting rectangles", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640692358181316*^9, 3.640692361901387*^9}, {3.640739795222963*^9, 
   3.64073979825358*^9}, 3.640936365900233*^9, {3.640938546660024*^9, 
   3.640938550312022*^9}}],

Cell[TextData[{
 "By counting carefully it can be seen that a rectangular grid measuring 3 by \
2 contains eighteen rectangles:\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnQnYTtXaxztfp8npRFJJGgx1NIiQunJ0pBClo0Rd6T2ZMxQZIokmFEki
ZKgoKg2KZsksRGWskEIqKYU0D+vrt77vXtfD4Zyeh/denmffv+va3vf9e569
1t5r73uvve573atE0/aXtvyfffbZp9OBv/9zaZOu53bs2KRb/T///kf1bp1b
NN33918W/L7960/77INoGIZhGIZhGIZhGIZhGIZhGIZhGIZh/Gd+++039+OP
P7offvghURvHHPvca/LLL7+477//Pmyp52Jv0lO1dPXYdd9R//XXX9O+xr75
5hs3e/Zs9+qrr7rJkye7KVOmuFmzZnlt+vTp7rXXXgs6GtvUqVO9xvb6668H
nd93pvNd0adNmxZ09j1jxgy3fPly9/XXXzu5blatWuXef/99v23ZssXrHOuK
FSuCzvGib9u2LWj8P59D53uisz/2i/7ll196benSpW716tXhfH366afh82vW
rAk6+/niiy/8tnXr1qBTXzT29+2333od25aqf/fdd16nXTZt2uT1jRs3Os55
JvfU7sBxXX/99e6KK65I1HbllVf660vagfMg1x+/o//8889uyZIlXpszZ05o
f66lt956y+tvvPGG+/jjj71Oey9cuNDr8+bNc59//nm45vgbnXtow4YN6u08
btw4V6tWLVe9enW/1a1b15+Hhg0buvPPPz/o9erVC/p5550X9EsuucTrl112
WdDY+Bud/xeN74n+z3/+051zzjnuH//4hy+H/aJfdNFF4fM1a9YM7XLhhRcG
nfqKfsEFFwS9Tp06Xrv88stdjRo1gs53pe6iV6tWzV188cWh7nJM1EWOqX79
+mEfqXrqMbE/PofO/lLr2KBBA69zTtHOPfdcX8cFCxak3c5cb6effro7+OCD
3SGHHOIKFSrkihUr5ooXL+4OP/xwr4l+9NFHe71IkSJBL1y4sNfY+H1n+qGH
Hhp0vovGvgoWLOhKlCjhzxO2mfpg29q0aeMaNWrkN+4D9HXr1rkmTZoE/cMP
P/T6okWLgta4cWPH59Dnzp0b9NatWwebOWHCBH/uqlat6tq3bx/O19ChQ8Pn
e/ToEfTRo0e7rl27+u3xxx8Pz4aBAwd6rVu3bv6ZhY6dHTBggNe7d+/unzHo
X331lbv99tu93qpVK/fYY4+p34/YgtKlS7u8vDx37bXXJmLj3jvooIPc+PHj
Q7tNnDjR3XXXXX577rnnvM4zfOzYsV7r169faDfs6PDhw4Mu1yLP1GHDhnn9
3nvv9TYbHbvM37179/b35vPPP6/ezu3atfP3WOxzn4QNW1GgQAF/TaXbTjzP
TzrpJH99LV68WHXjGqlSpYrDRkq/lnuD/gZ9UTbpG/K+iK0VXfq19D1E4//l
vZLvic7+pL+LDaRPwrOMY5fzQJ9FPr9+/fqgf/bZZ0GXfg39Wu4x0enLotOf
wu5LXaQPT3/qo48+8nqvXr28bc70vsoU+msnnniitxG8IyRhwzZig+TdCPhd
/l902pNnpuhyDaFzfe2o086pOu2LzjXG31xjHTp0cC+//LJ6O2MPTj311Ojn
Pgnb22+/7fumkyZNytju8s6fH9fBf6JPnz6+X887vma52FLeP/mpWS488MAD
7r777otmdz/44IPEjHc+9NBD/r7QLvenn35yXbp0ca+88koUu1uuXLnEtHFM
GKc68sgjM3qvSaLdZYy1Y8eOfqxVs1xgrGLMmDFmdxWIZXfp99IHkvFjTTp3
7uzHDbXLTSK07zHHHJPRe00S7S73BWN0MvagCeMfqf45Lczu6kKfN8b11bNn
T1epUqXEtHFMsLvHH3988O+kQxLtbhIxu6sH48KffPJJ8Flogj+3YsWKiWnj
mFh/Nz02b97sRowY4fipWS7gK49xrs3u6oGfrW/fviFGRxNiBcuXL5+YNo6J
je+mh/nVkkFMvxr+rSeffNL8ajkMdveII46weIY/iNndZGB218hPrL+bHsTV
Et8u8bWaMAb/wgsvmN1VIJbdJb73zTffdGvXrlUv+8Ybb3QVKlRITBvHxMZ3
0wO/BzHz/NQsF+gLxcgZYHY3Gdxyyy0Wz6CExTMY/w2zu3pIPAPz1rTLtngG
Pay/mx6MLzDGGmOcgdxAL730kvV3FYg5b4I5yjHmq5FzxMZ3dbDx3fQwv1oy
iBlHdscdd5hfLcexeIb0MLubDMzuGvmJ9XfTg/GFwYMHRxln4DzHyFNldlcP
xnfJBc0Yr3bZ5CW1eAYdsLvHHntsRuNJSbS73Bf0SWLEMzD2F2PevtndZGDx
DHpYPEN6YPfIRWZ5cXKbmP1d8jCzvoh22TfddJPFMyiB3WX9hkz85Em0u+Ss
vuGGG0Iec02eeeYZ98QTT5jdVSDm+O79998fJW7F4hn0ML9aetDnZE0lWS9L
E/Or6WF+NSM/MbubHmZ3k4HZXSM/we4WLVo0o3n/SbS7zBEeNGhQlPlEshaz
drlmd/VgfJf19GKMY9n4rh7Y3eOOO87iGYxdYnY3GVg8gx4Wz5Ae5IuiLyLr
wGoi681ql2t2Vw+ur3feecevKa1dtuUj08PiGdKDeAb8vhs2bIiSB3LIkCFm
dxWIOb7br18/9+yzz6qXfd1119n4rhLmV0uPmH41fC28C2qXa3ZXD/OrJQOz
u+lhdjcZxLS7zEO3+N3cxuIZ0oPc4xwvY62a5QJjfpxz7XLN7upBPMOXX34Z
ZV7izTffbPEMSkg8g/nVjF1hdjcZWDyDHnsingEbSJ4sza1x48bR4hkoM0Y8
A2McmzZtsv6uArHXV1u1apV62V27dnWlS5dWv5eTuI0cOdJfXy+++GLa7bxo
0SJXtmxZV6RIEVesWDFXvHhx324nnHCCt+XESYiOxkbfWnTWuRCd39HYyI+2
M53vil6oUCFXpkwZ74NYsmSJr/t3333nj4c5XWw8U9B5byMOQHSJSSc+XTTm
xPM5dPLwiT5ixAjHftHnz5/v+vfv72rWrLldXAHPLPl8av4EcmuKLvHR3Ffj
xo3zGuN4c+fO9foPP/zgHn300VCXBQsWeJ33zeHDh3sdf/Pdd9+tfj/OnDnT
lSpVyo9r5+XlJWI7++yz3YEHHhjamefsww8/7Nf6ZXvwwQe9TnwL65yiMT46
ceJEr/N87NGjh7vmmmtc27Ztw/3FM5v1dNCvv/56xzMNHTvL3y1btnTVqlVz
jz32WJR4hoIFC4Z7THPjPi9RooR6uSVLltzODmltHGuBAgUy8qsxxnn11Ve7
hg0b+lwx2ECe1cuWLfP2h3hA9N69e7u3337b66NGjXJdunTx+oABA7zNROd3
NDZsDBpb3759g851j0Y/u2nTpq5y5crezyQ2insAu3Trrbf6TewxdrZXr15B
l9ymK1euDBp1l9iwpUuXBp2YHvaLPn36dMecHvr4HJOcB/LVyOex06Jz74jO
Z9DIYzZ06FCv3X777Y45aOjMg+Mel7rMmjXL6+T55Rygc545p5neV5nCc4hx
v9q1a7sGDRqobrz34uvRLrdOnTq+v7BmzRp/vhl3xZcq16X4VWlPnt9oy5cv
D9cQ1wy+MXyhTz/9tHv33Xe9vmXLFm+D0YkV47vo5B/j78cff9w1atTI/9Ru
Z3meyDFqbfRnLr/8csc8eO2yx4wZ4+8r7XJ53jZr1sxhUzJpK2zEnDlzosSy
0j/QLjeJ8QxA/4z8hNrlcsy882uXS/u2aNFCvVzsOM/fGPnt6QdI/1sTnlG8
4y1cuFC9bGwgZWuXix3huuZZncn3mT9FX21P1+u/wTo79KG1y+V9c/bs2WHs
QRPsHn1x7XKBnMOx5ujF8O1zrByzdrlAn1jesTSJdS/zLoEd+vHHH9XLJj6J
srXL5Zi5tilfu2zDMAxsEM8afBzaZWPrKVu7XPw82PtM7e6UKVPCGJgmPCti
5GzifK1fvz5K349+X4x1CIDx6Rhryi1evDiM32uyefNmPy6rXS7XF+/64hPW
hHjQGPcyfezRo0dHGWfg/RH/tna5uzvO0KlTJ/f666+r13vatGmuZ8+eUew9
Pr0YccP4PmPEM8Cll14aJVcLvtQYOYfxd9WrVy/K+Madd94Z/LCadOjQwXFf
aZfLmApzNmKMac+YMcPHlmiXy5gO8QXiP0+Xdu3aRZk3YX41XS666KIo8bvE
Bd5zzz1R5gYS06Bdbuz8DLy/apdrdjd9iKeK4QM1u6tL69ato8QzPPXUU/4d
VLtcxpJi3I/EMwwbNiyjfNi7C7GWEk+uCeO6xFzG8JPznk/8mna5vDc/8sgj
Ib4wk+/H8MkxzplpnXcH7gvih2P4fRnbIOZYu1zA9xBjDWXOc4zYEY41hr8F
6P/F8DHFupfxq3G8MXwmtHOsGA6OOcY9ZRiGgQ3CZxwrniGGvxj/Kc/1TGPn
8MnJvDBNmBdEXn7tcnkmM08kRh9M5ktplwt33XVXlFzv+GyZb61dLrEy+Le0
y6X/QxxFjLE75qrFiA+nv0nZzFvTLpt4mRj+A54zjG9kajtj+dUok7nD2uUy
vnvFFVf4WDLtsvFxMwanXS6YX00H86vpkq1+NYtn0MPiGfQwu6uH2d30wdcc
Y5zB7K4u5AeKMc5AH5/cJdrl8j7Tpk2bKOMMvH9mkpd1dyFWOsY4A7488sPE
eK6vXbs2ytoejK0whpZpjBDPZ8aI93S9/ki5Mcbh8QEwtstP7bJjHTNwb8Q6
5hh+bvE3a5cLnOsYfu5Y9zJQbozrizKTdsyGYRjYHuZlx4jn4tkaYy0BbC5x
FJk+24nxjhHvTCxrjHn79Al4J4qRL4q58/hftcsFxjdizI1mzC/GnFnGVMhb
rl0u/VzmEJBrXrts8kLHiBHC3jK2EiOGA9sVI26FeAbyQrB2RCbfj+VXmzx5
suvYsWOU8d3LLrssSjwDc7fIf65dLphfTQfzq+mSrX41i2fQw+IZ9DC7q4fZ
3fQZO3ZslFh+s7u6sIZYjLybjOnEuB+Zhx7D3jPOwBptrJelXTbr+2Wal3B3
wI/IXCRZ80gT3ltjPGsY12UsSdYcMwzDMAzDMHIX+virV68O63lrgn8rxvwD
xpMYtyOOI5Pv8/4ZI66A9/wY/k/eifDpkbtJu2yuzRg5+YGxqFhzoxnj1S6X
2I3OnTtHGWdg/oKsM60Ja3rHuL6Ihyeff4yc6+T3a9mypXq52Ns+ffpkPJ5k
fjU9kuhXY63XGPFc5lfTI6ZfjVyy9evXzzq/mtldPczu6mF2Vw+zu+lDTGmM
Nfi4Prp27apeLuMLV155ZRQ/5IQJExzre2iXC8S1x1hTkzifF154Qb1cxhqZ
R6BdLvOYsD8x5iJh61esWBHlWcP4Roy+DHPGYsUzkPcyRs4TwzAMI302btwY
Zc6soQt+phhrwBh6cC/HWlMJ/1aM9ynGDWO8W3AvMU7AeEMm37/tttvc7Nmz
1etN7AdzNrTLZS4564rHyKXBewljDdrlQvPmzR0587TLxXfAGK92ucRutG3b
NooNGj58eJQ8kMxBJ5Yfm7BjTjTGAkRPzd8lWqpOnptUXXJu8f870xm7w7dP
nFBq7jnKl8/+ET21jruq+44647tNmjTZZd13pvM9qfuu9NRj3ZnOM4bzncka
G+wLv9qoUaP8nLVVq1aFPpGsOym6HC/9JubEoJPnRerD72hsqfc3sVOif/bZ
Z07OO3l/8/LyvC7PDHSeIfJ5iY1jLEXqwibPdJ51ovH/kg+J74nO/qTu9AeI
matRo8Z2zxruUfk89RWd4xBdxq44XvxTaJwHmQNGGZwnqYs8++W5iE6cT8+e
PaOMOV544YVu3LhxPtaHuUXSbtQZjS2130D+HtHfe++9oPMZ0fmu6JxP0SVe
jbWn8DH961//8rq0P+0kn8VOyPpYXAeiU0d5D2N/orNerrQ/7SM644tyD1Pf
J554wp199tkhDxHngPaSz8u8Lr4jx8TcOml/6sg9hc4YNdc3OnWaN2+e1/Gp
yDFxzfE3Y43ENVF+frXnrrjuuuv8/TxkyBC/UU85FmLbRBd/DudxxIgRQccX
ic61Kxp5syQul+tedGIDpe9Cbpi6des6yifXstyHxInK58ePHx/OB+P9+JfZ
qBca1yPr86Jhz5jzh869z/fR6SOK7457n7w0PFtPO+20sI4ydWdNKz7ft2/f
0M5cK1Jm//79wzg4/XTR6R9wrVEXzp3orGHEsXINcb2i4ZuqWbNmRvmPuOaY
S9m+fXu/r0GDBoU1WCdNmuSuvvpq74NiPR6Jd6UOjRo18jo+IrnWed6hsRHL
J2XgyxadeYxyzho3buwqVarkdRkXJwa6VatW4fPce+jkFpa6sMm9Qe4l0fh/
yUFMe4vO3G32i04sKWv8VK5c2V8jUkfaVT6PX1Z02kd06bNxvJxztKuuuir4
rTk/nCepi1w3XAfch+jYPs5xuu20u/BMGDhwoM/bRNvgb5J+ALmb0diwy/Id
1ggTPTWvNJ8Rne+KzvkRXew3Ngq7261bN6/LfHRslHyW+HF5TjPPVHTaRO5r
9ic6dkKe09wbonPPyv1Ofbnnunfv7vAbyzlgnTf5PNc3Ot8hfxga9wI2Fh1b
w7XQokUL17p16+AbpN/B8aBz38g1yv2LzUPHFsSIo8UmcSxce2zyvOT5x7ry
ost9gk178cUXg576DBGN8yQ2AV+06HxP7iueSdhVrhn6vLLWIzZPPs8zTerJ
OeYaZHvuueeC3aV90LD1EgvMvniGoeMblv4S19bjjz/uda4Jeb5ybbBmJDo2
XWJ4aDcpk2eDPEf5KTr7ox9FXXgfF/3ZZ5/154B7hrXIRafvmEmOP/bP/rAN
bNRZ7kd02oeNfYvOZ0SXOqLzu+j0K6UM/H2iS7+GfdGG3Gfo2GHRed7I56W/
Q5+R/qbo0q48r0Vjk7463xON/UnduZ7QuM9Tzxf3mHw+1T/JcYguz3yOl+tT
dOmTUwb7FF2uVex06jHFWlucc8V5YUsdA+Rcip6aP5V7UvTUNVP5zM701P3L
s5hzxd88k3amS13kfYSfqbq0G99L1eWao71T6y566jGl5kfdmS750UWXa4iy
uda5L2h7uRapo+g8F2Q/fI/PoXOdx8j1nvo+bBiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGsSPMM2PeGfOoGjRo4OczyZwWY++DOHbmSzF3rFy5
cu6II47w8whj18vY8zA/oUOHDq5IkSJRcq8Y+UexYsXciSee6MqWLevn+5Yp
U8Ydfvjhfi5gjBw/xq5hzhfzOqtXr+6aNWvm24iN+YKx62bsWZiLynzdU089
lbaNsiaykX8wb575/jLvjzmfzLcvXrx4lDzqxq5h/jV5OMhJYc/E3IV3GvJ7
kLODfAv7mN1NBMzV33ffff34Q+y6GP8Hc995HyH3jc1Fz114npLrhvxtjDOQ
W3Efs7uJgPwn++23X5T1QoydQ669M8880+daIscR/SDyCEmOJSP7IX8NebXI
ZSbrMZndTQ7kNjz55JOjrb1t/Dvcf4ceeqi3vSVKlPD3YuHChV2VKlV87rbY
9TN2D/J6kfeP8YXU3HBmd5MBeTVPOukk16lTp+3y3RlxueCCC7yPhZzU+FwY
jydHZL169bzttX5vdkOMSu3atX3OVnKtysbarb//t8/Rmpqb3sgdyMvLGGLD
hg23W1fCiA853qtWrfpvbUL+4sMOO2y7vPZG9sGY0e8//uOWmrPeyA3o53Jv
s6aCvdPsfeBn+fvf//5v7yD/n5farxkQqWrGHoB7burUqf+2dezY0bcva4aw
tkPsehp7DnzkrAFTv379jNZvMPIffGm8i+x479HfLVWqlF/jKlbdjPzDxndz
E95PmTPB2pSx62LsGtZYOeuss/zaWeJ3Ic6IWGv6wam+GCN3MLubmzA37aij
jnJt2rTx82N23GTNNyM+rFVYoUIFV7FiRe9L4x2F9mN9zNQ1qo3cwexubnLQ
QQe5Aw44YJebrFdpxAdfJ+MMrEV7+eWX+3XoZZ11IzdhjWBiWWRtVMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMPYFe++
+65r0KCBq1y5svp21llnuRtuuMHNnj3bbdq0ya/N/e2337r58+d7jW3z5s1e
5+cbb7wR9B9//NHrGzZsCBr//9NPP3n9k08+Cfqbb74Z1v1evXp10JcsWRL0
FStWBJ1zIvrixYuD/uGHH3r9119/DXWcM2eOW7t2rdd//vnnoM+dO9dRN/Tv
v/9+uzpSt/xv2e3ZsmWLW7hwYahHkrbly5eHdnv//feDzu/SblwL0p5r1qzx
+g8//ODeeuut0G7r1q0L16icy3nz5rnPP//cyTnmb9G/+OIL9Xa+8cYb3dFH
H+2OPfZYv5188sn+XqtUqZIrUaJE0MuWLRv0448/PujlypXzeoUKFYJ23HHH
+b/RTzvttKDzPdFPPfVUV6xYMXfMMcf4ctgv+kknnRQ+X6pUqXDvlylTJuil
S5cO+gknnBB0PoN2xhlnuJIlS4a6sE+pO3rx4sX9Rh2k7nJM/KTO6OXLlw/7
po5yrPwUnf2dfvrp4ZhS61ixYkWvn3LKKV7jWKnLrFmz0m5nbBLHes0117ib
b75ZdeMccsz8LrYOm9S6dWuXl5fnN7lnli1b5po2bRp0sdMzZswIGv/PtY/+
yiuvBP3aa68N52X06NGuXr16/jz26NEj6MOGDQufv+eee4J+yy23BH3cuHHh
PmWfaFdffbV7+umnvf7NN9+4Nm3aeL158+Zu2rRp4dkg+zjzzDPd0KFD1e9H
rg25vs8555xEbCeeeKLbf//9Xb9+/UK7DRkyJLTF4MGDvb5t2zbXq1cvrzVu
3NiNHz/e69hN+gXoTZo0cRMnTgzXaMeOHb3OfTNz5kyv8+zm70aNGvnzPGHC
BPV25ro88sgj1e/lJG7YqYIFC7oXXngh7XbmeY7NXrp0qfo1Uq1aNX89p2q/
/PKL7+N+/fXXfuNeQeenaGz0XdDp96bqv/32W+iriCZ9ZqCvwjFfddVV7qOP
Pgo69558Hvsp+tatW4P+3XffBT21jvRn0Sg7VZc+OXUVDVv/yCOPqJ9r+mvY
oenTp/t+exK2vn37usMOO2y79kxtZ36XduMzO7Yz7cZzfMd25hoVnfaWduYa
5e+NGze69u3bu5dffjmK3aUvo11uEuF96aijjsoJu6vBqlWrXLNmzfz9oV12
79693dixY6PZ3Q8++CAx9+RDDz3kDj/8cPXjZayrS5cujncu7bKvv/56/z6t
XW4Swe4ytvLiiy9mld0999xzfV9du1zGKJ5//nlH31e77B3HlbUwu6sH/eEp
U6Y4fAnaZfP+yzikdrlJBLvLOG8mz9eYdve8885zPJ+1y00iZneTQc+ePb2/
KXY9kgB2F7/dq6++mlV2t3r16q5du3ZR3gPxQdMv0S77q6++cowZa5drdlcP
xosZw0odV9aiU6dONs6gRLb2dxlnwO+vXe7HH3/s7rzzTu8X0S57zJgxUcb9
zO7qgX9twIABburUqeZXy2HMr5Ye5ldLBjH9ati/J5980uxuDmN2Nz3M7iaD
JNpd4optnEEHi2dID8YXXnvtte3icbVgnsp7771ndleBWHaXuF/mzKxcuVK9
bOb5mF9Nh2wd37V4Bj3M7iYDi2fQI5vjGVLn8GrBXDbmH8s8I03I5SB5GzQx
u6sH8QzkeIgxjmXjDHpka3+X8V1yKmiXi90jj4LkM9Fk0KBB7plnnjG7q0DM
eIZ7773Xz83RLtv8anqYXy09PvvsM3fllVc6fmqXbX41PWLa3TvuuMPiGXIc
s7vpYXY3GSTR7tq8CT2yNZ6B8V3e97XLJY6BvFwx4hkWLVoUxfaZ3dWDeIZ3
3nkn5GvWxOIZ9MDukss228Z3LZ5BD7O7ycDiGfSweIb0IJ6B/gg/tcsmniE1
768WZnf1IJ6BuTkxxrEsnkEP7C7rXGSSZzn2+G6MeAbiGJivESOegfwMI0eO
NLurQOz8DJMmTTK/Wg5jfrX0iOlXe+CBB9x9991ndleBJPrVzO7qkc12N1Z/
t23btlH6u6zxM2rUKLO7CiQxfrdz585+XUbtcpMIdpc1RF966aWssruxxneZ
p8Y6mjHmq7Em4vr1683uKpDE+WoWz6CHxDNkm1/N4hn0MLubDGydHz2yOZ6B
933tclkXdv78+WF9WE1Ycwtft3a5Znf1oL/L+xT59bXLZh1jG9/VweIZ0oNx
3WuuuSbK+O7o0aPdiBEjzO4qEHN8t3///m7ixInmV8thstmvZvEMOpjd1SNm
PMN1111ndleJbLa7Mfq7+Du4PmP4PcjNgD3QLtfsrh7YXZ6tmdyPu0vXrl1d
hQoVEtPGMcnmeAbsn3a5rMOC/eGndtmMbVj+XR1iju8St7Jp0yaLZ8hhstWv
ZvEMepjdTQYWz6BHttrdmPnIZs2aFSUf2YoVK2x9NSVi9neXLFniY3i1y7Z4
Bj0kniGTcYYFCxb4+zHW+C75K1nfEjuIxrVar149r7G9/fbbXuf5UKtWraDL
2CzHLNoFF1zgvvrqK68//fTTQa9fv344toEDB7qqVau6kiVLbhfD1qdPn/D5
m266Keg8F0QfOnSo1xmfuPTSS712/vnnh/HaLVu2uEsuucTrtWvXDuN7zJOQ
fTD21q9fP/VzPXv2bFe6dOnE2d1ChQo5xjz5m3bD3yVtcdttt3l969atDnuF
VqNGjRBvwnhQXl6e12vWrOkeffTRcI3il0WvW7duyAOIreVvdOaMjRs3zuIZ
chjsbtGiRTOalxjbr5Zf8QzYZXKOsS1btiyUQUzllClTvF2cO3du0MkTJp9P
zZtK/1R0xuzQ6M+wTzTy6UpcBP4UziP64sWL3Zdfful1yX/G1qNHDz+HND+O
+T+R1P5ukSJFHDHT/C3zyKQtJC/cL7/84mOqpT0//fRTr8u8RmlPGZcn7lt0
bK2M427bts3/vXDhQu+3GD9+vMUz5DDZHM/QrFmzKPEM9G9ixDPQB3r44YfN
7ioQM55h8ODBGa1DsLvceOONFs+gxO6MM8Qe340Rz8B9sW7dOsdP7bLpG0k/
WBOzu3rQryZuZfPmzRbPkMNkq1/N4hn0MLubDLp3727xDEpka14c/A+tWrVS
Lxc/ymOPPeb4qV02Y8r4uLTLNburB+ur4UNgTFi77Hbt2tn4rhLZOm/C5gnr
YXZXD8t7ngyy2a9mdlcHs7t6xLS71t/VI1vtLuMMLVq0UC+XGN+77rorxPpq
go/7ueeeM7urQCy7S1wa41gzZ85UL7tbt24Wz6BEtuaBJJ6BeC7tchl/w9fM
T+2ymSP37bffmt1VIKZfjVjeGPmdLZ5BD4tnMP4bZneTgfV39cjmeAbyj2uX
y3xe7kl+apfNu+fUqVOtv6tAzHgGfNzcW9plm19ND4lnyGR+jPnVdDG/mh5J
9KuZ3dUjW/1qZnf1MLurR0y7y7id2V0dstXuxoxnuOeee6LEM+D7zCR/0e5i
dlcP4hnIiRNjfozNV9MDu3vMMcdYPMMfhPE3/M0x4hnITcamXa7ZXV2IZYix
nonFM+hh8QzGf8PsbjKwfGR6SDyD5F9Oh9jjDC1btlQv9+uvv3ZDhgyJki/q
9ddfz+j5uLuY3dWDcYZnn33WzZ8/3/xqOQx2l3UbLJ7hj2F+tWSQRL+a2V09
stWvZnZXD7O7esSOZyhfvnxi2jgm2Wp3Y44zYPv4qV325MmTM8obt7uY3dWD
cQbW9+Oca5dt6wnrgd099thjs258N1Y8A+sBsHYWP7XLpi8UY50Ls7u6EMuA
/dUu1+IZ9MjWeAbsLnnrtMvlfmC9nRj3BfFr33zzjdldBWLaXeagkwNJu1zW
TrZ4Bh2ytb/LOEPz5s3Vy2V9s1tvvTXKOmf4uWOM+5nd1YPnOWuXxsjDYX41
PbJ1fNf8anqY3dXD4hmSAXb3yCOPzGj+qdldXczu6pFEu9uhQweLZ1AiW+0u
4wytW7eOMsbKueKndtnvvPOOW7hwodldBWLmgeR8c19ql23xDHpk6/huzHnC
MWIZpNwYZZvd1SVWO/fs2dPiGZSweIb0wO/xxRdfRIlnYO34GOvHm93VhTno
MdZz6tSpkzv99NMT08Yx2RP5yJ566inHO7DmxnO5adOm6tcINvemm27ytle7
bM4zax5qlyt2l/EV7XaOtRGzUrhw4SjP9REjRrjXXnvN/Go5DHa3aNGiGcUz
LFmyRMbh/bbffvt5G16iRAlXsGDBoB944IE+9w56gQIFgv6Xv/zF97X5Pz4j
+l//+lf/WcY/9t9//6AfeuihXmcdzj//+c+uZs2aPt5m48aNvu6Muc6aNctr
bJIjl5/Tpk0LuuRS/PTTT4M2ffp0Px8Cfd26dUFPzYO6YsUKP5eIMY7U+2L5
8uXh84sXLw76ggULgr5q1SqvM34ndaROq1ev9jqx8qJTl08++cTrxHHKPuiP
xPCrMaZ88sknh3bYd999fbvRFoccckjQDzjgAK+xHXTQQUE/+OCDg85nROe7
orNP0Q877LDQ/n/605+CXqRIkdD+ovH/XL/o/EytI+uooLM/0blu+D4615Po
XGeUh0595bOLFi0K7bZs2bLQFvyOjh+M/oe0p7wTkMtx7ty5Qf/oo4/CNcpz
DJ11m8Q/y/zHGTNm+OuKeZix5glzzgYMGGBbPm/kfitUqFBGdpdrZdiwYY55
Lvhg+/fv75jLyvVDDGKvXr28PmjQIEcuLXQ+j8aGfx4bw/9hT0QfOXKk/+yU
KVN8HUUfO3as1+mb9+vXL+jig6APSh1El2v9ww8/dH369Am6rI1Gv0a0O++8
M/jK5s2bF3TKl+Nljq7oY8aMCTprq4v+xBNPBJ2/6ZOzic59yvWNRvzxhAkT
vM58CObfoeMv5DjRP//887AP+iMx5o/Szvfee6+7/fbb/TGyjj3tRh0ffPDB
cOy0IRrb/fffH3T6b6KntjPfFZ19ik6fXmyQXEPi40dnTEy03r17u4kTJ3o9
tR3YH9cJOvsT/e677/a+DPRHH3006ByfXKPUN7UunAP6obSV6Dx/0RkPoCza
hzz8vJOgE9/NOpHo2FHxW/OsZ36CtKc811euXOnatm3rdZ6vMcbuaI/zzz/f
4bO2Lf+32rVruzfffDOjdqafFiMHeDaALWWsji11XW7GaHfU8aPwPEDjp/S9
Zd14Nr4Xy6cn9TG2h/bgeb1je9Ju0s60p7xj7ajLeeV5LO3P/mK0M2Xzrrd2
7VrbFLaPP/54O7tgGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIaRzTDf
hLXQmQ/DPBTm2TC/MkZeDUMX5rcMHTrU2nkvgbm3zMtjvtDf/vY3V6ZMGTdw
4EB/P9q8gNyiTp067rTTTvPzfosVK+Z/0t7MS4uxRp2R/zAXgTmKzGmvW7eu
tfFewvDhw12VKlVc/fr13VVXXeUaNWrkatSo4XOBPPPMM9ZOOcSkSZN87guZ
J8bcQeYFk9+HeeCx62fsWf7/WRo2s7t7D+vXr/f3YuqagWh5eXmucuXK1k45
DnMyyYlDzofYdTH2LMy/Jr8EG+82Znf3bmivG264wb+Lxq6Lkb/QJ2ItQXJB
xa6LkX/QhzK7u/fCOyj5gBo2bOjGjx9v7ZTjkMutbNmyjrydseti5B9md/dO
yBvJ+C72lr4P+QVj5Pc39NiwYYMfT+rSpYv5UHMcs7t7J+QjJ56BDT8bMSfk
S41dLyN/IC8zsWTNmjVzmzZtsnbOcczu7v1gg8lBTHxR7LoYex76ud27d/e5
x/Ghxq6Pkf+Y3d37IY4evxqxnbHrYuxZmDvBmg6s4SDrJhm5j9ndvR/sbufO
nWXNLiNHWLNmjV9HiTWnY6xBasTD7O7eBfciPjXxobFGEetbnXHGGX7drdj1
M/YcV1xxhStVqpTr0aOHn5O445akNemTAPGg0rask3vKKaf431nDMXbdkg7+
s4oVK7patWq5iy++2F144YW+fapWrRrWxjRyg9KlS283f2nHTdYTNXKDHeer
yVa4cGFr58gQs8AatfhZKlWq5Oeosc4r44Cx1os08gfWhmT9yF1tlqMh99hZ
OzM/PHa9DMMwDMMwDMMwDMMwDMMwDMMwDMPIP/4XFg12xw==
     "], {{0, 203}, {350, 
     0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{350, 203},
   PlotRange->{{0, 350}, {0, 203}}]], "Output",
  CellChangeTimes->{3.640938575065126*^9}],
 "\nAlthough there exists no rectangular grid that contains exactly two \
million rectangles, find the area of the grid with the nearest solution."
}], "Text",
 CellChangeTimes->{{3.640938556863063*^9, 3.640938578173035*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Times", "@@", 
  RowBox[{"First", "@", 
   RowBox[{
    RowBox[{"MinimalBy", "[", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"Times", "@@", 
         RowBox[{"(", 
          RowBox[{"#", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "+", "1"}], ")"}], "/", "2"}]}], ")"}]}], "-", 
        "2*^6"}], "]"}], "&"}], "]"}], "@", 
    RowBox[{"Catenate", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"m", ",", 
             RowBox[{"Floor", "@", "#"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", 
             RowBox[{"Ceiling", "@", "#"}]}], "}"}]}], "}"}], "&"}], "@", 
        RowBox[{"Max", "[", 
         RowBox[{"n", "/.", 
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"m", "+", "1"}], ")"}], "m", 
              RowBox[{"(", 
               RowBox[{"n", "+", "1"}], ")"}], 
              RowBox[{"n", "/", "4"}]}], "\[Equal]", "2*^6"}], ",", "n"}], 
           "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", 
         RowBox[{"Ceiling", "@", 
          RowBox[{"Max", "[", 
           RowBox[{"n", "/.", 
            RowBox[{"Solve", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"n", "+", "1"}], ")"}], 
                RowBox[{"n", "/", "2"}]}], "\[Equal]", 
               RowBox[{"Sqrt", "@", "2*^6"}]}], ",", "n"}], "]"}]}], 
           "]"}]}]}], "}"}]}], "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.640939091227554*^9, 3.640939177627287*^9}, 
   3.640939214253649*^9, {3.640939281463958*^9, 3.640939308496386*^9}, {
   3.6409393749253*^9, 3.640939386574368*^9}, 3.640939457923293*^9, {
   3.640939490277385*^9, 3.640939512452628*^9}, {3.640939569534569*^9, 
   3.640939589813781*^9}, {3.641180674984215*^9, 3.641180675637911*^9}}],

Cell[BoxData["2772"], "Output",
 CellChangeTimes->{{3.640939142872199*^9, 3.640939178332111*^9}, 
   3.640939215234249*^9, {3.640939377100988*^9, 3.640939386916686*^9}, 
   3.64093945909059*^9, 3.640939498087353*^9, 3.64093959126282*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 86 - Cuboid route", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640692358181316*^9, 3.640692361901387*^9}, {3.640739795222963*^9, 
   3.64073979825358*^9}, 3.640936365900233*^9, {3.640938546660024*^9, 
   3.640938550312022*^9}, {3.641451374790549*^9, 3.641451381848044*^9}}],

Cell[TextData[{
 "A spider, S, sits in one corner of a cuboid room, measuring 6 by 5 by 3, \
and a fly, F, sits in the opposite corner. By travelling on the surfaces of \
the room the shortest \[OpenCurlyDoubleQuote]straight line\
\[CloseCurlyDoubleQuote] distance from S to F is 10 and the path is shown on \
the diagram.\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnT9s1UoWhy2yIvyTQKKBBrE0ICrKlNktEBIKQm8bEA3vSbuiW/R2peVJ
kVIGCSTKSGkoKSNRLFWUkpJ0UZpFqVAq0lHezXF8Lr7O2B7b45nr8fdJ85IH
yTVz5pyZn+ccj//82z9/+ceZJEn+de74P7/8+p+//P77r3/87U/H//PXP/79
998Wjr/573H733GTPwQAAAAAAAAAAAAAAAAAAAAAAAAAAADwzMSiAYBbiDsA
/xBbAP4h7gD8Q9wB+Ie4A/AP+yoA/iHuAPxDbAH4h7gD8A9xB+Af4g7AP8Qd
gH+IOwD/EHcA/iHuAAAAAAAAAAAAYC75+vXrZH19fbK2tjb5/Pkz+5gAPfL9
+/fJgwcPTj3jc+fOncmXL1+IPwDHSMzdu3ev9Pm6K1euEHsAjnn37l3ts63L
y8vEHYBDREsmFs+V7+3tEXuWXLt2zcqmNFpd29nZka9Qw6dPn9RmAKWcO3fO
Ku7Y36xH7pVz+gGglOfPn9fGnOimHz9+4Es1iC3fv39P3EEtjx49qo27V69e
4Uc1iL7McjEC9oJSJD+e1MRcth5CBaovv337RtxBJRsbGzPxdebMmcnjx481
ZzB58uTJJNsjgBpy+lLBbnCKra2tU+taFocKfmNJQV8q2A9mkHxAcQ/z6dOn
+E0LDPpSwX4wReq9pO4rycXcrVu3TD6C31hg0JcK9oMUedbg5s2bMzF39uxZ
01ydJPhNLSX6UsF+UMznTvdRNjc38ZsWVOhLBfuNHMl3Ly0tzcTc+fPnJ/fv
36/yDfymggp9qWC/kVN8rk7u7y5fvlw1VycJflNKjb5UsN+IKdaAXb16dbK4
uFg3VycJfmPEQl8q2G+kFGtRZI27ffu2zVydJPiNEQt9qWC/EVKsRZF83bNn
z1KNaTFXJwl+cwqpNZB6Hssfx34jw1SL8vr16zT2LOfqJMFvZpC5Ss7CsJyz
BOw3Iky1KG/evEl9xlJfKvhNDqlV/fDhA/aDU5hqUeT5HbnPa6AvFfwmQ+JN
4q7hr2G/EWCqRZE9AInFhvpSwW+SVvpSwX6RY6pFEU2p5/M11JeK8Xf29/dT
vbW6ujq91srKSlr3cnh4GJ2vtdCXSnS2gJ+YalEk1uTPW+pLpar+qbRJXLa4
1lzSUl8q0dgBTlOsRRGtKetcB32pGH/vxYsX6flG+bXt6OhI6zwn8vctrzdX
dNCXShR2gNMUa1Hk7CG5z5O1roO+VNqukVH4Wwd9qURhB5ilWIuSP0u9o75U
Gv2urHlJJOtdR32pDN4OMIupFkXPQXGgLxXr35d7Ot1nGfr9nQN9qQzaDjCL
qRZF9ZAjfanY1pJN17mhx5zgQF8qg7cFnGCqRcneKZLiSF8qjeJOfHXoeQRH
+lIZtC3ghLJaFP172WN0pC8V6885ODiY6kz53tH1veJQXyqDtAP8pKwWRf9e
9KXkzR3pS6XRZ2VrXdW5EXONQ32pDNIOcEJZLUr+XQWy7jnUl8po8giO9aUy
ODvACbpPkhhqUfRnsnf0uNSXyijirgd9qQzKDnCCxFZZLUr+Z2QtbPAsZhMa
febu7m76b8zu8wZDD/pSGZQd4ISyWpT8z4i+lD/vYa5OkhK/kbiSNTbLk6dI
zElttPxOFn+DoCd9qQzGDnBCtk9prEVRVF/2NFcnSYu66CHtqfSoL5XB2AKS
JMvHGWtRFNWXPc7VSVLzHFBWDzbVltvb24Pysx71pTIoe4yZzA+MtSh5etaX
SrR+07O+VKK1X0zImlZVi6J40JdKlH7jQV8qUdovJupqURRP+lKJ0m886Esl
SvvFguxRimZMSmpR8njSl0p0fuNJXyrR2S8WJBdXrP8q1qIoHvWlEpXfeNSX
SlT2i4WyWpR8Xjz/sx71pRKV33jUl0pU9ouBslqUsrnYs75UovEbz/pSicZ+
sVCsRZE9lWItihJAXypR+E0AfalEYb9YKNaiSO6gWIuiBNKXShR+E0BfKlHY
LwZsalHyBNKXyuD9JpC+VAZvvxgw1aJUPbsTUF8qg/Yb2Z+6ePFiaS0pjWZq
ly5dCjlXJ9m/Y+hgv5FiqkV5+fKlzZgYcwoeicFvsN8IMdWiNFjDQo9b6Ou7
gLgbGU1qUUoIPW6hr+8C4m5ENKlFqSD0uIW+vguIu5HQtBalgtDjFvr6LiDu
RkKTWpQaQo9b6Ou7gLgbAU1qUSwIPW6hr+8C4i5ymtaiWBB63EJf3wXEXcQ0
rUWxJPS4hb6+C4i7SDGdi7K+vu7C5qHHLfT1XUDcRUiHWhQbQo9b6Ou7gLiL
jI61KDaEHrfQ13cBcRcRDmpRbAg9bqGv7wLiLhIktu7evdu1FsWG0OMW+vou
IO4GjtSbyH7J9evXXdSi2BB63EJf3wVB+iD+sLCwcGqPm0araxcuXJCvQydI
H+Q+X+Zjx/cd0aNrW/EeLt9u3LjRpRbFhiBjFvAcoD7w3gfN5e7s7MRgPy+I
zYo1zcUme5hSD9ay5rIJwebqgGdLuMZrP2SuEv/I3pUEFUj86PlBSUW8yTtV
Yz/3NPA5QH3gtS/oy2rELlLHVbe2iQ1Fb47hPK/I9KXirS/oy3L29vZSDVCs
MSk2mbc61jS7wPtcHZG+VLz0B315Gl3blpaWKmNNzoeVZwrmaL73OldHpi8V
L31CX/5Ezp+UZ1Cr1japZ5afyc6qnDe8zdUR6kul9z6hL0/qtzY2NtK1K6lZ
2+TnAp+TV4e3uTpCfan02q+x60uZa2TdKj6Pk2+y7ol95B4v5L+1AV7m6kj1
pdJr38aoL21y29Lkvk7u7wZom97n6oj1pdJb38amL2WfMZujK3Pb8hzcgNY2
E73P1RHrS6WX/o1FX0pue21trXZtk3xcRL7U61wdub5Ueulj7Ppyzuq2fNPb
XD0Cfak472Os+tK2bmtOctt90ttcHZEmqMNpP2PTl7a57cB1W77pZa4eib5U
nPY1Fn1pU7elue3I1zYTzufqEelLxVlfh64vJVdtW7c1gNx2nzifq0ekLxUn
/R2yvtS6rarc9pzXbfnG6Vw9Mn2pOOnz0PSlbd3WgHPbfeJsrh6hvlQ693lI
+lJz25HVbfnG2Vw9Qn2pdOr3EPSlbd3W8vIya5sdTubqkepLpVPf51lfbm1t
WdVtRZrb7pPOc3WFvqwcry7XnTNa92Ue9aVtbjuyui3fdJ6rK2xP3FUwb/rS
pm5Lc9usbZ1pbT/RIHIOU81nj2F8WvVxHvSl7HtIbT91W95pZUvZQ5b945r9
S+KuhJD6ssmZJCOq2/JNK5tK/tPinZfEnYFQ+rJJ3Ra57d5pbF/RG9l9gM1n
j2H8GvXRp76M7EySmGhkZ0t9mf/saVtZWUn3YI6OjmIbW+v++NKXNnVbmtvu
+T0AYKaRzS31Zf6zTzWJv8hiz6ovfetL+XzqtgaDte0b6Esj+/v7k9XV1XTs
I8v7WPWlL31peyYJdVtzhdU4NNSXpRwcHEzXvC6fM2fU9sW1vrSt2yK3PbdY
jUlDfWlzzZh8obIvLvWlxFCWM61c26jbmntqx6arviy5Zkw+UdmXrvqyyZkk
UsvQ5hrgncpxcqUvld3d3dRH3r59G5N/lPali75sUrdFbntwVI5XW30pmkr2
sg8PD6e/KzGX3ddNsviLBWNf2ujLgb1LCtpTOnYd9WWpz0R4n2/sj62+bFK3
RW47Goxj2FVfynq2ubmpc33aJIcQ2TqnnOqTjb4UPUDd1mgxjqfj/cvYmbFT
lb5sciYJa1vUnBrXHvYvY2fGViZ92aRui9z2KJgZY9f7lyNhaqu8vtTcNnVb
YGBmrNGX9khcyTuzj79Nbab68uHDh5xJAnVMxx19aYesSzI/JYZ4WlhYqIw3
6rYgI/UB9KU9dbnsYpN7PXm/G2sb5Eh9AX1pR1aHZdXIbUMFE/SlPXU1ydqY
w6AG9GUD5DzkpIHGpNFMbXFxkfv8Btje27HeQRXkjJqheYO6hn4AcIfs+9o8
KxDwnwgQJXL+VlnsiQ5FQwD0g6x7ojlln0Ua+XCAbmxvb888vyTfyzNNkT7D
5Aw5m/Hjx4/TM+OkRXZ+FfRE3mdKGhjInyVgaAClyFx9/CWdr7PzBlNkHhe/
ymISCujZjNJEK+TP9gCoQ+fryM6y7h3V5OhwaAm6qCFyBvjxF/aUoDU6b+c1
JlSjz/lm8QfQGLk3SbI1T+71iL96dB9K4k72fJPcPiZrINii83e+yRm73LuU
Urn/y14U2CLrnMRfPoeX4ENlGPcxZf3TfSrWPWiK5hDwoVJK96I0v+D7fdIQ
D5G+P8wFdXvA7BFDV/ChAtn7Zapy5dgMKqnSkGgmM9n58Ub9rbm9yN79BO5J
daT4Ur5mRfxH91iyXANkiJ303jdvm/y+Crk9qKKirpd5uwJ9p6GpsQ8FNogP
SXzlYzDi9xg5Q3R4Pm+OzQAAAAAAAAAAAAAAAAAAAAAAAAAAANzwfwYXStQ=

     "], {{0, 182}, {222, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{222, 182},
   PlotRange->{{0, 222}, {0, 182}}]], "Output",
  CellChangeTimes->{3.641451419787346*^9}],
 "\nHowever, there are up to three \[OpenCurlyDoubleQuote]shortest\
\[CloseCurlyDoubleQuote] path candidates for any given cuboid and the \
shortest route doesn\[CloseCurlyQuote]t always have integer length.\n\nIt can \
be shown that there are exactly 2060 distinct cuboids, ignoring rotations, \
with integer dimensions, up to a maximum size of M by M by M, for which the \
shortest route has integer length when M = 100. This is the least value of M \
for which the number of solutions first exceeds two thousand; the number of \
solutions when M = 99 is 1975.\n\nFind the least value of M such that the \
number of solutions first exceeds one million."
}], "Text",
 CellChangeTimes->{{3.641451387976587*^9, 3.641451423031569*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"NestWhile", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "+", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"IntegerQ", "@", 
               RowBox[{"Norm", "@", 
                RowBox[{"{", 
                 RowBox[{"#", ",", "n"}], "}"}]}]}], ",", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{
                 RowBox[{"#", "+", "1"}], ",", "n"}], "]"}], "-", 
               RowBox[{"Ceiling", "[", 
                RowBox[{"n", "/", "2"}], "]"}]}], ",", "0"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", 
              RowBox[{"2", "#"}]}], "}"}]}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], "]"}]}], "}"}]}], 
     "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Last", "@", "#"}], "<", "1*^6"}], "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.641457600444638*^9, 3.641457749679494*^9}, {
  3.641457811088272*^9, 3.641457816281659*^9}, {3.641457925480377*^9, 
  3.641457928891161*^9}, {3.641458056222753*^9, 3.641458066842056*^9}}],

Cell[BoxData["1818"], "Output",
 CellChangeTimes->{
  3.641457658351801*^9, {3.641457690297239*^9, 3.641457733419359*^9}, 
   3.641457795822382*^9, 3.641457859467183*^9, 3.641457973914627*^9, 
   3.641458112983198*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 87 - Prime power triples", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640692358181316*^9, 3.640692361901387*^9}, {3.640739795222963*^9, 
   3.64073979825358*^9}, 3.640936365900233*^9, {3.640938546660024*^9, 
   3.640938550312022*^9}, {3.641039349319841*^9, 3.641039353689893*^9}, {
   3.641181916907835*^9, 3.641181920998819*^9}}],

Cell[TextData[{
 "The smallest number expressible as the sum of a prime square, prime cube, \
and prime fourth power is 28. In fact, there are exactly four numbers below \
fifty that can be expressed in such a way:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"28", " ", "=", " ", 
    RowBox[{
     SuperscriptBox["2", "2"], " ", "+", " ", 
     SuperscriptBox["2", "3"], " ", "+", " ", 
     SuperscriptBox["2", "4"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"33", " ", "=", " ", 
    RowBox[{
     SuperscriptBox["3", "2"], " ", "+", " ", 
     SuperscriptBox["2", "3"], " ", "+", " ", 
     SuperscriptBox["2", "4"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"49", " ", "=", " ", 
    RowBox[{
     SuperscriptBox["5", "2"], " ", "+", " ", 
     SuperscriptBox["2", "3"], " ", "+", " ", 
     SuperscriptBox["2", "4"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"47", " ", "=", " ", 
    RowBox[{
     SuperscriptBox["2", "2"], " ", "+", " ", 
     SuperscriptBox["3", "3"], " ", "+", " ", 
     SuperscriptBox["2", "4"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nHow many numbers below fifty million can be expressed as the sum of a \
prime square, prime cube, and prime fourth power?"
}], "Text",
 CellChangeTimes->{{3.641181927723901*^9, 3.641181982546013*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"DeleteDuplicates", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Total", "/@", 
      RowBox[{"Tuples", "[", 
       RowBox[{
        RowBox[{"PrimeRange", "[", 
         RowBox[{"50*^6", "^", 
          RowBox[{"(", 
           RowBox[{"1", "/", 
            RowBox[{"{", 
             RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], ")"}]}], "]"}], "^", 
        
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", "<", "50*^6"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.64256200495309*^9, 3.642562009163479*^9}}],

Cell[BoxData["1097343"], "Output",
 CellChangeTimes->{3.642562011068222*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 88 - Product-sum numbers", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640692358181316*^9, 3.640692361901387*^9}, {3.640739795222963*^9, 
   3.64073979825358*^9}, 3.640936365900233*^9, {3.640938546660024*^9, 
   3.640938550312022*^9}, {3.641039349319841*^9, 3.641039353689893*^9}, {
   3.641181916907835*^9, 3.641181920998819*^9}, {3.641692620567046*^9, 
   3.641692625162278*^9}}],

Cell[TextData[{
 "A natural number, N, that can be written as the sum and product of a given \
set of at least two natural numbers, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["a", "1"], ",", " ", 
     SubscriptBox["a", "2"], ",", " ", "...", " ", ",", " ", 
     SubscriptBox["a", "k"]}], "}"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is called a product-sum number: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["a", "1"], " ", "+", " ", 
        SubscriptBox["a", "2"], " ", "+"}], " ", "..."}], " ", "+", " ", 
      SubscriptBox["a", "k"]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["a", "1"], " ", "\[Times]", " ", 
        SubscriptBox["a", "2"], " ", "\[Times]"}], " ", "..."}], " ", 
      "\[Times]", " ", 
      SubscriptBox["a", "k"]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nFor example, 6 = 1 + 2 + 3 = 1 \[Times] 2 \[Times] 3.\n\nFor a given \
set of size, k, we shall call the smallest N with this property a minimal \
product-sum number. The minimal product-sum numbers for sets of size, k = 2, \
3, 4, 5, and 6 are as follows.\n\nk=2: 4 = 2 \[Times] 2 = 2 + 2\nk=3: 6 = 1 \
\[Times] 2 \[Times] 3 = 1 + 2 + 3\nk=4: 8 = 1 \[Times] 1 \[Times] 2 \[Times] \
4 = 1 + 1 + 2 + 4\nk=5: 8 = 1 \[Times] 1 \[Times] 2 \[Times] 2 \[Times] 2 = 1 \
+ 1 + 2 + 2 + 2\nk=6: 12 = 1 \[Times] 1 \[Times] 1 \[Times] 1 \[Times] 2 \
\[Times] 6 = 1 + 1 + 1 + 1 + 2 + 6\n\nHence for 2\[LessEqual]k\[LessEqual]6, \
the sum of all the minimal product-sum numbers is 4+6+8+12 = 30; note that 8 \
is only counted once in the sum.\n\nIn fact, as the complete set of minimal \
product-sum numbers for 2\[LessEqual]k\[LessEqual]12 is {4, 6, 8, 12, 15, \
16}, the sum is 61.\n\nWhat is the sum of all the minimal product-sum numbers \
for 2\[LessEqual]k\[LessEqual]12000?"
}], "Text",
 CellChangeTimes->{{3.641692633815555*^9, 3.641692678599345*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"psn", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", "as___", "}"}], ",", "d_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"{", "as", "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"psn", "[", 
    RowBox[{"n_", ",", 
     RowBox[{"{", "as___", "}"}], ",", "d_"}], "]"}], ":=", 
   RowBox[{"Catenate", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"psn", "[", 
       RowBox[{
        RowBox[{"n", "-", "1"}], ",", 
        RowBox[{"{", 
         RowBox[{"as", ",", "a"}], "}"}], ",", "d"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", 
        RowBox[{"Max", "[", 
         RowBox[{"2", ",", "as"}], "]"}], ",", 
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"b", "/.", "#"}], "&"}], "/@", 
          RowBox[{"NSolve", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"as", "*", 
              RowBox[{"b", "^", "n"}]}], "\[Equal]", 
             RowBox[{"as", "+", 
              RowBox[{"n", "*", "b"}], "+", "d"}]}], ",", "b", ",", "Reals"}],
            "]"}]}], "]"}]}], "}"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.64169981923775*^9, 3.641699823994843*^9}, {
   3.641699862637328*^9, 3.641700031108635*^9}, {3.641700386577509*^9, 
   3.641700431757901*^9}, {3.641700503106106*^9, 3.64170050454562*^9}, 
   3.641700642236726*^9, {3.641701010297976*^9, 3.64170103120576*^9}, {
   3.641701071149173*^9, 3.64170107603516*^9}, 3.641701112749655*^9, {
   3.641701172697849*^9, 3.641701174422319*^9}, {3.641701255320079*^9, 
   3.641701330469771*^9}, {3.641701382457026*^9, 3.641701405672245*^9}, {
   3.641701438254015*^9, 3.641701619095401*^9}, {3.641701766876924*^9, 
   3.641701780686211*^9}, {3.641702526786442*^9, 3.64170255053288*^9}, {
   3.64170265993624*^9, 3.641702682111146*^9}, {3.641702715033612*^9, 
   3.64170271521377*^9}, {3.641720052368362*^9, 3.641720060788628*^9}, {
   3.641720091881443*^9, 3.641720114130835*^9}, {3.641720149846139*^9, 
   3.641720164207955*^9}, {3.641720201046195*^9, 3.641720223522542*^9}, {
   3.641720279093093*^9, 3.641720299858461*^9}, {3.641720821945601*^9, 
   3.641720852133501*^9}, {3.641720883778275*^9, 3.64172092981751*^9}, {
   3.641721134485044*^9, 3.641721141113868*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{"DeleteDuplicates", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Min", "[", 
      RowBox[{"Times", "@@@", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"GatherBy", "[", 
     RowBox[{
      RowBox[{"Catenate", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"psn", "[", 
          RowBox[{"k", ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"12000", "-", "k"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "2", ",", 
           RowBox[{"Max", "[", 
            RowBox[{"i", "/.", 
             RowBox[{"NSolve", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"2", "^", "i"}], "-", 
                 RowBox[{"2", "*", "i"}], "+", "i"}], "\[Equal]", "12000"}], 
               ",", "i", ",", "Reals"}], "]"}]}], "]"}]}], "}"}]}], "]"}]}], 
      ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "#"}], "+", 
        RowBox[{"Times", "@@", "#"}], "-", 
        RowBox[{"Plus", "@@", "#"}]}], "&"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.641719962672294*^9, 3.641719967848561*^9}, {
   3.641720012480823*^9, 3.641720037407646*^9}, {3.641720100619695*^9, 
   3.641720133012386*^9}, {3.641720290145103*^9, 3.641720326585949*^9}, {
   3.641720373499871*^9, 3.641720513021237*^9}, {3.641720563069865*^9, 
   3.641720642658204*^9}, {3.641720697236327*^9, 3.641720773221834*^9}, 
   3.641720856417231*^9, {3.641720896877423*^9, 3.641720908610236*^9}, {
   3.641720969125339*^9, 3.641721030474229*^9}, 3.641721143047003*^9}],

Cell[BoxData["7587457"], "Output",
 CellChangeTimes->{
  3.64171996936183*^9, {3.641720013107131*^9, 3.641720037994194*^9}, {
   3.641720104278585*^9, 3.641720133648182*^9}, {3.6417202888238*^9, 
   3.641720374095117*^9}, {3.641720410382353*^9, 3.641720463188244*^9}, 
   3.641720513537338*^9, {3.641720577512632*^9, 3.641720643121637*^9}, {
   3.641720701877117*^9, 3.641720773446287*^9}, 3.64172085764627*^9, 
   3.641720897652152*^9, 3.641720931470693*^9, {3.641720970440543*^9, 
   3.64172098507748*^9}, {3.641721027068353*^9, 3.641721036377332*^9}, 
   3.641721151420777*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 89 - Roman numerals", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640692358181316*^9, 3.640692361901387*^9}, {3.640739795222963*^9, 
   3.64073979825358*^9}, 3.640936365900233*^9, {3.640938546660024*^9, 
   3.640938550312022*^9}, {3.641039349319841*^9, 3.641039353689893*^9}}],

Cell[TextData[{
 "For a number written in Roman numerals to be considered valid there are \
basic rules which must be followed. Even though the rules allow some numbers \
to be expressed in more than one way there is always a \
\[OpenCurlyDoubleQuote]best\[CloseCurlyDoubleQuote] way of writing a \
particular number.\n\nFor example, it would appear that there are at least \
six ways of writing the number sixteen:\n\nIIIIIIIIIIIIIIII\nVIIIIIIIIIII\n\
VVIIIIII\nXIIIIII\nVVVI\nXVI\n\nHowever, according to the rules only XIIIIII \
and XVI are valid, and the last example is considered to be the most \
efficient, as it uses the least number of numerals.\n\nThe 11K text file, ",
 ButtonBox["roman.txt",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/project/resources/p089_roman.txt"], None},
  ButtonNote->"https://projecteuler.net/project/resources/p089_roman.txt"],
 " (right click and \[OpenCurlyQuote]Save Link/Target \
As...\[CloseCurlyQuote]), contains one thousand numbers written in valid, but \
not necessarily minimal, Roman numerals; see ",
 ButtonBox["About... Roman Numerals",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/about=roman_numerals"], None},
  ButtonNote->"https://projecteuler.net/about=roman_numerals"],
 " for the definitive rules for this problem.\n\nFind the number of \
characters saved by writing each of these in their minimal form.\n\nNote: You \
can assume that all the Roman numerals in the file contain no more than four \
consecutive identical units."
}], "Text",
 CellChangeTimes->{{3.641039363057565*^9, 3.641039407603433*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"roman", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://projecteuler.net/project/resources/p089_roman.txt\>\"", ",", 
     "\"\<List\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.641039376899513*^9, 3.6410393778146772`*^9}, {
  3.641039443380709*^9, 3.641039445674265*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Total", "[", 
   RowBox[{"StringLength", "/@", "roman"}], "]"}], "-", 
  RowBox[{"Total", "[", 
   RowBox[{"StringLength", "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"IntegerString", "[", 
        RowBox[{
         RowBox[{"FromDigits", "[", 
          RowBox[{"#", ",", "\"\<Roman\>\""}], "]"}], ",", "\"\<Roman\>\""}], 
        "]"}], "&"}], "/@", "roman"}], ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.641039434602757*^9, 3.641039454496792*^9}, {
  3.641039486170274*^9, 3.641039534167014*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FromDigits", "::", "nrom"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The expression \[NoBreak]\\!\\(\\\"MMMDLXVIIII\\\"\\)\
\[NoBreak] is not a proper string of roman digits. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FromDigits\\\", ButtonNote -> \\\"FromDigits::nrom\
\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.641039546186749*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FromDigits", "::", "nrom"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The expression \[NoBreak]\\!\\(\\\"MMCCCLXXXXIX\\\"\\)\
\[NoBreak] is not a proper string of roman digits. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FromDigits\\\", ButtonNote -> \\\"FromDigits::nrom\
\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.641039546247313*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FromDigits", "::", "nrom"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The expression \[NoBreak]\\!\\(\\\"MDCCCXXIIII\\\"\\)\
\[NoBreak] is not a proper string of roman digits. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FromDigits\\\", ButtonNote -> \\\"FromDigits::nrom\
\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.641039546304257*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FromDigits :: nrom\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.641039546324776*^9}],

Cell[BoxData["743"], "Output",
 CellChangeTimes->{3.641039546715094*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 90 - Cube digit pairs", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640692358181316*^9, 3.640692361901387*^9}, {3.640739795222963*^9, 
   3.64073979825358*^9}, 3.640936365900233*^9, {3.640938546660024*^9, 
   3.640938550312022*^9}, {3.641039349319841*^9, 3.641039353689893*^9}, {
   3.6416375252954*^9, 3.641637532904174*^9}}],

Cell[TextData[{
 "Each of the six faces on a cube has a different digit (0 to 9) written on \
it; the same is done to a second cube. By placing the two cubes side-by-side \
in different positions we can form a variety of 2-digit numbers.\n\nFor \
example, the square number 64 could be formed:\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
H02zZvQ=
     "], {{0, 130}, {201, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{201, 130},
   PlotRange->{{0, 201}, {0, 130}}]], "Output",
  CellChangeTimes->{3.64163756242015*^9}],
 "\n\nIn fact, by carefully choosing the digits on both cubes it is possible \
to display all of the square numbers below one-hundred: 01, 04, 09, 16, 25, \
36, 49, 64, and 81.\n\nFor example, one way this can be achieved is by \
placing {0, 5, 6, 7, 8, 9} on one cube and {1, 2, 3, 4, 8, 9} on the other \
cube.\n\nHowever, for this problem we shall allow the 6 or 9 to be turned \
upside-down so that an arrangement like {0, 5, 6, 7, 8, 9} and {1, 2, 3, 4, \
6, 7} allows for all nine square numbers to be displayed; otherwise it would \
be impossible to obtain 09.\n\nIn determining a distinct arrangement we are \
interested in the digits on each cube, not the order.\n\n{1, 2, 3, 4, 5, 6} \
is equivalent to {3, 6, 4, 1, 2, 5}\n{1, 2, 3, 4, 5, 6} is distinct from {1, \
2, 3, 4, 5, 9}\n\nBut because we are allowing 6 and 9 to be reversed, the two \
distinct sets in the last example both represent the extended set {1, 2, 3, \
4, 5, 6, 9} for the purpose of forming 2-digit numbers.\n\nHow many distinct \
arrangements of the two cubes allow for all of the square numbers to be \
displayed?"
}], "Text",
 CellChangeTimes->{{3.641637541893218*^9, 3.641637569839822*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Subsets", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Subsets", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "9"}], "]"}], ",", 
         RowBox[{"{", "6", "}"}]}], "]"}], "/.", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a___", ",", 
          RowBox[{"6", "|", "9"}], ",", "b___"}], "}"}], "\[RuleDelayed]", 
        RowBox[{"Union", "@", 
         RowBox[{"{", 
          RowBox[{"a", ",", "6", ",", "9", ",", "b"}], "}"}]}]}]}], ",", 
      RowBox[{"{", "2", "}"}]}], "]"}], ",", 
    RowBox[{
     RowBox[{"SubsetQ", "[", 
      RowBox[{
       RowBox[{"Sort", "/@", 
        RowBox[{"Tuples", "@", "#"}]}], ",", 
       RowBox[{"Sort", "/@", 
        RowBox[{"IntegerDigits", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Range", "@", "9"}], "^", "2"}], ",", "10", ",", "2"}], 
         "]"}]}]}], "]"}], "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.641637734621032*^9, 3.641637780023554*^9}, {
  3.64163985347004*^9, 3.641639888340978*^9}, {3.641640217547614*^9, 
  3.641640269702595*^9}}],

Cell[BoxData["1217"], "Output",
 CellChangeTimes->{
  3.641637742997158*^9, {3.641637773989621*^9, 3.641637780471412*^9}, 
   3.64163985411992*^9, 3.641639888925559*^9, 3.641640225234654*^9, {
   3.64164026487794*^9, 3.641640272718123*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 91 - Right triangles with integer coordinates", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640694568245*^9, 3.640694571988762*^9}, {3.641342828373648*^9, 
   3.641342832842*^9}}],

Cell[TextData[{
 "The points P ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "1"], ",", " ", 
     SubscriptBox["y", "1"]}], ")"}], TraditionalForm]]],
 " and Q ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "2"], ",", " ", 
     SubscriptBox["y", "2"]}], ")"}], TraditionalForm]]],
 " are plotted at integer co-ordinates and are joined to the origin, O(0,0), \
to form \[CapitalDelta]OPQ.\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAQLX+BzlexyI=
     "], {{0, 198}, {200, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{200, 198},
   PlotRange->{{0, 200}, {0, 198}}]], "Output",
  CellChangeTimes->{3.641342922416484*^9}],
 "\nThere are exactly fourteen triangles containing a right angle that can be \
formed when each co-ordinate lies between 0 and 2 inclusive; that is,\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"0", " ", "\[LessEqual]", " ", 
     SubscriptBox["x", "1"]}], ",", " ", 
    SubscriptBox["y", "1"], ",", " ", 
    SubscriptBox["x", "2"], ",", " ", 
    RowBox[{
     SubscriptBox["y", "2"], " ", "\[LessEqual]", " ", "2"}]}], 
   TraditionalForm]]],
 ".\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
UepB6uHhwMYfg6OPPjqxWmlRkAfdIw/6Rx50S948COSRsqaC89htt91M3ZnP
PvtMHnSM9SA5McSBjIUSB+JA1kv4OCd50D3yoH/kQbfk0YPA9bS1uQcOHGju
XXnQLdaDM2fONDkxtmb2u+++6+1c5UH3yIP+kQfdklcPci6PPvpooTY38SFx
STV7+bqiljzI9WZthN07Kcma2XGQB91TLx5kTOn4448P5s6dm7lzkwfdgf+4
VmG/9yx50EI9UrvW3o6R+j6nUmrFgzfddJO5zrZmto/5wFLiePDzzz8Pjjrq
qODcc88Nxo4dm6mDdUG0x66vWxRceHDPPfc0bU8WjoMPPtjk3dl8r0022STY
fffdzZ/7Pjd7UFMr6jVmX1ff51169OrVK+jatav38+C77devn9nXwX7vXOMw
e8Fn0YPkLD744INmL1/GSDfaaCPjwyzdwx07dozswb59+3o/b3sceOCBxjNr
r722qRNDHJjW+sCWiONB5ja576n7xufJ0sF50Sb7/s6Ljz322KOm40HG9YcN
Gxasttpqpm2jHeGer1SzwwdxrleWrrElC/Hgl19+GZBvecghh5g2rfGPzEEb
8tRTT+XSgxbGSG1cSB7pSy+9lJnzi3o/Zi0enDRpkukj23qhH3zwQWbOLY4H
f/vb35r7hPpv++yzj/ejU6dOZq8xzmnrrbcO5s+fn5nrC7U8Lvrhhx+a9hAH
cj+MHj3a9FtxYf/+/YPFixdnYq5FHqwOvkP67sRM9HE23HBD8x23adPGjMGs
t956NeFBzm3WrFkr1eYOu2eTa/LqQcbNaf+4V3AgcaDreqFRqcaDP/vZz4KP
PvrI20EbzHO5yy67mDluPgPPJGMcji9bJGrVgziOOJD2sG3btmafMP6cdoTx
Mr4T2sxXX33V+7nKg/Eh/uMePuyww4JWrVqZZ59+/YgRI4LHHnssePLJJ833
XQsetLCmgvWFjT+aujNh9mxyTV49OHHiRHO/2P0Dabt9n1Mp1XjwlFNO8fp5
aF+Zh+JcyD9iTGPIkCGZu8a16MFPPvnEjPnSvyP3eerUqYW1P//85z+Du+++
O9h2220LdY2pleuzTy0PRoPvipoe5I8wR8Z8Gf2djTfeOPjpT38a4Amb41eL
HgRqsHXu3NmMdXAPl9ZgS5u8eZD2gH0jcCDtAHFgGjWz45BHD/IcPffcc8GA
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
TQ==
     "], {{0, 273}, {450, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{450, 273},
   PlotRange->{{0, 450}, {0, 273}}]], "Output",
  CellChangeTimes->{3.641342931576594*^9}],
 "\nGiven that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"0", " ", "\[LessEqual]", " ", 
     SubscriptBox["x", "1"]}], ",", " ", 
    SubscriptBox["y", "1"], ",", " ", 
    SubscriptBox["x", "2"], ",", " ", 
    RowBox[{
     SubscriptBox["y", "2"], " ", "\[LessEqual]", " ", "50"}]}], 
   TraditionalForm]]],
 ", how many right triangles can be formed?"
}], "Text",
 CellChangeTimes->{{3.641342839084047*^9, 3.641342905579945*^9}, {
  3.64134294631114*^9, 3.641342950159496*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", "\[Equal]", "j", "\[Equal]", "0"}], ",", "0", ",", 
      RowBox[{
       RowBox[{"Length", "@", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "j"}], "}"}], "+", 
             RowBox[{"k", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "j"}], ",", "i"}], "}"}], "/", 
               RowBox[{"GCD", "[", 
                RowBox[{"i", ",", "j"}], "]"}]}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", 
              RowBox[{"-", "50"}], ",", "50"}], "}"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"0", "\[LessEqual]", 
            RowBox[{"Min", "@", "#"}], "\[LessEqual]", 
            RowBox[{"Max", "@", "#"}], "\[LessEqual]", "50"}], "&"}]}], 
         "]"}]}], "-", "1"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "50"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "50"}], "}"}]}], "]"}], "+", 
  RowBox[{"50", "^", "2"}]}]], "Input",
 CellChangeTimes->{{3.641344052111859*^9, 3.641344056114966*^9}, {
  3.64134409055679*^9, 3.641344113125148*^9}}],

Cell[BoxData["14234"], "Output",
 CellChangeTimes->{
  3.641344060354698*^9, {3.641344093753946*^9, 3.641344115133621*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 92 - Square digit chains", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640694568245*^9, 3.640694571988762*^9}}],

Cell[TextData[{
 "A number chain is created by continuously adding the square of the digits \
in a number to form a new number until it has been seen before.\n\nFor \
example,\n\n44 \[RightArrow] 32 \[RightArrow] 13 \[RightArrow] 10 \
\[RightArrow] ",
 StyleBox["1",
  FontWeight->"Bold"],
 " \[RightArrow] ",
 StyleBox["1",
  FontWeight->"Bold"],
 "\n85 \[RightArrow] ",
 StyleBox["89",
  FontWeight->"Bold"],
 " \[RightArrow] 145 \[RightArrow] 42 \[RightArrow] 20 \[RightArrow] 4 \
\[RightArrow] 16 \[RightArrow] 37 \[RightArrow] 58 \[RightArrow] ",
 StyleBox["89",
  FontWeight->"Bold"],
 "\n\nTherefore any chain that arrives at 1 or 89 will become stuck in an \
endless loop. What is most amazing is that EVERY starting number will \
eventually arrive at 1 or 89.\n\nHow many starting numbers below ten million \
will arrive at 89?"
}], "Text",
 CellChangeTimes->{{3.640694578316705*^9, 3.640694582330812*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Rest", "@", 
   RowBox[{"Nest", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Total", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RotateRight", "[", 
          RowBox[{"#", ",", 
           RowBox[{"i", "^", "2"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "9"}], "}"}]}], "]"}]}], "&"}], ",", 
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{"1", "\[Rule]", "1"}], ",", 
       RowBox[{
        RowBox[{"7", "*", 
         RowBox[{"9", "^", "2"}]}], "+", "1"}]}], "]"}], ",", "7"}], "]"}]}], 
  ".", 
  RowBox[{"Array", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Boole", "[", 
      RowBox[{
       RowBox[{"NestWhile", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{
            RowBox[{"IntegerDigits", "@", "#"}], "^", "2"}], "]"}], "&"}], 
         ",", "#", ",", 
         RowBox[{
          RowBox[{"1", "\[NotEqual]", "#", "\[NotEqual]", "89"}], "&"}]}], 
        "]"}], "\[Equal]", "89"}], "]"}], "&"}], ",", 
    RowBox[{"7", "*", 
     RowBox[{"9", "^", "2"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.641534644657834*^9, 3.64153466529272*^9}}],

Cell[BoxData["8581146"], "Output",
 CellChangeTimes->{{3.641534645802383*^9, 3.641534666099278*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 93 - Arithmetic expressions", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640694568245*^9, 3.640694571988762*^9}, {3.641620144826424*^9, 
   3.641620149092852*^9}}],

Cell["\<\
By using each of the digits from the set, {1, 2, 3, 4}, exactly once, and \
making use of the four arithmetic operations (+, \[Minus], *, /) and \
brackets/parentheses, it is possible to form different positive integer \
targets.

For example,

8 = (4 * (1 + 3)) / 2
14 = 4 * (3 + 1 / 2)
19 = 4 * (2 + 3) \[Minus] 1
36 = 3 * 4 * (2 + 1)

Note that concatenations of the digits, like 12 + 34, are not allowed.

Using the set, {1, 2, 3, 4}, it is possible to obtain thirty-one different \
target numbers of which 36 is the maximum, and each of the numbers 1 to 28 \
can be obtained before encountering the first non-expressible number.

Find the set of four distinct digits, a < b < c < d, for which the longest \
set of consecutive positive integers, 1 to n, can be obtained, giving your \
answer as a string: abcd.\
\>", "Text",
 CellChangeTimes->{{3.641620156538075*^9, 3.641620161732007*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "@", 
  RowBox[{"First", "@", 
   RowBox[{"MaximalBy", "[", 
    RowBox[{
     RowBox[{"Subsets", "[", 
      RowBox[{
       RowBox[{"Range", "@", "9"}], ",", 
       RowBox[{"{", "4", "}"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"LengthWhile", "[", 
         RowBox[{
          RowBox[{"#", "-", 
           RowBox[{"Range", "@", 
            RowBox[{"Length", "@", "#"}]}]}], ",", 
          RowBox[{
           RowBox[{"#", "\[Equal]", "0"}], "&"}]}], "]"}], "&"}], "@", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"IntegerQ", "@", "#"}], "&&", 
           RowBox[{"#", ">", "0"}]}], "&"}], "]"}], "@", 
        RowBox[{"Union", "@", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Outer", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"a", "~", "o1", "~", 
                  RowBox[{"(", 
                   RowBox[{"b", "~", "o2", "~", 
                    RowBox[{"(", 
                    RowBox[{"c", "~", "o3", "~", "d"}], ")"}]}], ")"}]}], ",",
                  "\[IndentingNewLine]", 
                 RowBox[{"a", "~", "o1", "~", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"b", "~", "o2", "~", "c"}], ")"}], "~", "o3", "~",
                     "d"}], ")"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"a", "~", "o1", "~", "b"}], ")"}], "~", "o2", "~", 
                  
                  RowBox[{"(", 
                   RowBox[{"c", "~", "o3", "~", "d"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "~", "o1", "~", "b"}], ")"}], "~", "o2", "~",
                     "c"}], ")"}], "~", "o3", "~", "d"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"a", "~", "o1", "~", 
                    RowBox[{"(", 
                    RowBox[{"b", "~", "o2", "~", "c"}], ")"}]}], ")"}], "~", 
                  "o3", "~", "d"}]}], "}"}], "/.", 
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"o1", ",", "o2", ",", "o3"}], "}"}], "\[Rule]", 
                 "#1"}], "]"}]}], "/.", 
              RowBox[{"Thread", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], 
                "\[Rule]", "#2"}], "]"}]}], "&"}], ",", 
            RowBox[{"Tuples", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Plus", ",", "Subtract", ",", "Times", ",", "Divide"}],
                "}"}], ",", "3"}], "]"}], ",", 
            RowBox[{"Permutations", "@", "#"}], ",", "1"}], "]"}]}]}]}]}], 
      "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.641620171426745*^9, 3.641620205772555*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.641620186955168*^9, 3.641620206224999*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.641620186955168*^9, 3.641620206266402*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.641620186955168*^9, 3.641620206307962*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Power :: \
infy\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.641620186955168*^9, 3.641620206338744*^9}}],

Cell[BoxData["1258"], "Output",
 CellChangeTimes->{{3.641620200403784*^9, 3.641620219235242*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 94 - Almost equilateral triangles", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640694568245*^9, 3.640694571988762*^9}, {3.641548652885536*^9, 
   3.641548659064463*^9}}],

Cell[TextData[{
 "It is easily proved that no equilateral triangle exists with integral \
length sides and integral area. However, the ",
 StyleBox["almost equilateral triangle",
  FontSlant->"Italic"],
 " 5-5-6 has an area of 12 square units.\n\nWe shall define an ",
 StyleBox["almost equilateral triangle",
  FontSlant->"Italic"],
 " to be a triangle for which two sides are equal and the third differs by no \
more than one unit.\n\nFind the sum of the perimeters of all ",
 StyleBox["almost equilateral triangles",
  FontSlant->"Italic"],
 " with integral side lengths and area and whose perimeters do not exceed one \
billion (1,000,000,000)."
}], "Text",
 CellChangeTimes->{{3.641548664182066*^9, 3.641548669268683*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"6", "a"}], "+", "d"}], "/.", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"a", "^", "2"}], "+", 
           RowBox[{"b", "^", "2"}]}], "\[Equal]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "a"}], "+", "d"}], ")"}], "^", "2"}]}], ",", 
         RowBox[{"a", ">", "0"}], ",", 
         RowBox[{"b", ">", "0"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"6", "a"}], "+", "d"}], "<", "1*^9"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b"}], "}"}], ",", "Integers"}], "]"}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641549651967415*^9, 3.641549671370489*^9}, {
  3.641549721897621*^9, 3.641549803046297*^9}, {3.641549869622943*^9, 
  3.64154995206182*^9}, {3.641550045478922*^9, 3.641550047288165*^9}}],

Cell[BoxData["518408346"], "Output",
 CellChangeTimes->{
  3.641549803831962*^9, {3.641549882947012*^9, 3.641549914809858*^9}, 
   3.641549952620029*^9, 3.641550048491852*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 95 - Amicable chains", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640694568245*^9, 3.640694571988762*^9}, {3.641433112430974*^9, 
   3.641433126163971*^9}}],

Cell["\<\
The proper divisors of a number are all the divisors excluding the number \
itself. For example, the proper divisors of 28 are 1, 2, 4, 7, and 14. As the \
sum of these divisors is equal to 28, we call it a perfect number.

Interestingly the sum of the proper divisors of 220 is 284 and the sum of the \
proper divisors of 284 is 220, forming a chain of two numbers. For this \
reason, 220 and 284 are called an amicable pair.

Perhaps less well known are longer chains. For example, starting with 12496, \
we form a chain of five numbers:

12496 \[RightArrow] 14288 \[RightArrow] 15472 \[RightArrow] 14536 \
\[RightArrow] 14264 (\[RightArrow] 12496 \[RightArrow] ...)

Since this chain returns to its starting point, it is called an amicable chain.

Find the smallest member of the longest amicable chain with no element \
exceeding one million.\
\>", "Text",
 CellChangeTimes->{{3.6414331364068*^9, 3.641433141404553*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "@", 
  RowBox[{
   RowBox[{"MaximalBy", "[", "Length", "]"}], "@", 
   RowBox[{"ConnectedComponents", "@", 
    RowBox[{"Graph", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"i", "\[Rule]", 
        RowBox[{
         RowBox[{"DivisorSigma", "[", 
          RowBox[{"1", ",", "i"}], "]"}], "-", "i"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1*^6"}], "}"}]}], "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.641433152381484*^9, 3.641433153054604*^9}}],

Cell[BoxData["14316"], "Output",
 CellChangeTimes->{3.641433161835064*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 96 - Su Doku", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.641292766230931*^9, 3.641292776359545*^9}}],

Cell[TextData[{
 "Su Doku (Japanese meaning number place) is the name given to a popular \
puzzle concept. Its origin is unclear, but credit must be attributed to \
Leonhard Euler who invented a similar, and much more difficult, puzzle idea \
called Latin Squares. The objective of Su Doku puzzles, however, is to \
replace the blanks (or zeros) in a 9 by 9 grid in such that each row, column, \
and 3 by 3 box contains each of the digits 1 to 9. Below is an example of a \
typical starting puzzle grid and its solution grid.\n",
 Cell[BoxData[GridBox[{
    {GridBox[{
       {"0", "0", "3"},
       {"9", "0", "0"},
       {"0", "0", "1"}
      }], GridBox[{
       {"0", "2", "0"},
       {"3", "0", "5"},
       {"8", "0", "6"}
      }], GridBox[{
       {"6", "0", "0"},
       {"0", "0", "1"},
       {"4", "0", "0"}
      }]},
    {GridBox[{
       {"0", "0", "8"},
       {"7", "0", "0"},
       {"0", "0", "6"}
      }], GridBox[{
       {"1", "0", "2"},
       {"0", "0", "0"},
       {"7", "0", "8"}
      }], GridBox[{
       {"9", "0", "0"},
       {"0", "0", "8"},
       {"2", "0", "0"}
      }]},
    {GridBox[{
       {"0", "0", "2"},
       {"8", "0", "0"},
       {"0", "0", "5"}
      }], GridBox[{
       {"6", "0", "9"},
       {"2", "0", "3"},
       {"0", "1", "0"}
      }], GridBox[{
       {"5", "0", "0"},
       {"0", "0", "9"},
       {"3", "0", "0"}
      }]}
   },
   GridBoxDividers->{
    "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
     "RowsIndexed" -> {}}]]],
 "\t",
 Cell[BoxData[GridBox[{
    {GridBox[{
       {"4", "8", "3"},
       {"9", "6", "7"},
       {"2", "5", "1"}
      }], GridBox[{
       {"9", "2", "1"},
       {"3", "4", "5"},
       {"8", "7", "6"}
      }], GridBox[{
       {"6", "5", "7"},
       {"8", "2", "1"},
       {"4", "9", "3"}
      }]},
    {GridBox[{
       {"5", "4", "8"},
       {"7", "2", "9"},
       {"1", "3", "6"}
      }], GridBox[{
       {"1", "3", "2"},
       {"5", "6", "4"},
       {"7", "9", "8"}
      }], GridBox[{
       {"9", "7", "6"},
       {"1", "3", "8"},
       {"2", "4", "5"}
      }]},
    {GridBox[{
       {"3", "7", "2"},
       {"8", "1", "4"},
       {"6", "9", "5"}
      }], GridBox[{
       {"6", "8", "9"},
       {"2", "5", "3"},
       {"4", "1", "7"}
      }], GridBox[{
       {"5", "1", "4"},
       {"7", "6", "9"},
       {"3", "8", "2"}
      }]}
   },
   GridBoxDividers->{
    "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
     "RowsIndexed" -> {}}]]],
 "\n\nA well constructed Su Doku puzzle has a unique solution and can be \
solved by logic, although it may be necessary to employ \
\[OpenCurlyDoubleQuote]guess and test\[CloseCurlyDoubleQuote] methods in \
order to eliminate options (there is much contested opinion over this). The \
complexity of the search determines the difficulty of the puzzle; the example \
above is considered easy because it can be solved by straight forward direct \
deduction.\n\nThe 6K text file, ",
 ButtonBox["sudoku.txt",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/project/resources/p096_sudoku.txt"], None},
  ButtonNote->"https://projecteuler.net/project/resources/p096_sudoku.txt"],
 " (right click and \[OpenCurlyQuote]Save Link/Target \
As...\[CloseCurlyQuote]), contains fifty different Su Doku puzzles ranging in \
difficulty, but all with unique solutions (the first puzzle in the file is \
the example above).\n\nBy solving all fifty puzzles find the sum of the \
3-digit numbers found in the top left corner of each solution grid; for \
example, 483 is the 3-digit number found in the top left corner of the \
solution grid above."
}], "Text",
 CellChangeTimes->{{3.641292792696258*^9, 3.641292809006641*^9}, {
  3.641292887163707*^9, 3.641292887164201*^9}, {3.641292923965526*^9, 
  3.641293233635853*^9}, {3.641293402746493*^9, 3.641293548367771*^9}, {
  3.641344369043213*^9, 3.641344490983939*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sudoku", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ToExpression", "@", 
      RowBox[{"Characters", "@", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"3", ";;"}], "]"}], "]"}]}]}], "&"}], "/@", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"StringSplit", "[", 
       RowBox[{
       "Import", "@", 
        "\"\<https://projecteuler.net/project/resources/p096_sudoku.txt\>\""}]\
, "]"}], ",", "11"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.641292832322369*^9, 3.641292839596924*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"solve", "=", 
   RowBox[{
    RowBox[{"First", "@", 
     RowBox[{"NestWhile", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Catenate", "@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"ReplacePart", "[", 
                RowBox[{"s", ",", 
                 RowBox[{"#1", "\[Rule]", "n"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "#2"}], "}"}]}], "]"}], "&"}], "@@", 
            RowBox[{"First", "@", 
             RowBox[{"MinimalBy", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", 
                   RowBox[{"Complement", "[", 
                    RowBox[{
                    RowBox[{"Range", "@", "9"}], ",", 
                    RowBox[{"s", "[", 
                    RowBox[{"[", 
                    RowBox[{"First", "@", "#"}], "]"}], "]"}], ",", 
                    RowBox[{"s", "[", 
                    RowBox[{"[", 
                    RowBox[{";;", ",", 
                    RowBox[{"Last", "@", "#"}]}], "]"}], "]"}], ",", 
                    RowBox[{"Catenate", "@", 
                    RowBox[{"Extract", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{"s", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}]}], "]"}], ",", 
                    RowBox[{"Quotient", "[", 
                    RowBox[{"#", ",", "3", ",", 
                    RowBox[{"-", "2"}]}], "]"}]}], "]"}]}]}], "]"}]}], "}"}], 
                 "&"}], "/@", 
                RowBox[{"Position", "[", 
                 RowBox[{"s", ",", "0", ",", 
                  RowBox[{"{", "2", "}"}]}], "]"}]}], ",", 
               RowBox[{"Length", "@*", "Last"}]}], "]"}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"s", ",", "#"}], "}"}]}], "]"}]}], "&"}], ",", 
       RowBox[{"{", "#", "}"}], ",", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"#", ",", "0"}], "]"}]}], "&"}]}], "]"}]}], "&"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.641293767531867*^9, 3.641293773037029*^9}, {
   3.641293888484523*^9, 3.641293897354727*^9}, 3.64129392963951*^9, 
   3.641294974629817*^9, {3.641295104371963*^9, 3.641295106229305*^9}, {
   3.641295267125368*^9, 3.641295295053033*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FromDigits", "[", 
     RowBox[{
      RowBox[{"solve", "[", "#", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", 
        RowBox[{";;", "3"}]}], "]"}], "]"}], "]"}], "&"}], "/@", "sudoku"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.641295164453464*^9, 3.641295179715022*^9}}],

Cell[BoxData["24702"], "Output",
 CellChangeTimes->{3.641295157255815*^9, 3.641295192521971*^9, 
  3.64129531000001*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 97 - Large non-Mersenne prime", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}}],

Cell[TextData[{
 "The first known prime found to exceed one million digits was discovered in \
1999, and is a Mersenne prime of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", "6972593"], "\[Minus]", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "; it contains exactly 2,098,960 digits. Subsequently other Mersenne primes, \
of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", "p"], "\[Minus]", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", have been found which contain more digits.\n\nHowever, in 2004 there was \
found a massive non-Mersenne prime which contains 2,357,207 digits: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"28433", "\[Times]", 
     SuperscriptBox["2", "7830457"]}], "+", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nFind the last ten digits of this prime number."
}], "Text",
 CellChangeTimes->{{3.640692018627176*^9, 3.640692062427109*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"28433", "*", 
     RowBox[{"2", "^", "7830457"}]}], "+", "1"}], ",", "1*^10"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.640692079737949*^9, 3.640692116388302*^9}}],

Cell[BoxData["8739992577"], "Output",
 CellChangeTimes->{{3.640692089098743*^9, 3.64069211698439*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 98 - Anagramic squares", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, 
   3.64162389676093*^9, 3.641624035382356*^9}],

Cell[TextData[{
 "By replacing each of the letters in the word CARE with 1, 2, 9, and 6 \
respectively, we form a square number: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1296", " ", "=", " ", 
    SuperscriptBox["36", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". What is remarkable is that, by using the same digital substitutions, the \
anagram, RACE, also forms a square number: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"9216", " ", "=", " ", 
    SuperscriptBox["96", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". We shall call CARE (and RACE) a square anagram word pair and specify \
further that leading zeroes are not permitted, neither may a different letter \
have the same digital value as another letter.\n\nUsing ",
 ButtonBox["words.txt",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/project/resources/p098_words.txt"], None},
  ButtonNote->"https://projecteuler.net/project/resources/p098_words.txt"],
 " (right click and \[OpenCurlyQuote]Save Link/Target \
As...\[CloseCurlyQuote]), a 16K text file containing nearly two-thousand \
common English words, find all the square anagram word pairs (a palindromic \
word is NOT considered to be an anagram of itself).\n\nWhat is the largest \
square number formed by any member of such a pair?\n\nNOTE: All anagrams \
formed must be contained in the given text file."
}], "Text",
 CellChangeTimes->{{3.641624043113366*^9, 3.641624074581061*^9}, {
  3.641624209479837*^9, 3.64162420948083*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"words", "=", 
   RowBox[{"First", "@", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<https://projecteuler.net/project/resources/p098_words.txt\>\"", 
      ",", "\"\<CSV\>\""}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.641624188303054*^9, 3.641624226313254*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"IntegerDigits", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Range", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Ceiling", "@", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"10", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Length", "@", "#"}], "-", 
                   RowBox[{"1", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}]}], ")"}]}], "]"}]}], "-", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], ")"}]}], ")"}], "^", "2"}], 
         "]"}], ",", 
        RowBox[{
         RowBox[{"d_", "/;", 
          RowBox[{"Unequal", "@@", "d"}]}], "\[RuleDelayed]", 
         RowBox[{"FromDigits", "/@", 
          RowBox[{"{", 
           RowBox[{"d", ",", 
            RowBox[{"#2", "/.", 
             RowBox[{"Thread", "[", 
              RowBox[{"#1", "\[Rule]", "d"}], "]"}]}]}], "}"}]}]}]}], "]"}], 
      ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Equal", "@@", 
         RowBox[{"IntegerLength", "@", "#"}]}], "&&", 
        RowBox[{"IntegerQ", "@", 
         RowBox[{"Sqrt", "@", 
          RowBox[{"Last", "@", "#"}]}]}]}], "&"}]}], "]"}], "&"}], "@@@", 
   RowBox[{"Catenate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Subsets", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}], "&"}], "/@", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"GatherBy", "[", 
        RowBox[{
         RowBox[{"Characters", "@", "words"}], ",", "Sort"}], "]"}], ",", 
       RowBox[{"{", "_", "}"}]}], "]"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641634578057702*^9, 3.641634661237951*^9}, 
   3.641634711912654*^9, {3.641634745740091*^9, 3.641634747387334*^9}, {
   3.641634826545568*^9, 3.6416348582876*^9}, {3.641635047973782*^9, 
   3.641635100656062*^9}, {3.641635356683339*^9, 3.641635374480983*^9}}],

Cell[BoxData["18769"], "Output",
 CellChangeTimes->{{3.64163460135188*^9, 3.64163465422654*^9}, 
   3.641634713901668*^9, 3.641634748195784*^9, {3.64163483080209*^9, 
   3.641634864971131*^9}, 3.641635070133741*^9, {3.641635358569195*^9, 
   3.641635383801041*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 99 - Largest exponential", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}}],

Cell[TextData[{
 "Comparing two numbers written in index form like ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "11"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["3", "7"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is not difficult, as any calculator would confirm that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", "11"], " ", "=", " ", 
    RowBox[{
     RowBox[{"2048", " ", "<", " ", 
      SuperscriptBox["3", "7"]}], " ", "=", " ", "2187"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nHowever, confirming that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["632382", "518061"], " ", ">", " ", 
    SuperscriptBox["519432", "525806"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " would be much more difficult, as both numbers contain over three million \
digits.\n\nUsing ",
 ButtonBox["base_exp.txt",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/project/resources/p099_base_exp.txt"], None},
  ButtonNote->
   "https://projecteuler.net/project/resources/p099_base_exp.txt"],
 " (right click and \[OpenCurlyQuote]Save Link/Target \
As...\[CloseCurlyQuote]), a 22K text file containing one thousand lines with \
a base/exponent pair on each line, determine which line number has the \
greatest numerical value.\n\nNOTE: The first two lines in the file represent \
the numbers in the example given above."
}], "Text",
 CellChangeTimes->{{3.640930019446617*^9, 3.640930069737568*^9}, {
  3.640930105654672*^9, 3.640930105655516*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"exp", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://projecteuler.net/project/resources/p099_base_exp.txt\>\"", 
     ",", "\"\<CSV\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.640930082735143*^9, 3.64093009167034*^9}, {
  3.640930130874359*^9, 3.640930133980141*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"Ordering", "[", 
   RowBox[{
    RowBox[{"Power", "@@@", 
     RowBox[{"N", "@", "exp"}]}], ",", 
    RowBox[{"-", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.640930204300105*^9, 3.640930249136799*^9}, {
  3.640930290958834*^9, 3.640930342410171*^9}}],

Cell[BoxData["709"], "Output",
 CellChangeTimes->{{3.640930211494157*^9, 3.640930242069997*^9}, 
   3.64093027670893*^9, {3.640930307619119*^9, 3.64093034279137*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 100 - Arranged probability", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.641300147153816*^9, 
   3.641300153118563*^9}}],

Cell[TextData[{
 "If a box contains twenty-one coloured discs, composed of fifteen blue discs \
and six red discs, and two discs were taken at random, it can be seen that \
the probability of taking two blue discs, P(BB) = (15/21)\[Times](14/20) = \
1/2.\n\nThe next such arrangement, for which there is exactly 50% chance of \
taking two blue discs at random, is a box containing eighty-five blue discs \
and thirty-five red discs.\n\nBy finding the first arrangement to contain \
over ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["10", "12"], " ", "=", " ", "1"}], ",", "000", ",", "000",
     ",", "000", ",", "000"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " discs in total, determine the number of blue discs that the box would \
contain."
}], "Text",
 CellChangeTimes->{{3.641300189504671*^9, 3.641300209143497*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solutions", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"m", 
        RowBox[{"(", 
         RowBox[{"m", "-", "1"}], ")"}]}], "\[Equal]", 
       RowBox[{"2", "n", 
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}]}]}], ",", 
      RowBox[{"m", ">", 
       RowBox[{"10", "^", "12"}]}], ",", 
      RowBox[{"n", ">", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "n"}], "}"}], ",", "Integers"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.641300443408469*^9, 3.641300446086199*^9}, {
  3.641301075068312*^9, 3.641301117700549*^9}, {3.641301220324119*^9, 
  3.641301228707344*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"m", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", "8"], " ", 
        RowBox[{"(", 
         RowBox[{"4", "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"3", "-", 
                RowBox[{"2", " ", 
                 SqrtBox["2"]}]}], ")"}], 
              RowBox[{"C", "[", "1", "]"}]], "+", 
             RowBox[{
              SqrtBox["2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"3", "-", 
                 RowBox[{"2", " ", 
                  SqrtBox["2"]}]}], ")"}], 
               RowBox[{"C", "[", "1", "]"}]]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"3", "+", 
                RowBox[{"2", " ", 
                 SqrtBox["2"]}]}], ")"}], 
              RowBox[{"C", "[", "1", "]"}]], "-", 
             RowBox[{
              SqrtBox["2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"3", "+", 
                 RowBox[{"2", " ", 
                  SqrtBox["2"]}]}], ")"}], 
               RowBox[{"C", "[", "1", "]"}]]}]}], ")"}]}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}], "&&", 
        RowBox[{
         RowBox[{"C", "[", "1", "]"}], "\[GreaterEqual]", "17"}]}]}], "]"}]}],
     ",", 
    RowBox[{"n", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"3", "-", 
                 RowBox[{"2", " ", 
                  SqrtBox["2"]}]}], ")"}], 
               RowBox[{"C", "[", "1", "]"}]]}], "+", 
             RowBox[{
              SqrtBox["2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"3", "-", 
                 RowBox[{"2", " ", 
                  SqrtBox["2"]}]}], ")"}], 
               RowBox[{"C", "[", "1", "]"}]]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"3", "+", 
                 RowBox[{"2", " ", 
                  SqrtBox["2"]}]}], ")"}], 
               RowBox[{"C", "[", "1", "]"}]]}], "-", 
             RowBox[{
              SqrtBox["2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"3", "+", 
                 RowBox[{"2", " ", 
                  SqrtBox["2"]}]}], ")"}], 
               RowBox[{"C", "[", "1", "]"}]]}]}], ")"}]}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}], "&&", 
        RowBox[{
         RowBox[{"C", "[", "1", "]"}], "\[GreaterEqual]", "17"}]}]}], 
      "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.641300446659399*^9, {3.641301078797639*^9, 3.641301118801317*^9}, 
   3.641301149483967*^9, 3.641301229592817*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"n", "/.", "solutions"}], "/.", 
    RowBox[{
     RowBox[{"C", "[", "1", "]"}], "\[Rule]", "17"}]}], "//", "Simplify"}], "//",
   "First"}]], "Input",
 CellChangeTimes->{{3.641301124898877*^9, 3.641301174402512*^9}, {
  3.641301234897983*^9, 3.641301265245875*^9}}],

Cell[BoxData["756872327473"], "Output",
 CellChangeTimes->{{3.64130114617982*^9, 3.641301174820341*^9}, {
  3.641301243566775*^9, 3.641301265797101*^9}}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 101 - 125", "Subsection",
 CellChangeTimes->{{3.640509015355191*^9, 3.640509022245683*^9}, {
  3.640519338671053*^9, 3.640519341443173*^9}, {3.6405218351164*^9, 
  3.640521837410107*^9}, {3.640692001248666*^9, 3.64069200435303*^9}, {
  3.640938376129309*^9, 3.640938377765213*^9}}],

Cell[CellGroupData[{

Cell["Problem 101 - Optimum polynomial", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641174070109287*^9, 3.641174079564588*^9}, {
   3.641623070756809*^9, 3.641623075667175*^9}}],

Cell[TextData[{
 "If we are presented with the first k terms of a sequence it is impossible \
to say with certainty the value of the next term, as there are infinitely \
many polynomial functions that can model the sequence.\n\nAs an example, let \
us consider the sequence of cube numbers. This is defined by the generating \
function,\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["u", "n"], " ", "=", " ", 
    SuperscriptBox["n", "3"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ": 1, 8, 27, 64, 125, 216, ...\n\nSuppose we were only given the first two \
terms of this sequence. Working on the principle that \
\[OpenCurlyDoubleQuote]simple is best\[CloseCurlyDoubleQuote] we should \
assume a linear relationship and predict the next term to be 15 (common \
difference 7). Even if we were presented with the first three terms, by the \
same principle of simplicity, a quadratic relationship should be assumed.\n\n\
We shall define OP(k, n) to be the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " term of the optimum polynomial generating function for the first k terms \
of a sequence. It should be clear that OP(k, n) will accurately generate the \
terms of the sequence for n \[LessEqual] k, and potentially the ",
 StyleBox["first incorrect",
  FontSlant->"Italic"],
 " term (FIT) will be OP(k, k+1); in which case we shall call it a ",
 StyleBox["bad OP",
  FontSlant->"Italic"],
 " (BOP).\n\nAs a basis, if we were only given the first term of sequence, it \
would be most sensible to assume constancy; that is, for n \[GreaterEqual] 2, \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"OP", 
     RowBox[{"(", 
      RowBox[{"1", ",", " ", "n"}], ")"}]}], " ", "=", " ", 
    SubscriptBox["u", "1"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nHence we obtain the following OPs for the cubic sequence:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"OP", 
     RowBox[{"(", 
      RowBox[{"1", ",", " ", "n"}], ")"}]}], " ", "=", " ", "1"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\t\t\t1, ",
 StyleBox["1",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 ", 1, 1, ...\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"OP", 
     RowBox[{"(", 
      RowBox[{"2", ",", " ", "n"}], ")"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"7", "n"}], "\[Minus]", "6"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\t\t\t1, 8, ",
 StyleBox["15",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 ", ...\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"OP", 
     RowBox[{"(", 
      RowBox[{"3", ",", " ", "n"}], ")"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"6", 
       SuperscriptBox["n", "2"]}], "\[Minus]", 
      RowBox[{"11", "n"}]}], "+", "6"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\t\t1, 8, 27, ",
 StyleBox["58",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 ", ...\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"OP", 
     RowBox[{"(", 
      RowBox[{"4", ",", " ", "n"}], ")"}]}], " ", "=", " ", 
    SuperscriptBox["n", "3"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\t\t\t1, 8, 27, 64, 125, ...\n\nClearly no BOPs exist for k \[GreaterEqual] \
4.\n\nBy considering the sum of FITs generated by the BOPs (indicated in ",
 StyleBox["red",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " above), we obtain 1 + 15 + 58 = 74.\n\nConsider the following tenth degree \
polynomial generating function:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["u", "n"], " ", "=", " ", 
    RowBox[{
     RowBox[{"1", " ", "\[Minus]", " ", "n"}], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["n", "2"], " ", "\[Minus]", " ", 
      SuperscriptBox["n", "3"]}], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["n", "4"], " ", "\[Minus]", " ", 
      SuperscriptBox["n", "5"]}], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["n", "6"], " ", "\[Minus]", " ", 
      SuperscriptBox["n", "7"]}], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["n", "8"], " ", "\[Minus]", " ", 
      SuperscriptBox["n", "9"]}], " ", "+", " ", 
     SuperscriptBox["n", "10"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nFind the sum of FITs for the BOPs."
}], "Text",
 CellChangeTimes->{{3.641623085733331*^9, 3.641623142070887*^9}, {
  3.641623200338234*^9, 3.641623280679808*^9}, {3.64162334742447*^9, 
  3.641623378521164*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Expand", "@", 
      RowBox[{"InterpolatingPolynomial", "[", 
       RowBox[{
        RowBox[{"Take", "[", 
         RowBox[{"#", ",", "k"}], "]"}], ",", 
        RowBox[{"k", "+", "1"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "10"}], "}"}]}], "]"}], "&"}], "@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"1", "-", "n", "+", 
     RowBox[{"n", "^", "2"}], "-", 
     RowBox[{"n", "^", "3"}], "+", 
     RowBox[{"n", "^", "4"}], "-", 
     RowBox[{"n", "^", "5"}], "+", 
     RowBox[{"n", "^", "6"}], "-", 
     RowBox[{"n", "^", "7"}], "+", 
     RowBox[{"n", "^", "8"}], "-", 
     RowBox[{"n", "^", "9"}], "+", 
     RowBox[{"n", "^", "10"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.641623694563554*^9, 3.641623757132297*^9}, {
  3.64162386210475*^9, 3.641623862664964*^9}}],

Cell[BoxData["37076114526"], "Output",
 CellChangeTimes->{{3.641623698696104*^9, 3.641623757741826*^9}, 
   3.641623863291564*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 102 - Triangle containment", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641174070109287*^9, 3.641174079564588*^9}}],

Cell[TextData[{
 "Three distinct points are plotted at random on a Cartesian plane, for which \
-1000 \[LessEqual] x, y \[LessEqual] 1000, such that a triangle is formed.\n\n\
Consider the following two triangles:\n\nA(-340,495), B(-153,-910), \
C(835,-947)\n\nX(-175,41), Y(-421,-714), Z(574,-645)\n\nIt can be verified \
that triangle ABC contains the origin, whereas triangle XYZ does not.\n\n\
Using ",
 ButtonBox["triangles.txt",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/project/resources/p102_triangles.txt"], 
    None},
  ButtonNote->"https://projecteuler.net/project/resources/p102_triangles.txt"],
 " (right click and \[OpenCurlyQuote]Save Link/Target \
As...\[CloseCurlyQuote]), a 27K text file containing the co-ordinates of one \
thousand \[OpenCurlyDoubleQuote]random\[CloseCurlyDoubleQuote] triangles, \
find the number of triangles for which the interior contains the origin.\n\n\
NOTE: The first two examples in the file represent the triangles in the \
example given above."
}], "Text",
 CellChangeTimes->{{3.641174086061028*^9, 3.641174094184943*^9}, {
  3.641174127302761*^9, 3.641174127303779*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"triangles", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<https://projecteuler.net/project/resources/p102_triangles.txt\>\"", 
      ",", "\"\<CSV\>\""}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.641174106482162*^9, 3.641174136688223*^9}, 
   3.641174418294589*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Select", "[", 
   RowBox[{"triangles", ",", 
    RowBox[{
     RowBox[{"Equal", "@@", 
      RowBox[{
       RowBox[{"Sign", "@*", "Det"}], "/@", 
       RowBox[{"Partition", "[", 
        RowBox[{"#", ",", "2", ",", "1", ",", "1"}], "]"}]}]}], "&"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.641174270416183*^9, 3.641174311394114*^9}, 
   3.641174403301925*^9, {3.641174433305153*^9, 3.641174476491163*^9}, {
   3.641174558279823*^9, 3.641174560958657*^9}, 3.641174598512373*^9, {
   3.641174861961216*^9, 3.64117486406565*^9}}],

Cell[BoxData["228"], "Output",
 CellChangeTimes->{{3.641174282459909*^9, 3.641174311815655*^9}, {
   3.64117440671447*^9, 3.64117447717235*^9}, 3.641174561368707*^9, 
   3.641174599086652*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 103 - Special subset sums: optimum", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641174070109287*^9, 3.641174079564588*^9}, {
   3.641963658746637*^9, 3.641963666172983*^9}}],

Cell[TextData[{
 "Let S(A) represent the sum of elements in set A of size n. We shall call it \
a special sum set if for any two non-empty disjoint subsets, B and C, the \
following properties are true:\n\n    S(B) \[NotEqual] S(C); that is, sums of \
subsets cannot be equal.\n    If B contains more elements than C then S(B) > \
S(C).\n\nIf S(A) is minimised for a given n, we shall call it an optimum \
special sum set. The first five optimum special sum sets are given below.\n\n\
n = 1: {1}\nn = 2: {1, 2}\nn = 3: {2, 3, 4}\nn = 4: {3, 5, 6, 7}\nn = 5: {6, \
9, 11, 12, 13}\n\nIt seems that for a given optimum set, A = {a1, a2, ... , \
an}, the next optimum set is of the form B = {b, a1+b, a2+b, ... ,an+b}, \
where b is the \[OpenCurlyDoubleQuote]middle\[CloseCurlyDoubleQuote] element \
on the previous row.\n\nBy applying this \[OpenCurlyDoubleQuote]rule\
\[CloseCurlyDoubleQuote] we would expect the optimum set for n = 6 to be A = \
{11, 17, 20, 22, 23, 24}, with S(A) = 117. However, this is not the optimum \
set, as we have merely applied an algorithm to provide a near optimum set. \
The optimum set for n = 6 is A = {11, 18, 19, 20, 22, 25}, with S(A) = 115 \
and corresponding set string: 111819202225.\n\nGiven that A is an optimum \
special sum set for n = 7, find its set string.\n\nNOTE: This problem is \
related to ",
 ButtonBox["Problem 105",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/problem=105"], None},
  ButtonNote->"https://projecteuler.net/problem=105"],
 " and ",
 ButtonBox["Problem 106",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/problem=106"], None},
  ButtonNote->"https://projecteuler.net/problem=106"],
 "."
}], "Text",
 CellChangeTimes->{{3.641963676638514*^9, 3.641963708139662*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{"IncreaseWhile", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"!", 
      RowBox[{"Less", "@@", 
       RowBox[{"Last", "/@", 
        RowBox[{"Sort", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Length", "@", "#"}], ",", 
             RowBox[{"Total", "@", "#"}]}], "}"}], "&"}], "/@", 
          RowBox[{"Subsets", "@", "#"}]}], "]"}]}]}]}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "11", ",", "18", ",", "19", ",", "20", ",", "22", ",", "25"}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.642039604554637*^9, 3.642039612503992*^9}, {
  3.64204458124957*^9, 3.642044585551815*^9}}],

Cell[BoxData["255"], "Output",
 CellChangeTimes->{3.641977670655721*^9, 3.642039518370833*^9, 
  3.642039613247887*^9, 3.642044585921498*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"MinimalBy", "[", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Fold", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Catenate", "@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Append", "[", 
             RowBox[{"s", ",", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"s", ",", "#"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{
               RowBox[{"Last", "@", "s"}], "+", "1"}], ",", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"#2", "<", "2"}], ",", "Infinity", ",", 
                  RowBox[{
                   RowBox[{"Total", "@", 
                    RowBox[{"s", "[", 
                    RowBox[{"[", 
                    RowBox[{";;", 
                    RowBox[{"1", "+", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"#2", "/", "2"}], "]"}]}]}], "]"}], "]"}]}], "-", 
                   
                   RowBox[{"Total", "@", 
                    RowBox[{"s", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"1", "-", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"#2", "/", "2"}], "]"}]}], ";;"}], "]"}], 
                    "]"}]}]}]}], "]"}], ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"255", "-", 
                   RowBox[{"Total", "@", "s"}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"7", "-", "#2"}], ")"}]}]}], "]"}]}], "}"}]}], 
           "]"}]}], "&"}], ",", 
        RowBox[{"List", "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"11", ",", 
           RowBox[{"255", "/", "7"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
         "}"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{"DuplicateFreeQ", "@", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"Subsets", "@", "#"}], ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], "&"}]}], "]"}], ",", "Total"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.642043277314178*^9, 3.642043277615713*^9}, {
   3.642043385247412*^9, 3.642043406567271*^9}, {3.642043510070072*^9, 
   3.642043527901043*^9}, {3.642043601384652*^9, 3.642043625855667*^9}, {
   3.642043833326724*^9, 3.642043835059178*^9}, 3.642044568914019*^9, {
   3.642044614405971*^9, 3.64204463860235*^9}, 3.642044761018329*^9, {
   3.642045464822306*^9, 3.642045471955336*^9}, {3.642045519552616*^9, 
   3.642045519710718*^9}, {3.642045560233986*^9, 3.642045562043631*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "20", ",", "31", ",", "38", ",", "39", ",", "40", ",", "42", ",", "45"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.642045604089671*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "20", ",", "31", ",", "38", ",", "39", ",", "40", ",", "42", ",", "45"}], 
    "}"}], ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.642045306808984*^9, 3.642045311225439*^9}}],

Cell[BoxData["20313839404245"], "Output",
 CellChangeTimes->{3.642045311717288*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 104 - Pandigital Fibonacci ends", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641174070109287*^9, 3.641174079564588*^9}, {
   3.641286794735363*^9, 3.641286798645672*^9}, {3.641875643942121*^9, 
   3.641875649919669*^9}, {3.642039484238208*^9, 3.642039488746722*^9}}],

Cell[TextData[{
 "The Fibonacci sequence is defined by the recurrence relation:\n\n   ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     SubscriptBox["F", "n"], " ", "=", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["F", "n"], "\[Minus]", "1"}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["F", "n"], "\[Minus]", "2"}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "1"], " ", "=", " ", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "2"], " ", "=", " ", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nIt turns out that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "541"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", which contains 113 digits, is the first Fibonacci number for which the \
last nine digits are 1-9 pandigital (contain all the digits 1 to 9, but not \
necessarily in order). And ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "2749"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", which contains 575 digits, is the first Fibonacci number for which the \
first nine digits are 1-9 pandigital.\n\nGiven that Fk is the first Fibonacci \
number for which the first nine digits AND the last nine digits are 1-9 \
pandigital, find k."
}], "Text",
 CellChangeTimes->{{3.64128684224667*^9, 3.64128688851733*^9}, {
  3.64128693809455*^9, 3.641286943083228*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FLast9", "[", 
    RowBox[{"1", "|", "2"}], "]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FLast9", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"FLast9", "[", "n", "]"}], "=", 
    RowBox[{"Mod", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"FLast9", "[", 
        RowBox[{"n", "-", "1"}], "]"}], "+", 
       RowBox[{"FLast9", "[", 
        RowBox[{"n", "-", "2"}], "]"}]}], ",", "1*^9"}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.641287566828114*^9, 3.64128763328636*^9}, {
  3.641287705953037*^9, 3.641287707790664*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IncreaseWhile", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Sort", "@", 
      RowBox[{"IntegerDigits", "@", 
       RowBox[{"FLast9", "@", "#"}]}]}], "\[NotEqual]", 
     RowBox[{"Range", "@", "9"}]}], "||", 
    RowBox[{
     RowBox[{"Sort", "@", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"IntegerDigits", "@", 
         RowBox[{"Fibonacci", "@", "#"}]}], ",", "9"}], "]"}]}], 
     "\[NotEqual]", 
     RowBox[{"Range", "@", "9"}]}]}], "&"}], "]"}]], "Input",
 CellChangeTimes->{{3.641287057835223*^9, 3.641287078848886*^9}, {
  3.641287170764612*^9, 3.641287175717846*^9}, {3.641287391222617*^9, 
  3.64128741415802*^9}, {3.641287849082679*^9, 3.641287892687655*^9}, {
  3.641287923756752*^9, 3.641287938147694*^9}}],

Cell[BoxData["329468"], "Output",
 CellChangeTimes->{
  3.641287058573205*^9, 3.641287167270065*^9, 3.641287326595626*^9, {
   3.64128740572151*^9, 3.641287440199911*^9}, {3.64128793329529*^9, 
   3.641287946085355*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 105 - Special subset sums: testing", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641174070109287*^9, 3.641174079564588*^9}, {
   3.641286794735363*^9, 3.641286798645672*^9}, {3.641875643942121*^9, 
   3.641875649919669*^9}}],

Cell[TextData[{
 "Let S(A) represent the sum of elements in set A of size n. We shall call it \
a special sum set if for any two non-empty disjoint subsets, B and C, the \
following properties are true:\n\n    S(B) \[NotEqual] S(C); that is, sums of \
subsets cannot be equal.\n    If B contains more elements than C then S(B) > \
S(C).\n\nFor example, {81, 88, 75, 42, 87, 84, 86, 65} is not a special sum \
set because 65 + 87 + 88 = 75 + 81 + 84, whereas {157, 150, 164, 119, 79, \
159, 161, 139, 158} satisfies both rules for all possible subset pair \
combinations and S(A) = 1286.\n\nUsing ",
 ButtonBox["sets.txt",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/project/resources/p105_sets.txt"], None},
  ButtonNote->"https://projecteuler.net/project/resources/p105_sets.txt"],
 " (right click and \[OpenCurlyDoubleQuote]Save Link/Target As...\
\[CloseCurlyDoubleQuote]), a 4K text file with one-hundred sets containing \
seven to twelve elements (the two examples given above are the first two sets \
in the file), identify all the special sum sets, A1, A2, ..., Ak, and find \
the value of S(A1) + S(A2) + ... + S(Ak).\n\nNOTE: This problem is related to \
",
 ButtonBox["Problem 103",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/problem=103"], None},
  ButtonNote->"https://projecteuler.net/problem=103"],
 " and ",
 ButtonBox["Problem 106",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/problem=106"], None},
  ButtonNote->"https://projecteuler.net/problem=106"],
 "."
}], "Text",
 CellChangeTimes->{{3.641875658668116*^9, 3.641875664606014*^9}, {
  3.641875864429709*^9, 3.641875893972164*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sets", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://projecteuler.net/project/resources/p105_sets.txt\>\"", ",", 
     "\"\<CSV\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.641874155486577*^9, 3.641874180345235*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{"sets", ",", 
     RowBox[{
      RowBox[{"Less", "@@", 
       RowBox[{"Last", "/@", 
        RowBox[{"Sort", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Length", "@", "#"}], ",", 
             RowBox[{"Total", "@", "#"}]}], "}"}], "&"}], "/@", 
          RowBox[{"Subsets", "@", "#"}]}], "]"}]}]}], "&"}]}], "]"}], ",", 
   "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.64196388039417*^9, 3.641963916483007*^9}}],

Cell[BoxData["73702"], "Output",
 CellChangeTimes->{{3.641963885913149*^9, 3.641963917684242*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 106 - Special subset sums: meta-testing", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641174070109287*^9, 3.641174079564588*^9}, {
   3.641286794735363*^9, 3.641286798645672*^9}, {3.641875643942121*^9, 
   3.641875649919669*^9}, {3.642378111373567*^9, 3.642378115382567*^9}}],

Cell[TextData[{
 "Let S(A) represent the sum of elements in set A of size n. We shall call it \
a special sum set if for any two non-empty disjoint subsets, B and C, the \
following properties are true:\n\n    S(B) \[NotEqual] S(C); that is, sums of \
subsets cannot be equal.\n    If B contains more elements than C then S(B) > \
S(C).\n\nFor this problem we shall assume that a given set contains n \
strictly increasing elements and it already satisfies the second rule.\n\n\
Surprisingly, out of the 25 possible subset pairs that can be obtained from a \
set for which n = 4, only 1 of these pairs need to be tested for equality \
(first rule). Similarly, when n = 7, only 70 out of the 966 subset pairs need \
to be tested.\n\nFor n = 12, how many of the 261625 subset pairs that can be \
obtained need to be tested for equality?\n\nNOTE: This problem is related to ",
 ButtonBox["Problem 103",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/problem=103"], None},
  ButtonNote->"https://projecteuler.net/problem=103"],
 " and ",
 ButtonBox["Problem 105",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/problem=105"], None},
  ButtonNote->"https://projecteuler.net/problem=105"],
 "."
}], "Text",
 CellChangeTimes->{{3.642378127083066*^9, 3.642378160233912*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"Count", "[", 
    RowBox[{
     RowBox[{"Subsets", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"First", "@", "s"}], "+", "1"}], ",", "12"}], "]"}], "~", 
        "Complement", "~", "s"}], ",", 
       RowBox[{"{", 
        RowBox[{"Length", "@", "s"}], "}"}]}], "]"}], ",", 
     RowBox[{"t_", "/;", 
      RowBox[{"Or", "@@", 
       RowBox[{"Thread", "[", 
        RowBox[{"s", ">", "t"}], "]"}]}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", 
     RowBox[{"Subsets", "[", 
      RowBox[{
       RowBox[{"Range", "@", "12"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"12", "/", "2"}], "]"}]}], "}"}]}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.642378272970445*^9, 3.642378280861496*^9}, {
  3.642378349104849*^9, 3.642378382773704*^9}}],

Cell[BoxData["21384"], "Output",
 CellChangeTimes->{
  3.642378168589134*^9, {3.642378274148674*^9, 3.642378281680851*^9}, 
   3.642378350345512*^9, 3.642378383603818*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 107 - Minimal network", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641174070109287*^9, 3.641174079564588*^9}, {
   3.641286794735363*^9, 3.641286798645672*^9}, {3.641433295967617*^9, 
   3.641433301341758*^9}, {3.641620388691668*^9, 3.64162039394445*^9}}],

Cell[TextData[{
 "The following undirected network consists of seven vertices and twelve \
edges with a total weight of 243.\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3b+vVcXawPF9DgcRhcQENWIM8dX4KxaiRrEx6qtRJCEx2GBM1HuNBmNx
zb0SzzW8WFDYkBgLJcHCGApLExobiAUFpXSGSqiESv6D9fJs9xz33mf9nB9r
Zp75fpJ1L3L2Oayz96xZs5555pn/+ee/Dn24OplM/nPrzf859I/PXvr3v//x
3zfXbv7H//730w/+ueXmH+5emUz+7+YhfwkAAAAAAAAAAAAAAAAAAAAAAAAA
gCJV03Hs2LHq/PnzVcyTQ7Ea2+XcAWC4zmvr7NmzXF8YG30+EEbtNXTx4kWu
L8RE2wPCaLu2pn9/8OBBrjuMjT4fCKNznE9MHxHQ5wNhEMt3NyTWTMysH2L5
QBidc2WSvxPv9JLX9N40xcr6fn/p6POBMBqvox9//HHja6dPn+Y6G65q+HPb
6/AX+ncgjK5ri2vPHn2+PdodEAZ9fjj0+fZod0AYjdfWLJ5DbMfO8vtFnz8M
fT4QRuccruTn37hxg2uvv6Fztby3m3W2y3inBmStNV+H3PxBumJkbd+HRfT5
AFLVpw+izweA/A3pr8nPB4C8DY0/EJ8AAABANN9++2117733VnfccUe1b9++
arYmFwhC2tt99903bW979+6lvQEjuvPOO2vjFK+++irXIbzbs2dPbXt7+eWX
aW9AYI888khrfPqrr77iOoQ3Tz75ZGt7+/LLL2lvQCBXrlzpzInevXs31yC8
+PPPP6uVlZXW9rZr1y7aGxDIkSNH+qyD4eAY+wAQQJ8+/9Zbb61++eUXDg7n
4+OPP+5sb1u3bqXPBwK5fPly5zUoOTzxzhCa9IntPPbYY7Q3IKAnnnii8fpb
XV2t5DqNeX7Q5cCBA43tTe4HV69epb0BAf3++++N1+DJkye5/uDVH3/8Ua2t
rdW2t6NHj9LegMBefPHFSuL6586dm+ZHv/DCC9U333xTff/999U999xTyTUa
+xyhx/79+6vDhw9XFy5c2Ghvx48fr37++efp+qzZGARAAF988UX16KOPNl5j
7733XiX3hDHPCXrJWo/777+/MV74ySefVM899xztDQjg4sWL05ycX3/9tfUa
k2uUdVlw9dtvv03bm7S7ttfJGETGImOdF1ACGWf17cvlGpVn7q5rFWjTty83
9wbJ7RzjvIASSDxV4qp9X98VAwLayHzRkJjNqVOnWmNAAPqznZuVuL7E90Od
F3T66aefrOZm33jjjUqOUOcFlECuO9vnZrlHyLUr13CIc4M+0mZkfGFTJ9l8
r4xRQpwbUAJ5vpbcCNvvtx2zoUyuz4YyNpExisT4fZ4XUIL19fXp3hSuP4f8
TfQhNZElJu/6c6Tdkr8JDON7vEQ+Hdr4zvVyfT4FShIiLio5/eRvoomMCXzu
fUL+JtBfqPwHs6bS989F3kLF/qgFAnSTPGe5TkLlOZO/iXmSnyPPf6H6ZVlX
Qv4mUG+M52Hy6WBILlfoXF6zflzGMqH+DSBXY82zUg8RwtRnDf3vkL8JbDZ2
fULqIZZt7Noc1AIB/hZr3RT5m2UyeZld9Vl9I38TiBtfJ5+uPEPqs/pm5g8k
tjj2vw2kInYeDfUQyyJtbUh9Vt/I30TJuvYgGovk0klOXcxzQHip9LfUAkGJ
UtrXhPxN/VKLq7CXG0qT2vypyacjf1On1OZPY80jAzGk+mxLPUSdZGzhoz6r
b+RvogQmLzN2TLWJ9PnS98c+D/iR+nqosdaFATGMsdbdFfmbepi8zJTnadjL
DZrFzsvsy+R3xM4ngptc9qdN/dkXsJFb7DKX/gL1crtvpzrHBdiQHAWJl+SU
o0A9xHzlGp/zvW8LEEPMte6uUp//Qz2Zh08pD7ivlNasALZyf2ZNNc8P9XKv
l8pebgisT9uqlo7eUlnr7iq19Tyop2VdXS65DshSV7uybndy3cn1l8padxep
rdvHZprqZ5jfRfZtdPxRfb8/+/cMnfqM253agbaxsZZnFq0kx0rT2NjTnhL0
+VjW9Fk7tQFZx6oxBh67Di/qpVKf1TcZM1nOhfWNxVrFbJG1rj5/cCxfc65L
zjlIWpm8TK25Lo61CBnnY1lbn1/3tda2IX2ixD8057SbfDqN97QcpVaf1TfH
exp9PpbZxHYav1bK2tXc1hRr5RD7yIpD7Io+H8u89fkyts9prbsr6iHG5WmO
MxuWc9T0+Vjmpc/Pda27ixxqhGrlMZcxG5a5qPT5WDZ0PF/7eolzlFhzXvp7
8jfHV+qaJYs1Z/T5MJbzcbrmchtfk/tad1e515bIjcS2S55LGXi90efDK1mX
qmGt+0zf+96meyD1EMfRswbZkJz0LD+zHjXkbMd0Wb4fGIemte4z1vNj1EMc
R897q5d4ZcpKnD9DfIpiqjZjnE2vLT3mEFqPGFqfMW3b92Yltz1hkDela92d
8yEU3QeTMnCuvIg+X5SyHgZxyV5XSte6O893mXgX+Zv+WOTEqo/tGDns8Y78
KV7r7iXHobS1QqFZrH1TP4c7T3N9K8SnPC/RJW6woJSaAKFZ1rgoZpxvyPtU
cr40wihg/OqtzxeKn4dG4VDLrph4/jxt+1UgrkLqDLjkAG4ifRX5m3Yca1YX
2eeba5T8TfhQSD6K1z5fKM1vCk7amkM+SnGxHYO93OBDAXWD+6xFtP79te3Z
F5pDv2W79lQVx/slCsf6UncK1ysHQ3zCHXu5wRZtxx/pw5TPf3vBPKQf7OUG
G8rzMkdXev3RLuQb+lVATBYeMRcUxt69e8nfrMG6ojBkzMZzE7pI/EGuP+V5
mVFQD3Ez6geEY+ZHpOZ57HNBuoiphiV9G/mbf6NOWFiyfyTP7GhCDHAc0scd
Pny4+PeZ+984mJtDHWKq45E+rvT8TeJc45KxHDl4MEwfdOrUKdrESEq/x/bY
3w8emfxNqYUe+1wQHzHVOErNTyRvNQ7ZV5LYLWRszxxPPNL3ra+vF/Pesz4t
rkJqZ6EBMdX4TG5sCZ8BdSjiYy+3sskaoZLGmKkqZQ0c9ebSYPbC0N7esIiY
alq010OkrnRaZL9J8jfLIevySs4ZSZFZj6oxd4r9Y9LEXm5lIKaaLukTNd6L
6VvSxL24DPv372cNaMKkb5R5ltjn4Qv7wafNxNxinwfCIKaaBy31EM1cIXmZ
aZNxIHPr+sj6O4kb8ByXPg31EMkJzIf5rKQeW+xzgT/EVPOSez1E1v7khbVy
usi1R15mfuRzk+fu2OcxlMQQWeOfH/K3dSCmmrfc6iFSyytv7OWWN4kLyPVH
nC5fufWhud2jsMjUY2HeL0/EVHXIpR4ie3PowF42eWLPK12kL5X18rHPo4nE
EHOec8Yi9nLLi4kH8HymR8q5jxpyS7GIvdzyYeq2SDwg9rnAr1TrIWpZQ4ZF
Zi838j/SRkxVt9TqIRJD1K3UvdxyUUod9tJJH5vCc5yJIWqrCYdF7F2cJhNT
TTHeC79SqIeoufYzFpW0l1tO5F6ccl4H/Iq91lX7Hi9YZGII5G+mgZhqmWLV
QySGWCbJ3eQ+H5+ZWyemWp4Y9RBNDJHn/PKYeB75m/GYHFrWupdLcuLHrKck
McT19XXaW6G07uWWC3nO4lkLY+1FRd4ehLa93HJBTBXzQtdDJIaIeXLvZx3e
eEztO2KqMELWQySOi2XM64xLxnTcY7FMcuVD1EOUfA3qbWFZ7nu55YK9bNBG
5nd85m9SVxdtWKcRluRoEFNFG5/1EIkhog8ZE5A76J/JxSamii6+9rOmzgr6
oO5SGLLmkmco9CU59C4xQNfvR1ly2cstF/LcREwVQ9mO0309J6As7KPgh+x9
TUwVNmzqIRJDhC1pOyXU9r1+/br8fgvH7O+8kOclYqqwNTTvxnfeD8ric19k
6UfPnj1bHTt2bKF/PXjwYHXy5MnpWpQbN26M3lZn9a0WDl81r6Q2MjFVuOpb
D9Hk949xTtDLx15u0tdPlvrVlmNUcs+ZzO498392/blm71NiqnDVZx1tCvuw
QA+JT9jmb86Po6UvvXTp0sJ4/vLly9XSWHs0ci6TubH9/HnMvmbFxMWIqcKX
rnqIqey3CB1kHtJmDCH9+WTWh3btAXX16tXR94mSmNJkdn5yrnIO5r9nX+sk
66x2795dra2tTY89e/ZUzzzzDDFVeCfzQo8//ni1ffv2jXa6uro6/buU9lWH
DjLOf+ihh6rnn3++uuWWW6b9244dO6rPPvussa2dPn3ay7g5hNmzxqb70ezP
06NrfuH48eONMaoTJ04k9fsif19//XVje9u1axftDV5duXKlWllZqW1vDz/8
cFN7ixan73L+/PmNc5vNN0zNzz3MXlNL3o9Jw/Unx+y9AnxqbXOff/45bQ7e
SGxn0tLejh49Wtfe2vr8qHO48+P5+dzMpvH/sldeeaVzPvrDDz/kGoQXhw4d
6mxv8uwd7wyhyYULFzrb286dO1v79Zo4SbQ+f36eoeuYvXYTidv3/Rkc7YfE
ojnaj23btkX/nDg4ao4F83OkHfO/jT8jhLqc/KajKVf/qaee6vzel156abqG
koPD9XjggQc625vEE2OfJ4eOo22u0hwyr7vcL87nQkqeZsv61lH7/Pl/r26e
dj6+03ROkq8z6XhPrl27NtbvA+Vmban12LdvH+0N3mzdurW1vR04cKC2vc2P
9SezcfMsJ3LeaH3+7HljerTlY/Z5RpGczEnD+/Haa69x/cErycmctIzxqeEH
n86cOdPY3iTW2Nbe5nM2exxBzdd+aMsfnX9GmX1PrTfffHMhn2nLli3TvDml
exDYfF4a34coZG13XVxfcvQ/+OCD0t7nvm0xSj+jgcR4ZJ72tttuW3jvHnzw
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
     "], {{0, 278}, {
     381, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{381, 278},
   PlotRange->{{0, 381}, {0, 278}}]], "Output",
  CellChangeTimes->{3.641620487591188*^9}],
 "\nThe same network can be represented by the matrix below.\n    \t",
 StyleBox["A",
  FontWeight->"Bold"],
 "\t",
 StyleBox["B",
  FontWeight->"Bold"],
 "\t",
 StyleBox["C",
  FontWeight->"Bold"],
 "\t",
 StyleBox["D",
  FontWeight->"Bold"],
 "\t",
 StyleBox["E",
  FontWeight->"Bold"],
 "\t",
 StyleBox["F",
  FontWeight->"Bold"],
 "\t",
 StyleBox["G",
  FontWeight->"Bold"],
 "\n",
 StyleBox["A",
  FontWeight->"Bold"],
 "\t-\t16\t12\t21\t-\t-\t-\n",
 StyleBox["B",
  FontWeight->"Bold"],
 "\t16\t-\t-\t17\t20\t-\t-\n",
 StyleBox["C",
  FontWeight->"Bold"],
 "\t12\t-\t-\t28\t-\t31\t-\n",
 StyleBox["D",
  FontWeight->"Bold"],
 "\t21\t17\t28\t-\t18\t19\t23\n",
 StyleBox["E",
  FontWeight->"Bold"],
 "\t-\t20\t-\t18\t-\t-\t11\n",
 StyleBox["F",
  FontWeight->"Bold"],
 "\t-\t-\t31\t19\t-\t-\t27\n",
 StyleBox["G",
  FontWeight->"Bold"],
 "\t-\t-\t-\t23\t11\t27\t-\n\nHowever, it is possible to optimise the network \
by removing some edges and still ensure that all points on the network remain \
connected. The network which achieves the maximum saving is shown below. It \
has a weight of 93, representing a saving of 243 \[Minus] 93 = 150 from the \
original network.\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3b9vHsW+x/GHEAFFhCgoKJDgCiSowHRIIAKX5pHAEjq3sSgiTtA9coNA
5xzpOJIBXaVwE4kKWYSC0iWSJeSGiIIiZZIKuQIqSIX/g7352DuwtvfXszs7
892Z90t6ECR22CSzO7Mzn/nOf139+G//uLBYLP712IN//O3v/3nrn//8+7X/
ufjgP/772r//9+rDD/7l2YcWi/978NEPAgAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABGKZo+29vbxa1bt4qYF4dsNbbLygfAeJ332v7+PvcbQqMP
AMKovadu377N/YaYaHtAGG332vGPr6+vcx8iNPoAIIzO9wDWBBABfQAQBmsB
sIi1ACCMzrU35YPiXR4yRR8AhNF4X+3t7f35czdv3uS+Q0g874Ewuu417kXE
QLsDwqAPgEW0OyCM2nvt6OjIzf8wF4QY6AOAMDrXhLU/QH1CvEtEhtgnDITR
mgdibwAioQ8AAAAAAAAAAAAAJnTv3r3i3XffLS5fvlx8++23rL9hUmpv7733
3nF7+/rrr2lvQEQvvfTSuQzGk08+Wfzyyy/cm/Du7bffPtfeHn/88eLw8JD2
BgT22muvNWbxnnjiCe5JeKV3zUVDe3vkkUeKP/74gzYHBFKO81s/169f556E
F3q+X7hwobW9Xb16lfYGBLK5udnZB2i+Nt4VIiVffvllZ3t74YUXaG9AIPQB
COmLL77obG/PP/887Q0IpFyDa/189tln3JPwos9c0JUrV2hvQECvvPJK4/14
6dIl7kd4xZowYMvPP//ceE+W87eAN7/99ltx8eLF2vb26aef0t6AwN58881C
6wLff/99ody25v/17P/mm2+Kp556qtA9G/sakY7lcllsbGwUP/7445/tTfON
BwcHx1nkckwCIIDPP/+8ePHFFxvvuQ8++KBQHxHympAurQk/++yzjfM9n3zy
SfHqq6/S3oAAbt++XTz22GPFnTt3Gu853au6Z8s8BzCY2pnam9pd29dpTKKx
SajrAnK0yrNd96ze0dv6CqBL32f7Tz/9dNxX/PDDD7Q3YCKaj9W8bN+v75oz
AtpovWmVOZ7d3d3WOSMAww1d69W6gNYHproupEk1aIes9aqmqD5TXReQI92H
Q9+z9b26l6krjb40zlCb2dvbW7nN6Hs1VtGYZYprA3Kk93FlL4Z+v+5l3dPk
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
A0UdvRsyFxEee/PRxvc+EXLHaKOxAWuS4SgDyJo82victyEHij6mXovCCfbm
oy8feYEQ68xIg6tVz9h0Wsr+8c6FvsbmOJU3JQeKvlSrnjnD6bA3H6sac44E
uWMMoTEDWRX/lPUjB4ohhsznuxqRIetPIA0aM+SYIb5//75+v6c+5Y95wd58
jLFqroe9PxhDz39f75B6ju7v7xfb29unnq/r6+vFjRs3jsc2R0dH0duqMrKL
M31A+WOjKeNHDhRj9c33x65HjTTouTV2LUnP/sWZ52rLJyr1SYuyb6r++9hf
V/0pe/PhQ5+8KPVn4ZPGEkMzZdVxtZ6ld+/ePTXePzw8LM6MvaPRtS0qY//q
dZU/N4ibVyMHCl/a6v243LGF8ymRBq1jqr2turdEz/dF+Qzt2uv466+/Rj83
S3NSi/J6de26Jvff5c91unfvXvH6668f/3np88477xz/N3vz4ZvalOYWn3vu
ueLixYvHn6effrq4fPkyuWN4p/cA9z6guSF99Mxuq2l18+ZNL+PoEMp3k3P9
Vfnvx5+u9Qq9mz/00EO1c1zfffed6d8/5uerr75qnFO9du0a7Q1eKZ+sce3i
TFvTnGPLmqmJOZ4+bt269ee1lusXx6prGeXX1NKfz8MPP9x4T+rPacrrR36a
xhvuw/4T+FS+WzY+3xqyQ219gKk14ep4v5oFbXo/aPv+ps/169e5J+HFxx9/
3NneNA8Z7wqRkvL53vpRDq3mW9vmUcz0AdV1i65P+bXnaA6263s//PBD7kl4
8cYbb3S2t2eeeYb2Bi/KPa2tn7o1z+oaa8d6ctQ+oG5PQNOnad6r7T3JfT76
6CPuSXhRjvFbP5wPCF/K5/fK7wHVrKVyoS37baP2AdX/f926b3U+aNFwjcoD
LVr+fDR3+/vvv3NPwouyLbV+2tavgFWVY4rGT1M+qPousCjH0WXmsipaH1Dt
39ryn33eadreBZgHgm9vvfVWY3t7+eWXaW/wyu0RWPR8B6iqZkR7fIKq1q5o
y69W32nK76l15cqVU/kgrZdfunSJ/TqYxPvvv19cuHDh1Pvmo48+Oqi+KNBF
/YDqkC/K9qa9iH33D2vsr3eAs/WClKdRH6Gxtc/abLHp9+Nqg2rfAPv2MaVq
e3N1IjgvDLBDtRup34VQVF9U5w3Evg4Af1EfQB1fhKI6EtQoAezQXBDneSAU
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
AAAAnv0/4QD4zw==
     "], {{0, 288}, {385, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{385, 288},
   PlotRange->{{0, 385}, {0, 288}}]], "Output",
  CellChangeTimes->{{3.641620487591188*^9, 3.641620504649664*^9}}],
 "\nUsing ",
 ButtonBox["network.txt",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/project/resources/p107_network.txt"], None},
  
  ButtonNote->"https://projecteuler.net/project/resources/p107_network.txt"],
 " (right click and \[OpenCurlyQuote]Save Link/Target \
As...\[CloseCurlyQuote]), a 6K text file containing a network with forty \
vertices, and given in matrix form, find the maximum saving which can be \
achieved by removing redundant edges whilst ensuring that the network remains \
connected."
}], "Text",
 CellChangeTimes->{{3.641620405864347*^9, 3.641620411628037*^9}, {
  3.641620447870478*^9, 3.64162046435699*^9}, {3.641620499457375*^9, 
  3.641620506859328*^9}, {3.641620551274164*^9, 3.641620551274749*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"network", "=", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<https://projecteuler.net/project/resources/p107_network.txt\>\"", 
      ",", "\"\<CSV\>\""}], "]"}], "/.", 
    RowBox[{"\"\<-\>\"", "\[Rule]", "Infinity"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.641620478557129*^9, 3.641620521993532*^9}, {
  3.64162056328435*^9, 3.641620590571046*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Total", "@", 
    RowBox[{"Cases", "[", 
     RowBox[{"network", ",", "_Integer", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}], "/", "2"}], "-", 
  RowBox[{
   RowBox[{"Total", "@", 
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{"network", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Normal", "@", 
          RowBox[{"AdjacencyMatrix", "@", 
           RowBox[{"FindSpanningTree", "@", 
            RowBox[{"WeightedAdjacencyGraph", "@", "network"}]}]}]}], "/.", 
         RowBox[{"{", 
          RowBox[{"0", "\[Rule]", "\[Infinity]"}], "}"}]}], ")"}]}], ",", 
      "_Integer", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}], "/", "2"}]}]], "Input",
 CellChangeTimes->{{3.641620814897648*^9, 3.641620872059783*^9}, {
  3.64162102045265*^9, 3.641621021487201*^9}, {3.641621404011446*^9, 
  3.641621404400749*^9}}],

Cell[BoxData["259679"], "Output",
 CellChangeTimes->{{3.641620863348686*^9, 3.641620872363396*^9}, 
   3.64162102207657*^9, 3.641621404810742*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 108 - Diophantine reciprocals I", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641174070109287*^9, 3.641174079564588*^9}, {
   3.641286794735363*^9, 3.641286798645672*^9}, {3.641433295967617*^9, 
   3.641433301341758*^9}}],

Cell[TextData[{
 "In the following equation x, y, and n are positive integers.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "x"], "+", 
     FractionBox["1", "y"]}], "=", 
    FractionBox["1", "n"]}], TraditionalForm]]],
 "\n\nFor n = 4 there are exactly three distinct solutions:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "5"], "+", 
     FractionBox["1", "20"]}], "=", 
    FractionBox["1", "4"]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "6"], "+", 
     FractionBox["1", "12"]}], "=", 
    FractionBox["1", "4"]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "8"], "+", 
     FractionBox["1", "8"]}], "=", 
    FractionBox["1", "4"]}], TraditionalForm]]],
 "\n\nWhat is the least value of n for which the number of distinct solutions \
exceeds one-thousand?\n\n",
 StyleBox["NOTE",
  FontWeight->"Bold"],
 ": This problem is an easier version of ",
 ButtonBox["Problem 110",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/problem=110"], None},
  ButtonNote->"https://projecteuler.net/problem=110"],
 "; it is strongly advised that you solve this one first."
}], "Text",
 CellChangeTimes->{{3.641433309488437*^9, 3.641433394218872*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IncreaseWhile", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"DivisorSigma", "[", 
        RowBox[{"0", ",", 
         RowBox[{"#", "^", "2"}]}], "]"}], "+", "1"}], ")"}], "/", "2"}], "<",
     "1000"}], "&"}], "]"}]], "Input",
 CellChangeTimes->{{3.64143596494454*^9, 3.641435979831185*^9}}],

Cell[BoxData["180180"], "Output",
 CellChangeTimes->{3.641435985412532*^9, 3.641721229452769*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 109 - Darts", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641174070109287*^9, 3.641174079564588*^9}, {
   3.641286794735363*^9, 3.641286798645672*^9}, {3.641433295967617*^9, 
   3.641433301341758*^9}, {3.641810810513186*^9, 3.641810816978067*^9}}],

Cell[TextData[{
 "In the game of darts a player throws three darts at a target board which is \
split into twenty equal sized sections numbered one to twenty.\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsvXvQZ1V55+s5OVNjjqfUqYlGrETGaVJFtKiKYyoakqpwQkbBaBFt460J
yBBkqAyR4XCziUcjnUYugghpkQ4ageYSu5tL20ykAeWmIIoiBg0ZnYueOuZS
Ts2pM6dS5R+/8342fH88v+dda++19l778jb7j6fft3/vb++91tprPd/n/rzy
37z/be/7n5/3vOf9H89f++dtJ537v5955kkf2Py/rP3nNz9w1in/5qfWfvn4
//Q08eFisZhppplmmmmmmWaaaaaZZppppplmmmmmmWaaaaaZZppppplmmmmm
mWaaaaaZZppppplmmmmmmWaaaaaZZppppplmmmmmmWaaaaaZZppppplmOijo
Jz/5yeK//z//ffFffvCfF9/+9rcWDz74wOLAgbsW+z5/x+L/PP/8xUcu+OPl
T+iij350cfnHLqlIv+vnlVdeufw/v0P8DnGt/w4/dX9978wzz6yIzxjD/rv2
VWN69NFHqzEyVsY89rrNNNNMMx3sBK/927/9UYUN8ONPXfOpxTHHHLP4jd/4
jcVb3/rWxXve856KX8PH4e38/drPXNuKbrjhhor0e9uf/jNhF+M86+STq3Ez
fubBeJkX82OeM7bMNNNMM+VRCCde85rXLDFC+NCEAdIHTjvjtIpfcz18Wphz
+OGHV/QzP/Mzi3/xL/5F9fOf/q//dEFJOP0U+c/1U9fpXsICngWBEZBwjbmE
cEW/S3fhGubK/fgbegs6y4wpM80000xPE/wQvgh/BBPEf2X7qcMJsEG4AImH
W74/RQJ7GCeYKKxhLtjAYjoMJJ0FXGFdZkyZaaaZnkvk8QJeKJ0CfultTsji
8FZIf+Mzrx8cLMS8mJ+1d4Eb0lusrqK/s35gEN+ZMWWmmWY6WMjiBfzulFNO
ieoV0jmQyWVXEl9FLxEP5Vr7t1ziWsn+smVhh2rD6/29+L0LtnE/5id8YGz2
ebLjoYfY7wlT0GFmHWWmmWbaiGTxAn4vn3YML+CF8MQm/g2e6B7ct42dCv4L
P0Zmv/kvbq7GCO3du3epC6Xyfr4nHs31ivWCh3P/tjjCvKyu0TRP1o3vgBny
r1g84f/8jXkLT4j7GnufzDTTTDNB8CPZo+TjxgYT8mfzN/hdLm+tk8tTSTFO
xM8yXtmG4P//6fv/celjaBobf+d7YBBYyfXCSDCE+/OcNmOUv1x6Vq5eJN+K
fEgWi3RP8IS/M9ZZN5lpppmGpv/vf/yPigfDo44++uilLF4KL0J8UZgEHwSn
cuV6xgdvZ8yhvzOflHvzd7AD/oue4f/OnIWnuXoS19pYrC5rZudmfUzyx1vd
RDFes24y00wz9UXE1UrPgA9bvOBzYmWRbbv4J2LEvW0sUi5fRk+o48nwWeKF
6/wr4Jj0jDpskF6TO06+33aOqQTmsZbCe+knxCjovc5YMtNMM5Ug2afgwfAY
Hx8lHaMPXmcJ3ibeCu/L8VXIT9GEa8jo3B+dKsZ79fy6+/AcdJTccer5XMu6
9r2mzAe8UOywxS70Et437x59c+x9ONNMM20MEmbE9AzFSPXN3yxZ3wC2l1Qd
B76s65q+p7mG7FIaA7w9xX7GGHPGKR8P92esbfwnXYjnyw5pcxyFJcgK6J9j
782ZZpppeiSfhvwWHjP4rMmfq3zsPvgbeMVY4K/8TPUtMx7FbdXpAmCi4rJi
c9B3Uni7/DWp82M+jFH4EcOwIYixgJHKRfF6yayTzDTTTBAyJfaLUNwU/KJJ
z1AOhK5vsu104WlWNs6Rz3VdjCfr3vjX6+xG4Ad2sJRnK5Y2dYyyjXF/fvaF
wzmkeC7WxOKIagWwb/7bj3+8GHsPzzTTTMORdA34oY+dQv+AN8RkdT6H3/Id
8AXMgOfBe//6qe8m+RnakrXv5MRgMUd83tjzQ7WtmAe+86aYJ/nhm3QD2cxy
sFQ8WvkoQ+XY5zxHdiyLJfjiGfts25pppoObkBWRGcUHvH0qhZcodkeYAd+Q
v7dvmVl5F1BufBK8jnhV/7lsUuBL0/hT8UPPy9E/GJvwo1Tsbgp2qD59Do4g
P9j8EuVNspazbWummQ4uAjeU721xQ/VCcuRPeK30jCEww/Nvnt+Gx4bGae1W
KZiguNwUm554aur4pMdBYPQQ68mcWc8ueOV1EsVXzLatmWba2MT5xWZj/eHS
NdrET8Er4BHccyjMsARfkoze5A9vItmtkJdT+afwo8l3D37wvVT8UOyV8CM3
P7ItSZ8r8Tz2k81fkb+dNZhxZKaZNg5xXn0cVW6Npxify41LLUnex9ym7qEI
nsl9sFulrgm4meLfYVw5+YN8n3ck/Bgidpc5K96ryzqG7sva2pwS1caccxJn
mmm6BG6oxq3FDc5zKX+sZMwcu1cpsnwWvtc2xlWxsvSoyuHVYHIKfiCL5+CH
cBEffml+XvdM5Tj2cX9bY9LiCPtz1kdmmmk6xHlUfrjiRuXP7IPvlKzPlMuT
mF8XOw/3UF51jn8Cku7ThB9gkvxDKfeVXwf8aMpzLEX464eylbFnLI7Ipjrr
IzPNNB7JvyF9A96q2Py+4j+VjwcfGKOPk/Uzt6kRJbsVukeuDU72nia9h2eA
Banjk19F9bf6XkOLw0PWEfA1BNi7s39kppmGJfk3fG0R2av6zl1WnSbpN/Bh
1Qwndkh9PfrAF8trc3Ug2b/Ajja6Gc/GX1IXH6VawXwv1TYGH2U+0BCxCbwb
5Zn0/Sz/XBvzO/tHZpppOJK+Af+yNQx9PkdKH4supDhe2chUkxa+TGyvaqEz
jtK2fOkP8NqcGCxrt2pre2MuxPqqhkkoFxG7EGNL9csrB0P4MYQ9SbarIWo0
WmL9VR9SerLsWrxL9jXfmfWRmWYqS8rhiPnF1QNbZ7FPHYRnKj8OXkD/JdnS
1XNQPfnAmJKxWpKd5StIvbdsSowLm41690HcE4KfNdWfh/eCkcwbfsc13EO9
DZnz//1//TBZ91CuCNcxvr7jEpQbP7TtiprGVvfQPBmPentZu9aMITPN1J0U
U2X1i1AcLnzI9lgK1eooSfJDxHilrZtespcFPE++5lQeqNro6jErGVjxu5D6
2X79iUcbMYm1pXcf+hbXqoctuAKW5ugQioPSffrm6WPYrnxt+lC+u+J+hSPs
L/bNjCMzzZRPiqna+uGtK3apOnuQ90/2mUcAj1UdrNh3+LvqVZWyY8l/L3tP
qrwOb2JNqbcC5mGHsvxfMWupuS3MBxwR9vCT95OraylWi+tZqyFqwLBuQ9qu
tC9Ve6YOX1lX9Drtm9nHPtNM6YQPkTNuc/84P6lytq0lwXVjxEiF+FVJLLP+
gr769A1FvGfmwbsfIqZN2DtEjgkk3UP6XmqtLcbHXuY6MF120RlHZpopTPJx
yA6lWkI555Xv276kY+T5WZLfoaS8q3gl1dRtw9MgZH3pUfZ3/V+/W3+J/bsl
3bPNXNCFeP+5+Si5ZG1XQ8kVtuYMWNB2PwtHZgyZaaZVks5h/eNtY5esrVl2
5DF1EGwR6n9b6p6S2cEPH4Nl+T78Er8tPEi+ffzfjIn1hXfLPgKxVuphEvpJ
TQ59B+Ia3UOxy9IdeR7PRe9iHBZz7HgZP/Y09kHfupTij4fS2aQPW92j7X1U
3557ab1nHJnpuU7SOdSDI9VWVUeS+cbWQVTftk2uXtP8hB+K5ZF9QzX7xPfl
j5WPAVlfvUrwdcO7IfwivAuwnPrj0E9+8pN1xOd8h+9afwr34p7cW/4Q1elS
jXTxPYsx8EPVO+87dpe1YFxD2a6s7gF13YfepjVjyEzPVQrlcnStbyiycp/q
cw+tg4AX0j261OTgPoqxhb8qR4D1En7Ih20xIRUPmoh31eY6PdPiDMT4wFPG
K3zhGdILVGff6iwl3h1rCObm9CQpsQeFHaVqbipOy/rX53jfmZ4rJH1DeXfK
ASwddyPZT+esbx2EM618Cmw2ik2CZ6bMzfok4J3KZ7f+IPif4qakN7CeIWyI
rf/ff/uJ6jp+PrV/3+I7u/9i8a2rrlg8dO5ZiwdPP21x34lbFve9e/Pinjcc
VdGeIzZVPw8c9rLFPa9+5dO/H/em6nvf2P6RxdcvuWjxV5/eWd3n+49+qbov
c5ZOkTou7Q3FhCnOVTKGMKUtnqgH41BxV+rLVUr38KSa99Kx5/z1mQ528nVH
6vzj1jfbVk6TDiIbSl86iPIFxSv4HTkbqstjVC9c9U+3WCFbkzCiif/yN/g2
mABPh7+L7+/7uX+2Qg//3P+2/NkH2Wfs23TI4p7X/1KFOWAUOPNfv/1oY48+
5sO8mb8wRf4sMAU8wbeTiiesM2vcd20bu/dsTa++9p5wSvmcsy4y08FIyueQ
zgGv9H4OzhjnW3xUxP/bxL+q35PsJH3pIMxDNUzg+bF4K6tfyBbF/GSXl17h
dQq/lvu/tb/CKP3/8+ed2zsm9IEv8DrNgfkwr5ju4teAdbZ4ImwYyreRwtOH
qskiP5vVRWYMmelgoFBsVYy38jm8VH3FxY8VZwS/zZXjrA16yLhNOy/lGSrm
yeMFaxTilX/3j/+w2PnNaxfH3vW7i5fu+sXF8/a8oqKf3nXo4h23nrDks/CN
sTGhDbEOmiv8VvODNu395cXmO49fXP3INYunfvy9db4Yu8esfiIfPevNuo/x
vm1+Ttc+kf581MlRqoMvfXvGkJk2MknnkE2Gn7HYKvkrwA1b31V2h7Y6hGod
Kv5+iPp8nHXmybOkS/FssJC6H9Ye5fFi+yMfq/DiZ299dYUTlqda+oXLfmUZ
94rsPjYWtCHeCeNnDcDD2FyFmWDoSfedVmEqa6VrPZ6wzpIX5I/nfQyBJbav
Y0m/h/Yx56jOpss8lS/C/Ofc9Zk2IknvsDpHzLaguETih2LylWqPQzl8wPfW
5vc+amSEMIPnyYdhdQytkfDimDs3V/yxDi88vfjaTdV6cZ9K/j7sZaPjQQ5h
w5INDplh042vTZ678IRrTv/yeYvHfvh41EfPGkl/ld+kLyyxugfPLKXv2n4l
KXjEWbG92Gd71kwbhRRfpRhTqMlnyZmQr7EOB2T3aSO7lYzDt+datin5MtSb
CczwPgzZo964+63ZeBHin8rbRqchTmpsTMihzx9x2BL/GD942HYthKfg8K1/
c0elw8bwRHxdMYAl/SXSk1VLuFTNGvV8ya27Lz+M7TEy48hMUyVkbOsjT43L
VWwludF1MpVksDZnED1eNWu7yoXy8zNu5bpLz/CYge0eHQPbSxe8CBFrxjPg
CZ896vWjY0IO7XjDUUv7GzV/S6/NkTe/sVp36zux+xSMF0+Wv6SLXio9V/WM
S+keqk/ctgandHv51md71kxTJN+fI6eHk+px1OkF2BxUV7fNOZT9WBiSmwcg
XQP7B7oV/AH7C7JzCDNO+8IZKz7vPujCfZctn7vjpONHx4Qs/HjnW5f5Cp98
8Jre1qiyc+395ep9xOxc6omlOK429i3p0CX9Htb22tVvZ3tXzRgy05RIeR1t
ax4qn7aOpyOHKa6kzflRTL7iYpr8kPY66RrygyO7+lwt1gB5F793n5hhacvV
v7+Mwbr3ystHx4QcuumC85c8/AO7/niwNQNLznnwgxWW8GyPJfB/6SSpPYj7
0j3UJ7FU/QTJUKp/MmPITGOS93XUxVfVEedU18fOifpEdKnRSr6Z/CxNOgg8
QTG34g3KTbD85nNP7qlsJaXtL6k2GuHY4197eHRMyKEv3XF7NW7WknkMvXbC
EjA/ZN9Ct1SNqSY/ifRn1f0q4fdQ75jSPbW4l+xZc+2TmcYi1a9SbG6XnuM2
VzxWd1c1A7vWTpUOwjkP6SDWRgX/gCdYXQNeg+xKvOkYmGEJ+xiYxrjIdd8o
MVjEXqHDMW7w+CW3HD7qOkLoJNbvrvctP4lit/zeVFygsKNEX0PpM331ueK8
cY4UD8wzZgyZaSjyvo4SdQ/VB1v+bR+zxdnlfNrckDakHhCKkdH5VJ6Jev3A
N2yNDX5HVkVmHZvXicAv/C96J3X8mjoixDzhZ4fwX+ODgK4/4/TFjj94X/Xz
mrPOWFx32Ucr4j3Yn9ic+DvE96G9J/5edY+rjzt2eW+eQ62sunx44R7jHnsd
7XqiC6FTWgzhd3z9sm3ZWHSve5Twe+ieJbCori+L8g3nnPWZhiLr6yhdG111
GPBnevxQjFaJ3g3wANmqmQPYpP7g1h+uOYMbY+saMVIOBeOlP4fsicxHcXDS
t1R70dfozanT6+vqqo6j6rertq7ti6s8NsaFTX/b2WcvsZn1HnsNY1iCz93X
6WKdLI6oVhlzLuH3kN2Kd9alVhd2KtXyV8057Ld+fLZ+1mzLmqlP8n7ymJ23
ayxkyN6rGoUlbMtWB+Hc8NOfG/gEuc5j8zHP0yByz995wbuXMWAas7ABXAjl
Kw5NvmeI7b2u74jvvuvsd1Xz6poH0seav+Pu9y6+8r2HF5qTxi6MLOX3UP5h
FzlJdU6Ea8pFkh0O/PYYopz1ue7JTH2QcsktdsT8iapDUrr3uHppdDmjNgYX
+ZH7hXDjhPtPnYS+Iaw48pJjFqduO3VxxQ2fWOEJTTVsPVk9gnmSz4j8D2+E
bnr8liq/kZpTF99/6eKCe7dVxO/E2PI3vkOOHt9H38AXBC5wL2FW7v5iHtxD
dayY52mXnlbNe0qYgu3yY49dtW6/gIecCfh2l34lslsh07S9h+JM5CtU32H2
PO9aNlt/f+n+c3/DmUqSfB3CjiZcsH0J6vIBc0l9skM6vWJs62JkGJe1U9mz
wX35P/X6xsQN+CT88o3bjl2c9pmnc47JrbP1T1LeGd+Fv+/66k2LC3ZftPit
c96wOOL4IxYvPPqFS3rBr71g8fzXPv9petUaHfb8xT/5+X+y+Kl//lNLsuun
/+tvfJdrKtI91n5yX+jQtx26eN2pr6v0pAuvu2hZWzdlDsI3yc033XPL4szL
z1wcc/nbq/XpmrvfFdPZJyG5g32FDZF9lqt/s3elE7e1W9k6JyE5i894BzH5
j8/k/2MenLm5p8hMbcnHWKXqFKpnXqpmuuKz4PPetqU+f6qPGLoWuy8YqNq+
Ibmda4eWc61+AX+ET6bghXp90EvjkS/esfIdsAE+Dn8fs++7fwcV3qyNi/8r
9gqCXzKPpvnK/iU7DPgKzr7iE68ZHEvYJ3YO/swwJ84Nez/1Hcgn1yU+nbPR
FAOmGJWYHm9js9S/a9ZDZsolYYf0jtwYK9Wc4toS8eu+jzhj4Xzaeu/WZmx7
ichPYHEDfnTvtm3LGkzM97d3vW0QzIDnIUtjp1FN3jr+ydjoufTdB/508fjt
n1j88K+vr+ibnz5/ccvWs1fmhR4wNl7UEbqL6pYwX8bPPDSnp+75+OI7B/ZW
843xLaufsH6s4+ZL3z4YlrBPJJczRuGff2fyYzTpE4oN4bx08Rty5tjndb4T
znRTrQdIGDLnq8+US+yVU045ZRm/07Z2AudCNUe61KmTTQxerx5MqikHbvhz
x+/KF/f5G/Ba+rQqtpQYVJ0NvtsH/xFmwOOEGfC+JrwAK752/YcWT+67aPG3
P/zc4r/9v/9hHfF38WPoqJOOGh0j6ujlv/7y5Xrz7h6+9o+C8xKWgC2sw/cf
ujNq/5I+hnzxyd2fWmz+5Am9YQn3tDEL9168fbmX2Fd2rykPkb2LLTd2Bvhb
W/+7fHrycbC36vJwVeMzxUam+N65DvxMqeT7BHapu2N1YfZfW9mK6xgLZ0M6
h3zINr9KOknIxwGPoX+qz0kg5078gO+fvOOUXjCD8cb4H5gm/QJ+Ct+M4YUn
vmttKV3zY/om8E36EvIA40+ZJ+vBd5+8cXuln4An4tWxnlKVXlIYS/DnWN0j
lLPJPrPjEY6wL2M2rTY6umJ0ORu2rgLnLYRFthZj6llUfO+cIzJTE0nvKJnb
wT5VvYRQ7GAKIV+pl4Fwwffx0FkK+Ti+sf0jtfnQO888vYgOErJNhTBD8jI8
8PHdH63VL1L4qurwQiVyzvok8E3rUdWE6TDvCk/W1k72rtA68155D+glvJcu
WBLSPer21beuumJlPOAIPB4bUtceJOLrjEc9OrXvwWXOinqdcH74vnLac2OD
hTvwBPjDjCEzefI55V1yl2L8v23/P8WFcC7gu1a2UlxVyFZVyYfHvamxL7jV
Qbg+VwfBn4ovFx8494nZpvj8qQd2V5iBfaYN3wwRMqeex/On4jcPEXtL6/Hl
B24qtgY/eOIzlS0PLLH2PJEwGx5LPBjvKzdewuoeVbxVQ70Y9t19J25ZV8dA
Nq02cVri58o78XWDuB9nRf2f5cNQjnxuDxGPV9CMITNZ8thRMqfc7nlhSNsc
DuQ2e1a4J5/tv2vfOluV9XGkEPXPdQ94TApvecnOV1U8hXmFavJCnGMwAzm5
JGas4MfNlyx5FLyTWKexcSJEjEu5g7yjr12fZrvKJdb5O3v/pMKSOv0P/kpe
De8xRfeweY/7G3QPjyPsRzsOG6eVWudXpBzDutpY8hdKZ+dcd81vVJ1s1cqe
MWQm+TuEHao52kePV/WG5hldYrK8f1y8k/OJrapNHUGuEX9o8oPAb8hvU72T
UK43tqk+McPSAzdfuDzL/JxqDBbjUt0r3lk17p7XBhvX3TvPXzy1f19QJ5Rv
gvdZZ9tiP+ToHjEcsb4R1sDnHjatIeeGa5p8GPyNtU7tU5By5tQTVxgy+0Oe
2+T1DtUwkK+sZG9PkeKm2vYhl58DfdzuXc4itoIudWGJJbU6iOUl8m2Qd+Dt
ZCJs8I9cdUGyT7gUgVM2JvZfvvFfjo4VIWJclgc/duCKwdYIHCc2gffz/Ue/
FKzZrlhgbFv+3ef4PXJtWso9TOk5Qi6TYqya1lu9brrGz1vskH9+tmU9tylU
B9H+vy8MsT3Vcvx4NrbK8m/pHDm2qhQdRH4QdA34yfYrt6/LIYH4P3YSfBrY
4IfEDdF/+uo1yzwW1uPNp715dKwIkY29qmouro17jPUCS3hfvLeQbYuxwXex
TfL+2Qcad1vdI0cXQU+PYQj4Qo2zlDxD+H3XOozCDvUikewnW8LsU3/uke9T
Ln+HfG9WD8E+W9qWpVrt+C1S+huAYTGd464T3tP5LFvifnqG+hT6Wu56Nvb7
oXWNEBGL9OijB5bj452NjRUh4h2KX1axEC1jr0oSOlDlhwnwPz5jD9heJeSc
ltprIV1Ez4zJbuAKNtMm+xXfE79vKwNyf/W9tdih58qPP+shzx2S3iHs8D41
YYjiZYUhpWN6tPc4K3W1FPgbz0e/tzoHsltJ3LA6iLVVhOjrF7x/ErhhydYx
CdVxGZtUm0ljZLxjr5kl3ic4gm0r9t7BvL56dKFDW11EsVLsf3/20FOgupoQ
4E+XeigxvcNjltVDGM9cL+vgJdUkacoNlNwhPUS9LkvrITwf/AjtcR+Xa33k
xLKUPsfIghduPm4Zt2LXjWfCV+7bdvbkcENEjraV7acWg2Vjr6CSsbslCdsW
ccAhH4l0A/ZJH/svpIuoz7I9e+gT6CCKwQrVXlDPlza+D51/YQf3op5iTI9R
zV/VyJv1kIOPQvWsmvaQ9BDlrPaBIaFY4Zi9inysEn4Or2+cdcxvrcMpS/QW
R+cYm7fV4sfujy75HTLg1GKwqNOr2CvG+eXbLx19zeoIOYH37veC9VPQc7H0
frz9Lceu7Hn51sm7tPyb86uxqF+C6pyqn1WbXCude+WMqA9i07mXHsJ3Obuz
HnLwkPp3sL8Un5uyl5S35zGkr/w0W/NwCHsV2EH9q1g8lYjz/P37rhydp9UR
dny7XlOLwbKxV/C9IWOv2hC1ZOrkaNmY2D/06u3DnuWfxVm08Vn8rnoM6s3F
z9T6VjHskM7RpHd4Uh1s8Zix+d5M3Ukxuls/vLWSTXjHOfzf6iHsDWFI6bgs
xVd5PUBxuSXlvAo3Tjo+2HcQ+YleGW/54HErf5uavd5TFcv0zHinGINlY6/A
kbFir1KJ2A69e8ZLL9t/f9d56/YLc2IfgSMl92idPcvX0OIsEtfbpe8n18Ej
LHbU9YmLkfBntmMdHAR2oOsiE7StYagaVrKHSl8uZcuSzZZ72z33o7vuLC7b
YXPwzxEfIF4TOwtjwv7DebJnd8o8j1gm4jqX7/3y7n3iS5Kte4Wc/Pd/d9vo
a1aHxVYfZR/IHsjPcz517jo7J/sDzNnxzrf2as+SDyY13zD1/Invg4XqIdJW
RlSNX3jOjCEbl2xuOe+0y36zdlHF7HW9J8QehbdwJqz9pbSvo85WRe6xcMMS
n20kHcTa67v0QC1NPvaKHlljr1Ud2Vi2ypcU2htrOMK+sT52+SM4F/jUSuoi
Nj7L5ht2PX8x7OhyX/Vxn/WQjUs+P7BEDyfpIYrn69rnXNjhfR2PbT2nKHZc
/N4tlWxocYPnXHjthUHeYMnqIFxf2cUnwONCRD6cxkrOwlRisHzsFeMce61i
xPv1ukfd3Ng/7CNfr509TZxWSV3E1tCyPpG2Z1vnmfuoHldX7LBnW3xirnOy
sagP7LB7TvKKKNeWJT+58jqsr2Pvib9XDDv2bTqkqs3u46r4nb4cTdgh/rDa
K/3A6DwuRjaGd0oxWLbu1dRjr/7y4Wdr4cd0j9AesfWx7DnkfJTURchvDeWJ
4P9o49e0+ngp7BDBd9SbZM4N2RikWCvhR5f+T3V7T3qIetbwvFR7KX4+7V2L
HSm11lOpitEP9JDacvXvJ/EESxtFB6Eeoc2TmUoMFj0HrX5JrPHYaxUi7/fA
z5GLkyGbFvu8pC7COfF9CnLqWuv8ohPqfHCG+6iZKr+m4m7G5o8z1ZPFjpTa
IKUxpKmmgo2x0jnD11HqbOFvx8/he0hx3oipamPT2Sg6CHUULZ+eSgwWsVdW
L0JPGnutQmT9HuydXDlDGIJuG9JFqPleKu8QOYtzY9eVM1hXO8ueW9msuJbz
2wd2iFQzdfaFTJtU10p5oH3zBfYc8eEWQ+p86soxsnuobb31EFX5XMYPLz4a
84/n0EbQQZCfbe+kqcRg2dgr7FhTjGPzfo9c3WMdjhz2dJxWyC9SMkbL9jhU
f8MYhoT0jr6xA2IssnljI5sxZHpka7GzR4aKvdGeVL2EEIYwFh+fq7q5RfT5
NfzBR+5jq/g91c+Rwg+mroMQw0tsk8Z43b7rFj/1z39qVOxQLI7GNJW6iZ5s
/cm2ukdozxx5yTHrfG/wb3TkUnV8iTfxGOJrY3EevexGTEnf2CHCti1fyJyf
Pi2y/vIucdtdMES9lcEQ1bTic/aw1ztKxlhxBvGRW3vVMraqsP8YedLygSnq
IJYPTiEGayPEXuXGXLXBEe8XqeKd9uwu4ltXf0OLIaqNxflTvWudP2HMUNgh
wp+umJu5Xu90yPo8+ug9m0JgltVD+Mn/VcvN2uVL5ZNjr/JxufB1+nWUkB9D
fMA+a4o6CL4Fy0fGjsGysVfQN/aM0yMlFXNTY67a7B38b36vKs63hC7i43uF
IR47+HxoGVMEf7J1ssbmnc91Yj8IO846+eRReYX0EOUhqQ6C1Tu69giUvCV7
lbUNpORzdCXkSHv+p6aDEIMlHjKFGKxD/vUhK3rhED1rc4j3Z/dQad3DE/oY
+1TPq+pJP1NHq8S54HxZnzo6qO1tzHkcCztE8qcjX846yHg0ls+jjmx+CHYL
r3eUsFeF4qtK+MhTKOQHmVJtRWKwLH4Q+zTmfrCxV/x88sbto6+RiBq7Q+ge
6/bQq9b71kvGZ5Ej4uurjGWzipHtQTr7QsbBDpsjOJV9YfsPiM8qr5V8vq7Y
Qf83n9NRykeeSl4HoS/I2LxQZOsoQh/Y1X8cXh1t+aNVeRh8G3uNRHfvPH+d
DDLUuijO18dnYY/FLtvlnOx65ctWfE4Qegi8egoyJiR/umpYzHrIsEQujur9
+7wh+czI8e5alzOHFGfl+3YI727b9uHW8pX3dfTlI086+04Hwf4wlb5SxDbR
W0hjY83GisHiubbuFbHFU7H30SfK9pkcw1eELQtfne/J3KX2CTase9f0GH/+
vE99jP3gST1I4WGzL2Q4Ul1EzqbvdS35H2xR3w7FZeEf6bN3h8cOeLyNNZeO
3sbXYeucQGNhh2jKOoi1yYAlQ+pmlsAPKwd//6E7J1N3lxoqQ/o96sjX0FLO
Ovu+jX4uGUv+j5BPfSoYIl8IfGzWQYbBDmLfhAk+xpv3AA9H1lMMFDijmrml
a9xAyiv3Mbqb7zx+8eJrNy0u3HfZCobk6CHIYd5Pju149LiidX6QRyejgxDj
ZLHthUe/cJw1eu00Y6/QgcbwezTtp1CM7y1bz04+K8hmFjs+fveO6vxxDqeK
IarNrBpZM4b0R7aPILqFr4vI3+C1obwgW3+dnPGS7x/s4L4WO064/9TFT+86
dPG8Pa+ofoYwpEnvUL11WyOrql81kbqAXgf52vXTwA/qS2lcvAtsJGOsD7Ff
lh9Ope4VuqId15B+jzoCQ+hB430inz/v3FoM4ax47Pjkg9cszx/kMQTZ0veh
GouUFzLXyOqXwAfWN1TbClsiPBw5OKZfKFcc+SO11loTcR8bh8cePem+05b7
VhTCkFi8SSjGalkzdyLYofPue/tMQQfBL2z3zb/ddVpVw5D3z/vCJ0ZOJ3VF
2E/IE8oNZm9g88DuZdcefZbPwXPZrLkOuw/6MPeDH3F/1kX5DnYcU6hb8nTM
1bM2tVK55sX2VKB+Fr8jb8Vypu698vLlPmQ+6B0WO3T+kOl8vazS+WLCo9BP
+WVD/En1KWZfej/EmnJGY7WtWH/OdlNvc5u/03WvgFmqo6txnvPgB9ftXY8h
Vk661/lDwA7kLbuH+F5fOYFdyeog0Fg6CH5z7DLY9S/feu6i5N4rRey7my44
v8oBgY+PUceE9zNWzFUqya/uMYSz4vtxgh22r3wIO+z543xansI7QZ5oO1bk
BeUvyzbC7/yEx4hkb1e8aKguuOxYc7+Q8sSasr6x+iT8HbmqaS/A89ETkTO7
7HHGgOxq6+jWYUcKhnA29rvYkSljBzSGDgLf5Rnw4ZtvuKIibJboB1OPpZcu
w149cPdnq7EPhSfVe3GxTlPSZ9ftrVc9fyXXUGcFGavylRubFXPxNqsYeQyB
17fpEaT4KXgJdc1CRE9lEftTucXwMm87YwzwptmOVZZsjnmsn4d8H036qPCD
d9mlb6CeJ1kuBTtiGCI5yPpQIGy0Lz3ipaOf4yYaQgch3vRr139osffmS5a5
mfBh1svay5uI7/LO8Gv/128/unhq/77FX3165+Lrl1xU5XdC97zhqMU9r/+l
6id8ClyvPlsj/v7QuWdVcT7f2f0X1T0g7se9246l4i1reML80KGYbx+6h33+
FHWPdRhy2HoMUW0Ha1+s0zuaMIS9BL/OzUvn+7xDxsP16CJ8Bg7AZ/gdHiN+
wflWTE/Mxi77yGzHKkM2x7yuJrtqFDbZr/Q99kwb2yfvXT1ntX+3P/KxrL0b
whBPY8fn5p7xPnQQeCi8FL4KVoMXrHkOjxZJvytVKz/kw61o0yFPY8/as3LH
KPxhnvRyZ97oJiWwpKoR4HWPieq06/aX00MstcEOnb8vPPV0DJrihTnXuTIl
/AT8D8XzQHxm+wQ1xX3ZeKy5xmJ3kk2xqa4u70nrHvseMgE4JB3S546kkHI8
rOyTu3ftHuZefs77v7V/w2CHyMdeto1VFWbcdsPOiodKrq/juWDwYz98fAGO
v3H3W6t13fnNa1eu6QMzmsg+f9dXb6rG9auff0Ml+8K7bGxvbG7wD2rSgyVd
9JKNqHtYAus4F36NOMdtz9/P3vrqldpkbeN64TnYp3z/OPQRdA7uC9+B/6Tc
z/dOH5sHb1SS7gG2N/USVP4e3wVHeHc29gG/CBiEnUA4A6XuEZvjYW2u8Ks2
e1f4wf38vPlso8iGy/O9hnesreaQ02PK6xl1Nik+f+rH36vwgZjMl9xyeHBt
33H3e1fu4f2uQ+MHYw29f8Z/7F2/W82HedXNm3Vpo5dsNL9HbH/h4/Lrwmfk
eLQ9g5xfnxuSa5cAM7BnsHfJUeb/8C3V4m4rp871sbpjh+xWqTIBOqhiqcEL
YixVq4yYTOUPygeS+j6RHXycbognpBJ7/oLdFwX1U/YLz9poGOJj95t0EPDl
uss+WvEFbDZ1vBP94vQvn1fJjCny5kt3/eLK/UrUrsyh+969eWHHH8M5jyeb
9v5yNU/mW7ce6C5/+fBd1fo14bTNp4Q2ou7BefA1EcXzsQO/ZOerWstw77j1
hHVxvbnx/fAHxqLYbvWSa5tjYnsWzvFY+WTzBHP9WtgkwQnkAeQCcAOssL53
3g2fpcRdKK/dx+l20TvADitX4IuFj+qM8DewbyNhiO91wVxCfhD4HXFH2GVC
PMFiBjH7YEabNbZj+e71fz4ofjx4w3Ur+NHGxlLxtrvfu/jck3ui68Tn7GN6
LYZwhPX3PTc21J5aGyvnwNqLOdOcF82J+XGe2uohrPNpXzhjeT/FZOXwHfg9
46zi6p6Jr2oT02VJeYXca7ZjpZPtY96lpwfvFLkghP/cFzxosotJF+3qL1/Z
q2vyn5Un6EnHOVddCXtWNpoe4mOxsLUIQ5gfGFnn0wAzOMttMMOTxXtipCx/
r/Jsjjisos8e9frFjjccVfXlJm/zmrPOqHJIkO1Zf37yfz7fcdLxT9Pa97mu
is0K+OVtjh66Vde5sG+OuXNzhSUxvJVOIhxh3Tey7uGxA8J+x7wgzk1JDOFc
6368P2wZKbWOVNsCHsGeK1nrV/Wx5tom6cS7QH/os6cH+in2STCq7nvoLLZ/
ID+7YsdKTb1Hv7Qio6sng/WxbCQM8T0K+f36M05f8Rt5Yo6c3RQbT+o6w0fA
IjsOzjV+TsX98pniudoS13Mf7rfM63C1Lvk/42m7b0LzQ/+N6SSqgw7v3ai6
h2xWvh6W1bE4K5wfjyFdzqc9dynyJXyEvc135Tsh7wO/eQnexT2wwajG4ti8
eeqkGlesWSzXowShG/KOee91e8P6PLr4y7HH4x+w+YbIi6HeSyE9ZCPZsi6+
/9LGfc4a3PT4LZVMXQovjrn87YvzPvehSgafmqzGeBgX42OcpfAEH5zFyTri
vYy9N1KIfY78aPGxih0I1A/j/FgM4Xv0fGm7tqynlRVVJyvE12WX4EzbnA7s
XiVrtCrnYM4JaT5jrJFiqPrco7x/9iiyQixum7FIV+jiL2cvUwvJYgd7s64e
UghDNkJOCGefelN177mErgH/3XTjaxdn33ZOxZfB4ra5IUOT9Bb4/pW3X1XJ
JPh/u+AJ8gnrWjd/1mrqMkgIO9AZ6/KJwBCrZ8FHkNXa+pxsrUXFsngeoXpJ
0lH6rsNoa/TO8Vhhsj7zUvUN6wh9EHzwOqqVLdrkl8eww8aap9TS22h6COOi
nmBMRrI1idusIzxy8ydPqOpUwHtz8YJzR94F9LHHrlqc9pkzq9owrzv1dYvD
Nx9e1culXzk5/8yF/h2+95Q+o0YT9dlf8GsvqGozcu3JO05ZnPfFDwVzeprw
5O/+8R+qPYJ+cuQlx3RaJ9Y5Nn9koqnWNAj5O7zNKkbUFLbXsZZgSNs19L4Q
+IHVKSR/dvWRpxJ+XPYVz5x96euJfYKeCHY05ZCXIvRCH5/NvvA+D/ZSW7nw
t855Q/WMlT7oGb2WNgKGMJaU/jfoC23kavQZdAzWsAkvGEPlU3pg90odd4gc
i2q8azoc/L8vmdHb7/ae+HtVvRPG1bRG0k3wpRCXSjxvLpawZk1rBM5PbQ+F
bFapZwX9xNall/+iS1yvMER5IX3a01NIOSWzDrKebD/aoXqZY6dkT1g+onoD
Ns+jiyxo/cbc65GrLsiu7TFlDOFdeZlRc33ioftWPkvFYfgffU5SMIO/09eP
WBzqY9k6hD5vDjlyiDWxcV+sC/XkGY/qPj554/bqnRIT1sQHFMd88p7TqnVJ
WT8rO0PEuobWkLUhnmPsfRTDjq9f8P6ss8J3OV8WQ7rkhmBj9XkhqTnkffEr
5bbNOsjqPlZt9qZ4h77fj+oiamyhXh6p2MHZtPyBWMq2daHgN8QursOQkfwh
nHlsIaEYoG9s/0gVz0o9KJ/3XFdbmzyuvfff1ph/jmwu/aKubi352eSY6Fqu
67sXOve3eSdVjcbIOxeegHvgH/pJHVayfmCqarTE1tHzYdXm+tZVV6y799jx
fcIOH2eFLtHmrDy9ns/WamF+XWKyrC2QcbWps1iSbF767Et/mobymTeR7FYl
fB7YXm2crnI82mCH9RPanDt+cvaGxBDOe2zv8tmB49600ucH243lDT7vEpka
m39d/jnzhA8/fvsnKtk9pwYUuom9T998kvtb/s3zU8fL9x6+9o8q/sd863Ir
wSjijLxOwlra7z54+mmrefEnbgneFzlnaJtWHXY8duCK1ufE54Z0icnyvpCU
mN4+CVvJXBtrlecoXrd0L7AcUn2SrnkeXCOfh85FyZ4Y0kOsjs4ZxJ4/xHkP
1ZGobM1rfCrWH87WxWLc+EHgez4H3xOYAh+Ap/7giXb1GMEcrRU/8XX3uUbc
f6Vn7drz24yb+X7z0+dX46/DVtavstHccni1riHdw78PPgNH/D2l0w7hXw9h
B3Npq3eEMMTXhO7iT/cxvUPE98RINVzn2ljP5gpCY/Ui9vVJusTqgh22Dkmu
vzxVD8Ef4jGkL9mR+6KboU95niNbVW0tj9NX43lZ59i+R64GM57cd1FrzLBE
nUGLH7/5h7/Z61468sQjV55Xouc5egnrgS5TlzNo9d1qnZ3u4Yn3FrJp9e0X
UZxVKZtVjHxMFjJdW18ItlU7Vl9rd2hSTiHjGJuHj0VW9xgrtkHxVpbnd7Fb
hfzlXXTxGKGHBG1Zhc98zM/RpHNY2vXKlzXucWz/2G1K9y6E79qxn7rt1F73
05mXP2tT4P3z/NKyA+vUVPsdSq05fNcJ7wm+3z78IqX9HXUU86e3Pdu259TY
dixsNeggz+WcQvqjgB34zdmr6IRDY7qPt2rbz0M+j1Bdq9LYYXlJyJZV6syH
Yqt4FjJrah1BZFzql4TeP/dCps71aeQQeTaW11JnsE89l/tbHpyS59OWN1Y8
d//6muYi1p36XqnvCl3Svx/2Uyl7Vt82q9g6eX96F1+It2MNHY/FmQQ7VFNc
OYVj8/KhydZnF4bgP4eXsz5D4Ih6CVq71W/veltr7LBxW31jh0j+EH/mu/jU
5SP3Nibu3WQTsXTL1rNr7bP0ge1DN7NEjJP1v/B7X74icMk+C79F3z3NIdYx
tsas/41/euXissN+vlFXjPlFVFOo657yNqu+scNiSClfSCgeawi7u/oPcbZl
uwK/nquxWKqvy3qAG+obz2fSR/rGEemAXevq4vOw+YaxuuV9Ygg1HkpgiOxV
nu9XfaePe1MSbly4ebVWS4zIDxlifdbFYL22H7s+uLQSe0W+YM9zQ287sGd3
I++Av6CPpLw/+rz799/FnsU+5Gz7/TQEdoiCvpCWNXRsPFbfeYVW36Ben3BD
2KHPnkt+EOE2OMHaoAMyf+kirEnfdi1iuG3OdBe7lY3bks9jKOywMhb+EOu7
zcWQUHwV98Gukapz7L94ezQ+lBy4r3xvVVfqy75jiRgm+8xD33ZoL2edtbaY
iQ7a99zo2+h9CeTr0+s1FF9175WXJ/eA93rNck9lYIhsVmNiB4SeW9IXYvMK
m3prt8UNcAmdDX4ozBBuiC+qRwhjeK7oIFb3sLof66FckBiOlNIVGQOyg84F
PSdK2K265Ah2Je8PyTnv2Li9bVr2qhQfecxWxWebL317VSdKuXv2GcSR9Y4f
uz86SAwWNbDsc/Dr9D031s+uN/uR9w2x7jEs532lYEgoX0T2n6Z9xd+xLdj3
zb2Gxg6R74fCOrS1Y9l+U5z/Uv0+ZKcCN6RrwKcg1b/yPQ3hjc8VP0hKvofq
pgtDpKeVwhH0HYvXbe1W8CFbY7FknkdbivpDImcdmXnLKVvWyS6p9ipkWWTa
UP2Scz51bvC5Vh4dQgchBsryMGKk+sCPN5/25pV5kVfe97v2uodf7+r9Xv37
63QR/p+iiyA7sA9CGILvMPR+eSZ1Kf2eGhM7LIb4OottYnp9r5CuOSHWvwG/
E2YIN8DhGN9T3vNzwQ8iO1VTrnnIXyTi/21xRLV1rc+8lN2qdJ5HW6p6iph9
xNhY73W8JeInJ74qRefAnh7ar0115r2dp28/AfhkeQb7pw/82H7l9uUzeN53
9v5Jr/Pyugc4EV3ztXfNe/HvinGm6CKh+idLv7rbV9SbniJ2iKirVcKORe8a
myPcxpfO9+Fj8DmwgvgL7lXVcnimD24Kn1N994PZD8KaoGPl5HsIR+DV0kW6
4Aj3Yq271NZlr73r7Het5Gv1kbvQhSosq8GQGHZg807ROUJ+Dp5BDfOU+CbL
y/rWQYiBIhZKz6PnS+kYLGxz7E89g+f1OSfu7WOZUuxJIV0kxy/iY3y5tqp7
8oy8wM8pYwdU0o7lfempNTQsbiDL/pcf/Odq3XSm0Cdy/PKqi3Uw97nFptel
zhXraeOe5UsSjsR6nYvUy9z2hGobb2XzDdl/Uzkb9oyEMIT1o8cFZ977ycGO
Jr0DHvOVNTnU8yDWIydPgO+u1Pn42sO9rgf1pFZ4beEYLPAIHqBn8Lw+Y3dt
zz3WseJ/iWMN6SLc4+E/uzrJnsU+8T4Nzjb+Hy//Cjv6jtNucz6s7NTFjuV7
TdX50j1u+LhixXO10WPgh8gwB2NdLPaR/OZd4t2UL87625gErV0MR2J55iXs
VujDY5+HII+578p1GBKi1LyOkL2qij2g1kWLWGGvg6T0CWpLtp4ezwJDS+IH
PHmo2Cuve7TpSwne4Z8K6SIpcb7sl6b47DHirHKIsdl5t63T6/PSQ/wtFTe6
xJlKB+E+B1tdLNZMuR4lYnGFB9zPxygIR44++ugljvBMm+vPfmmjr/p4q6nZ
rTyF9BDP/4mxadI5brrg/HX2qlydw5PXQZCpQ/3gS5CPwaJOVUn88LFXbesm
Js3FxUe0rTcA5hCjFcr1uPfi7Y16iK+t7O8xZezQ2bB2rC55hVpD7uHjeRUP
5HGDa0r2v+WZ8D54oo+Z3uhErRJ0j7NOPrnouQUXWH+PI5BwhBhp9RrUeMgj
baN72DzBKdqtYuckVkPkm9df12izCvk6SvVi9zpIX7kz1PC1vK50HSxiryx+
ULexj3mEdI+uY+c9huxZTT4R9g29qUL7CmzpSxYofTYsfsIj2ugg9AnSPYQJ
qunt64Va3Cid1wZ/lR8kVmtzoxH1h5TX0VfvFeEIz7AYAim/pktt9lB9qzHy
BNueEZ//a/cy+cYhDFFsrs8JwQdbqueIt/v0FQNt9Q+IOlUl95+vm1ii7m5w
Hk73KFabau19Yof077rOJ0Jcb0yv5cxtBNkK4hxr3PBcYkDayJY2npf542e1
uKHeZ/CivupqICsrT8TaSTYyKWaXOfWxZiEcsTHUrKNdS/pT5+KHenroHkPV
tyqBHfDKOllEfZ88dsA7vJ8Ue0fpmqxe9u0Dl5HbbQwWcZKlclGJvbJ1E1nP
PmKv+tA9VjDkmZzDUP0ravRaveP2t6zP77BU9Qy/+7Mb5oxY/1hbX/oXnjoQ
XA/Wj/1GfO8Qdf3kG8Z+Pzbv70rKM0L+HbJWpWKtFKtl9zrxm8gYqRjC92xN
qL59vaWImJfbbti5Tgb63JN71tm8WR94guzaoRhMcsL66Anh/SB91A8jFsrH
YJWK4eU+7Cndu4/YK9UWsO+xr76TvA98W35/YANVPmFof7Cv/HvcKBhiczFz
c0L4Hn0f/Zrwf3QQ+NCQPW+VTwjfTanzP2XqGrPblWydktC7TcERdA9fo2Ts
/Z5Ce2++ZB120AeH+dJDO4Qh1OLzn3f1k6fQEDoIPdP74L/EAvddk8XWboL6
1uVVe8RjBGcp5G/ftPeXq32FX9HnpSDDbAQMsXXeOQvkeKXgRizWCZkC7BiD
76lm1kb2o7OvwEJsV2P0WgHzbawt9QVjMRAxHOEz6zsZurZuW6r0I5f7Qc0e
O8cQhngq5Sdv5Fev6t8PwprY9SgVw2tjr6DSsVe+/nhJv0cdoVeFctb9GScP
2/uSPYbcfMO08j9i62zPA3JTiCe8+NpNQX1D+1Y1/FVbEZ/E0LxPPW43sh8d
vqza7F5/w5bFuvZZO9/XSETv3rfpkMqWG4qJCOkjXvdARhl7nzcRdnJf2yKU
68I86XcSwxBquPbVwzRE5COsPP/KsvUHbS9bqFQML3XQSvestWTlYmH6UO+E
988+iGEH+8fzWP5v6wvqfG0Em69da+Wla351+gafEfMs/mJ54Bg6CPb7je5H
x38Ddvj1AzeEK+gH6Cil7YPcz+Z78NPGGOEf3nHS8etiJKSPUMuIuoL4Tmye
+dRjEjmjtjc6VFcfks9j/IE64EPiR9+xWH3VUeyzZ62Xibvke7R6J2t6IXX3
Y/JF3b6ytT0g9uXUMcTrevCoU7eeWvmDQvpGhRvbtq2LUVOsRl/13VMI3rpR
/eiqrRbSPfi/YgSw0ynnhe8zVx+j0CZmwed7xPKrwZTbtn04WH9Wtcx0bqce
r8vex1/p8bDOv7P5zuOjcTR8js98yD2Pv8yOoaS+h15m1wbZoOt4fexV6Z61
o+oekTq6dm/Jn5YSk1SdoS/eMXkMsfG8MVKOZSx3ipzcJe+J5KSXJm/LIW9R
dXlt7OFGIGu7Cs2VueEXgcerVrtqWclfAs5A/J91SF1H5ZqrHhH7PKW+KDjC
OvN9H8OIL2zqugd8zGMHPo7Y2ab/WlNtE+4xhK19ybN61EF8HUV6NnaNwfKx
V8S7lIq9GlP3YF512OExpG6P3f2jB1fwdeoxWZxzWxt1HW4E9I0Q2XwzeFwf
sbu2nhPP8H9TDwz+NjYm5JBy+WJ+c9VRV26f8jbUC0U9P/gb7zKn5jY1MLlW
dqem+hw+7+Hz55270sdae4DP8ANOUX66e+f5K2e9ytVY0y3qYkc++eA1K3Ok
fgixu96+C3YPiSHeZ1tSByndy5br++pZO5buAUaBHaE4K2J4fc4538MPEttr
P3vrq1fWiN9L+7ZKEOcabIvaqTJ6N6pGmK5Hnk6tzZtC2GnEP5XnBo/0Ogj5
6Krlu1H86Mh4sl3VxR6AGeCF7yGMzsH1qmmvteGzphwS5X3A65HXqt4uCb0s
LF122M+vi38XcU/0GuJcp4Ij1KbyPjLiKOts0x+/e0dQzle9rDExxOsgJevE
2HpHJXrZcn0fdRNDusdQ6x/DDtWzgmz9X+2fJjupf6dTOT+Mo4rJr9G14Cd7
jtiUxUcg6zvFJtIlXgheKr6qvGjOZV0PC3jpRvOjyx6FLbtpTcAD7FPMzftJ
WBPVAbB941mLWO0Y7gfu6L2l1JX1dOHm45Z2jqq+7hOPrjtPU9FHlF9uz2Zd
XWHOOLlR9vvYXKzNXhji5RXmTG+g0r0zQuRjsUrpIL6OCXWruoyTGC57v1I9
a8fSPY44/ohgbqCfVwhDkEnqMMTHZOFPH9OOVYcbzBm7pK3NTrxNLi+xPeTh
+egNOe8DHqf+R7a+n2w7KTYx2f83Ql131l2+jdS4NdUb8fqX9Ahwm3VCF7P1
rbjG94z0vQVz3ze6CrYv4QXnFn6J7GdzSURLfWRN7x0DR8jNsny+rh+W4g/t
92O1NuowZAifOjqIfXYpedXXUewag0UdRrsXSvSsDfo9es7Bidms6uJG8BP4
HjLUQK/LubP+dPlChj4zrK+vSWHngLxKTPaLfudFiytu+MQK/8+xX4mfaL8h
p5ETnqKDSNeQ/QWexk94YW4dD9mw4LNTr+vOPHNrJbKe6CqsjzAHvFCfQI+x
rJ/W1v5N+YLaF3/16Z2tdA/ZvriHP7cxHBEvRp4ZSqaC7//dP/7Dyvltkv+8
HfoHT8Rz6al/ErJlcd0QtpQ+dBB6yto1QHcjhqrN+EKxVyV61g6te9T5O5pq
sPN3X3OR95bqCxnSjgXecT5DZ5cxwW/IBbX7weaGct3F7033pYq+e/2fL7Q2
dTZ9+Jdqidu6fTm6Rojgl7JzTd2GJezgZ+4cZcdifdHZpGPErvHr6WN273n1
K7NlBZtrjuwRe7ZwJOSTQs7oWx/hTP/lw6t1WZrsVj6HOZUfY7so3fsjia+5
nPQSuf9grq0J1KWXLdfZOAtvB2zL47xM36fuoRjdNtihfehrq3BtXUyWrXUO
9Z0XIn0jhBvqyRnby2CJjcWqegxl+lOpb63r2S8+pkj9QYQZPE+ydFNP1VSS
DYsajmNjRIx4P/Bw8CM31oA1kh1LfeA5j6lx02AJa6OYXWrYZeseR/3qyl5B
9mh6LvuO/ef5K//nXn310PE1dZtyBH2sVa6eFLJlDeFTL62DEFv7xEP3rfC6
tjFYodirrrG7Q+oeXbHD8mcblwA1+dNtbiE8nL3UB27U+cXVL6opJhqfn71m
xxoe5PIWjUGxvBYTwAh4hXrseZt8CbJxWFO1YanWZFPcVR2GgBvq/QRWp+ps
rDnP1drkxOyKLt967vJ6np1j16jDEe6FjFYKR3xtK55Rhx3YpH2MUO5Ymvwh
fcnI3Nfb3Lrm4fhetilyQoiwj5eMvQrqHj3le8Swo8qfbxED4GugQ/jT6/Rh
n6tUSgfB7hqLwxUGVD1sEteWtbJjvWPnp7J5i43lhb9ZjFDuQp856orDQsae
qg0L/qmaJF3mia4Fz8XXlHod+GpjdnPf7+ePOGzF9lXV3sw9k2v7EVmF9+P5
rHrHdO13C4/58gM3rdwbv0aqz6NLLGwstneJIT3xOq+DdK1/TH1Dez98pW3G
ZeteQV3rJnoZvi/do87f0aXGgsc/fv/Arj8ezI7F/qz005p8eXpktdmnXKf7
cI5zY3m9Hx0+3hdWxEg2LF9XeQqkWruhele5JJ0jVfeQ31wxt0/t35eNH/jF
bH+PLjGq7E/2W5380xZHrI4ENdmtvM+j6oXegcc16iE9YEhpPwgxUiVisHzs
VZe6iUP5PbjncWcfF42z6qoje386zyEHPbY/vR2LeMI2e7LOTsUYcvSNEMEP
bI1Mcoxzecy3rrpieX2fvVhjpJq88OlY3/qxCN6tPlFD1yvG12LrHN6TaZ8k
Js/qHqXkPvUELYUjT9dGfNY/UxdvpRxB+7yuuo/ldXX5IX1giM9J76KDECNV
opetjb3qih9e96himAqvofSOUH5HKftqyBdSlxfC523zCpv0DeZV6RuFcNjq
wZWPOzOWl3gee33JfPQUkg0LWVt+4qkQ/Bf7FbpRnzXZPakOimxXvs5uCuEP
s/mCL/i1FxQ/tyVwBJuu5dl1div2uvftlvTjcy9qUIT8PdS8Ly07+5z0Ln4Q
H4OV6+sS2dgr+F7b2CvWcgjdI+bvKB3j4XMLeQZ5R6l5hdhni+BGYTkGvmDf
d5t8wr//9hMLnXlsWEPySggbFr7lUE+9MUn1rnJ8FiUIXcf6rb+x/SPZ7/S6
y57NSb7pnlta5wOk8ED2dSz+gT0Vy2f3PvO6urrYC3z+WR8xYDEMWeohhXlg
KT+I72XL+HPtlbxLu8bIH21jr4bQPcgr7xpnlUNgu8f7OjuWHRvfDZ0B4Ubs
/PSFGyL4AvxBzyOGPVcHUT46awMfH9pWA2ahgxCnNDZmWH6h3PA+Ys/qSHki
eie5OR/4za1NCNm57zELR0K5I6qXcsvWZ891xaddPa662ojUJ7Hf7bPn1ZD+
kJAO0pb32TqKbWpL+Z613K8Eny0dcwWGg+Wh9wP295nr6mOR6+KxqBNt14Hc
Jrv/k3BjgD6Z8Ac9Fx02N5YXvNH16K9D1HW3ZGu6TyWOVznn2K6G9Amh+4Gn
sj21yfnAby5bRhs5tNPZrtFHOEuMC3mFmqf2O9SAiJ3Dl+x8Va92q1YYUvBc
l9JBbAxWmxhe37O2bexun7qHYnRtjQLt8770Dr8vvB0rZnP1vnTGSE0KemzE
7FTV/QbCDbum2uc8H9tFFxtW15qKTRTSb6ZWT7FE3G7btcGep/f52NZzst6j
al2JD9Tlm/e9J2P6SOjMUAMiJU8wZgfoi0J56qUxxOeDtLXNda2jyPftPNvm
TKzTPQrywhK5gV3J61d1dlfvS48RcyCeYsg+jJZsLAe2C2wYOXxHuSB927DQ
bZDpfb0s1WKcQi46a4Dvg3UYWhfjebI9tbFdkW8uHyjXv/zXXz7KfhTBO7zf
21Ndz1BfG7FrnkQbGiIuy+sgbWR/38uWfsU5Y/A9a9vUTexT98AeF8OOofug
eTtWnS/9sR8+Ht37qq01Fm6IDvnXhyzH2MaGBZ/S3uvThoVcT5yV+ivpc8Xx
TqGeIuMDx0LxzIwPOxs+CsZfUk+T7YoecowDnTBXjySXQrYvfA59+c1zqUkf
Qe/1fUNDPsgxamPHbFnYUDZf+vYy63PYeh0klyf6GKzcOorEi9u1zq2bGPIv
l9I9wA7vL+sjzipnT/i9aX3p7N2X7vrFSncO6R9TwQ0R+wR+obFN2YalGow2
VnhKPUFUHxI9yY8dPQm9RD1pGS/xWfhwuvZyZA14pmyjuX0+8GMxLvEhcsHG
3peWOCusV50shj+Sc6gaJfbvY/Zqr/OHlKqXZfOBoVwdhFgp23c2p46i71mL
DJIbu+trfZTQPcAfMDoWoztm/2Web8dEXjp795g7Ny/QqevsVhfff+mgPo4U
oj6FxtfGhoWtXe8mZMMqwSMhdBtkbF+zEfxQf9cx8UNxu6Gcc/U+4W/gh2oj
qteH+kCxdrl+d8VdLXMGM21X6JzKGekj56MExXoget7APHwtoSn0l+6zbm8J
P8gjX7xj5frUOoo+H564jZzYXXxSpXUP+cpD+Tgla6+1JZ5vY6ZzCBl17LO4
br1N/F1lw3rnW7NtWBZ/fC4h8kmop14uwXu5l+fPqmVyyimnjIYf8n2k1NtF
PwMnwEPpJRZPmA/2KOFJyrqI///D9/5jK9uV7Bfg0FRsVyJ4rI07Qb+65/W/
tPj6JRc1+hjpYT42dli5M8TT6NvXdY266iDwcbuXU3vZYv/uEntlcQtiHp14
WU0d3VL9EEsQvbua+Ak9e+Cttm/fUP1mcgh+YfMG2tiw4FvCH1sPC3+3+pE0
jUM52zGeyd/BJ69/TKGWSZ3vI4XUB4o52v600q3kO+He1j6ovuni/9SVyXlv
1D7jeVq3NrUS+yYbG1HVtzY59djeiGuMvXfkjbF5haiu1gk5bV35ZhcdhBgs
O6bUGKwusVde9yiR7xHSO0rUOitJzNvjph0rZ9jm4u3btIrRQ8d2ppC1YSHL
5tpAbF8p5GfxUNVYT5mz+oXAK0P9v+EF8FL/N9tTaqxaJnW+j1wCE4QnrKV6
1Fb9WtbmaW2BfI810Zm5792bs97bZ496/Urc1thxV+v44ho/sb7dWE49OBjz
fz3dh/NA535GJTHE4x1nBHt9F9tNFx2EHJA2dRS7xF55HtrV7xHKK5+Cv0PE
/mMf1sm46Mt1/FV7ZWo6CHxD42uVS3jcm5bXw4+Ue43MHOoTEiJwCx7AT/Jl
0Cu4HvlT/JPc7tC18FX17BsDP/rK+2DNwAtwWHmJ9u+skeX/yCpZvo8/eN/S
NsR9pma7Yn72vMVqJOCza8oZqWKTHv3SJHAk5A/h/yk9fGIUisVKzXlhTXwv
25Q4GF83MTX2Kuj3aDvvZ3zlU/V3MFf2XYptJFYL3fbtg8aoeV5HXeOwbBwv
OoBsTOgK6qlVZ9dBjoaPCQO4h+Kt1LvV260sjV3PXfXa68ZYmhS3a/sM5tRL
5Ls3/umzsZOnbp1W3BXzs37zulr0+y/evvLeiVOJxbJUfG5NNh8ynzBEMX9I
pYe05KVtdRB83orfhpDhmmKwGKONvcrpWVsq5qqpf8eYegfPrtM34He7vnrT
yt/vvfLy6Fm174drpxLDK7I1/JFFc2VZxfHyLpHHdV/lbsDrQnFYfAbvl+2K
z+DDyNv8P6UflXwgY/jQq9oBI9RrZ03Q06Q/5NZLRNaxukvb3nN9ETqx5a/o
uEHdd00nsfyD3Hl4H+cLeb6u5gN8bCx9JOYPWWJIC1uWr2WYkw9iY4JSYrDa
xl6VjLmK1dEdEzt4Lra5OtyQjMA+Zb/atYjp2LZvH/ceOke5ieAfGh9YR05y
Dj+ycbxW3wAfiLtFpsG+o3hexbSiW8DHfG5gDnEfngkfH9qHzlp18Z23JdbR
xu3iy8h5X1cfd+zStwC+T02eYa/YcxXTrW7b9uGV9+19OCk4gpw4Br/BtgKv
C/nU22KI10GwnaSMJbeXrY+9Sq2bWEr3wAcwJZsV+4e5xfhP7J1avgsRDxI7
s3a+6OZTsjdzzpTDzDixjefwI+sDwRZm688il3N+4bXYpBRbJBuV9bm3IdsP
xOp5Q1BJ33kOyffBfq3jrzHCRqn9iAw0pb0Ib7B+c2IYY3q9/V5d7jyyHue3
DkeQG4fGkUpeDWBIW1tWSAdJsdX5GKymXrbEHdvvp/Ss9boH42yDkewP37dh
rLzyJtxgv52845ToPNmvtu41axI7sz6Wd0rxLsxDuhRrcWDP7jz8WNO7dAbU
g8/eH90CmxT8FpxizdA90MNK5KzDw6GhfejynQ/p0/K+j9w+tbte+XSfQe15
+niOvf8sWb95tRcjOj3xKvbcUluq6d6c4xS71pA4EstT5/9tai6GdJAmvkpO
Qk4Mlu9ZmxJ7ZWvQQvDVnHmBjaG88qFrIQoL6/wbjJF9lpLLb2uhVzJppIYE
58A+b+geQ00EH9HYsDfl9kaXD4T3aX0gIf5XeuzqBzKkDyQnb7AkKe9DPDC3
3q5yzjWPFx79wtH3nt0bvEeNrQ4bv7H/1hV5LIfPyq4Vq5s2hp+9VN1evut1
kKYcCN8Lva4OFu/oytuvWrk/dRib+G0X3YP3FerfMbSvXPkbdbhR9RjPnJt9
X+BsbM9zHvS9qcVMWptmmzjemA9kCLJ5hEPhB3oWPv6hfefEq/FM7bnsmiUn
Hb+0+xBDM6WaOujkVje478QtwTkg29gz1yWGh/PeZNcaCkd8PXXxyFxbltdB
eN918nn1N7MG2AhisjOfW/mD8TXFIXjdgzXPeU/ItiHsoPfTENjB+2/yb1Tx
1y3Pkq2lzDNidaSsn2BqcS/sT+0L3s3OM0/Ps2FF8kCGoDF86NjK0APg5UP2
72WuPFvzzHlH0JR9H1tO2bKcV108yr73/7uVd9y1bhfnHntKnT4yFI6E9BDV
7U3lTyE/SF0tyR888ZkVHl/pc5EYLD6342vqWdtV9zh88+HR3MC+bVYpuJGr
b4SI/Wuf8ZVILQl8fit2xkC9vbGohA/E7qkh8yGw6WDTxxc/lA+dZ6n+4VDz
BKfASNW8yq3Xzjuyvo8mP+nQ+8/arur6KNp405K92pt6sw+FIyVie8FDez34
8MO/vj74vL//u9sWD//Z1St4gz0idF8fe4VNhetTdY9Uv4fyO0L6WN82qya/
OGOo/OKF4hZ9T3F0wZjsNGUbVhcfCNho80CGxEb4qmpHDeVDl+4xhu9cGEmd
tRz84H3aXlFT0n+97SrmR0S3t+e6j17tKThC36O+eFgJn3pIB6nzUxCPYJ8V
szFhp7Hfu3fbtqj9qovugb9jaL2D98l7jdUzYDxVr9ge4t2tH72S32M5TxO2
YeFL7eIDof6X5kVMa4na7amkfoTUhBoCP+SHgJ9jq8MH0vd88Smh7+hc5da8
Iu9D2FP5PiaU92FtV3VxV7aHAt/r0//f1MOq6pnUU7yWMCQkf4MhKeMP6SAx
3uvx49a/uSN4T/Km7fe4Lla7pK3uQT2rWC3EPrCjCTf4vC/cEGHDsnhJfEjs
HNuxTcmG5fNAcn0g8DPNCztJn35l1YfiGfBv4oN5JnazvrFDOaDqCQWBl+SE
g2OqwS5c8bVz2xL345niKdm+8z943/KMXHjdRZPRfRmH7WVXZ7uyPKmk7arp
XDThCPynNG+r00NS6vbm+EEU/yLiOurAgBdXP3JN9fNzT+5ZpxNw3TevOnPd
/dBJcnPNFaM7VG6gcKPOTjVUz7/qDNx/23IcyO8bzYblfSAP3nBdFn/y/UBK
+NAtTuA7hi/Dn+HT8G3bQ2OoGF72lWKveL4l5aKIhC/oDWCcakOiv+TiivWd
Qznvxte86sPu05Z8zuCYtqs6aurNLrtWSf9IHYak9A/BDuWv4774Qr756fOf
lunX+FEsBq2JwBPyzx87cEV1T903N+ZK/o4hYnST9Y2BYxOx2dm9FLNhEZdo
xzqlXELrA2lTC0vnO8eHLh4KRsBXke3hz2AEcr0wAnxAxyB/39Y2t8Q1fcdg
kbsn/4d6l1gssT2hYiRs4VrupXpf1hbmsUX9onRuc96Lr3M+JbspuGjPckyv
Iu5K77aypSf2yitNQ+NIHYY01fP2OggEXnxn919U9yt1VrgPGMR9fV+WquZf
DS9WfkfI31Gy91MKblT6xkgx7dZ/AEXjsNZ4sl2jKfXusfXc4ZO5PW0lx8R6
oiNzW11CffjUA8TW9Wwi4Yn4Mb/Dz60s2wcxTuEac1LfDs1J/aBC+lET2V6E
PEO4oh64OmOc0yzblcsbnJLOyz7Ruanro/jEQ/ctx4+uP/Yc5B+ps3+UsmvF
ai6y55sw5IJ7t/V6HpoIm1TdGtbVQiyFv3W4wbPGxA17FlQLHSIeKWbDsjwO
PjFkDkHTHKyMl+tDh6/pnahGCTGn8FP2OrwXH0sVN762BuAMz5EsVCcPsbbc
Az+D+vKpJqNisOC7lk/2QcKrprpX1j9jcYVrLZ5Id4o9T/1RbGwA68hc6TkM
xsf2mYj+Kdpz5BOMzXuX/GNN9rR6UayPInO0NpaUeiWDzSFRH+lqg4npIXUY
go522hfOqD0PqqP2hacOLE7/8nmLY+7cvPjZW1+9eMkthy+et+cVS/rpXYcu
Nu395erv533xQ9X3U3SY6Ngi/cqFHV1xtwk3hvRvpJKvDROT34m9tPwhpVbK
EARfgb9o/PTIruNL8C3miE3um9dft8ILmBc4AT7U7TH+xnfgD+g86CDK58Cf
of6tTTntwiibR9AHCQPaxj6AdcwFXJGtDkwEHxg/68Y6wO/r1k42A74rjKEf
xvVnnF71nbF2IMas++AX7ZpzV4rQd60sFYspI3bMrkMsP2FMEo70qY80xvYa
XtikH7G3tj/ysQoTLE7kEtdznzr89P4E9X6K6R1d12gj6BshsjV5q5izSA2G
qfpA4CvwF40NOVljhicxbmRE9XqCf+XYUYUV4IpwAjkenICfwlfbxsGqXyG8
vU/8UOxV6Tr8zNviCnoba8OcWG8bo5SyxrbuscV17ofvGXsr/GZMXSTV9/GV
Z2LDoanVXfHEmjbhyNeu/3hrHlmHIcoxZAwXXnthcAzsi5PuO60TZsSI+4by
ZhgH46nG9kwdy9D4u8TobmTcWO6dV6325kImD50H27ePn8S/jzVm+Af7DZkO
vvKV7z28HL/XIdr429ivqnXOPG0fkJLzwEY0RAwvPG/ouongidWrsF8xV+kp
ub5Qvs912ATRe9CByEdHjsHegD7ct02VfQfmN/k+0HFtzvnU6q7EKBVH2ti1
6jBk5zevDcZT8be+cCOEIyE+Dh9hfCGbVVtfOWvBOtble4JdU+sdHjsTtq9U
nQ9E+doQ9oW+zyv3r/qzrWEcetKbT3tz5bskngk+1GRnCr0XybrwIniaz/8e
so7JEPih3A947pA1vpiTfGusN7ZondUXX7tp8dJdv7h44+41neUzZy4++eA1
1XdTbId+blV85xrvQW6QjY59wn5h35TEFe5l/T6xfHpixyy/mVrN+SZqwhHe
URv/SMynHqJzHvzgyp4Zgngez23af2195QcTbliyMbCpPhDOeykfyBInDnsW
J5Dz4HnoRm10CfEW4cSF+y5bbL7z+MWmG1+7si/xuY1V44sYKPgRz+wrhpf5
ay2HqjHM+2ROyu1EP2ziBfxd3wEHusQUWDmB/cPckTuEK231FXQdW68sZuv1
vo8pxR7nEPgbsykJR3LtWsKQOh1nKJ0jRu+49YTa8eXarFJxY0p+8Rxif1vb
VKoPJNcn6HUJeAxnG17Rxd7kafuV26s9gIybIsNYfyh8Zqh1h5+DH/D32N7q
SvBP5X4MNS/sfMxJ60rcS875xY9i+TT9gsgP5gwi99ILh3m1sYNpj0lnkS1s
qbO89vlRuQhbqX1WzPdh+9R26Zk9FarzTWiOOTgChmAnD70bZLwxsUOyTAxD
vnv9nyfrXcm4cRDsD6tTxmISbb42c8en5O8lXQIZb4kTl59Z+VI58zq/bc68
9Alsy9QV5d3AV+Av9vvwrhzdlzoHurZLb/M2fFY5IOrPV5qwz3H/Ievuqn+j
bNrEuuScX4s9VY6Xq1dE/W1y3aiv98DNF67girVrdtljypnZ8kdbFkeddFR1
xv/trtU+FbE+vOxNfQcc3Ai+j1Q+0YQjKbFIFf91/o67f/RgFYM7NnZYYjyM
y46TvdWUZ3mw2qlixP62/As/R+hs8JldB+R89tTrTn1dFQf8yd2f6qRL2DPM
uQMnqPdGv2L4BPwCvPD1l+Ev9l0RW5qDHzZfaUg7DwSuKga2D/zAh43ugQ4y
1JxUN1Eyycl78uwRjFXXUlciNS+afcH+YD+wX+hvxP4hj0+xd6V0XAgZGp0c
ucqeF7sX8b2Ofb5LUxd9hM98rRDuMzXssBji5xer68hn9Iiq6+91MOGGJfa5
necKbmw6ZJkvUeLcRXFi7bzTm5Kf8IG6Pi9enrF7Ep6cs0eOvet3l9f2XUfR
EzkjTfl4XfEDTByybjvrx7zEX8jfynkfyP26ln2Rug/qiHuwp6SzIJNQBwnc
tnawNjKPfPjoLJD9O7Hl2MTQXw4WPUQEjtg8HU/gqNVHJJf7OoVj+zuayMdm
+fxK5lX502tqcvG3nH4oG4EUB0sOhbXhQOjgufEwdTiB/AePhx8Q99YGJ+rk
TuWRQ9hscvbHkTe/cXkt5x+/9lDvAFm7T/wAN4bu+0GcFxiufZMjW6I32ms5
p12xIxVX2I/gCrWowRZwpYS+UvXXWXu/xDThQ7F+lqnUcehCKTjy0LlnVTXX
/XfwMwwdZ9UWQzxvu+uE91TzSsKNDeobF4EV3n/Nfv7Lh+/q7Lu18S7Ic5w9
zmFlP9j7J0UwoonAf42HMeTsSb5rrx0yT0J13PvKQVeMwpBxZcQLWzzMfRc2
ppo91Oe+qcMV5Ep8a8TbfP68c4u8H+v/A5+YK3Zf/CzYgascyQ2ILfBH/KE5
dXHxi20E7NC+JLY3dW7wwo2mbywxYm3/EWtIvWT8EtgS8F2Xtv9CyBTwbmog
c976xokU/CBuNJdnaU24tnSedh3B1+G14Egf+KF6j0POiWcJA1jXnHdBboi1
AcG/x9hPnu7eef7K+/nYY1dV8/rVz7+hqteEnaqLHGZxRfmrV95+1RJXOM/w
6KnjSiqO5O6LqVBT7gp7l1pnU8YNq0uwrxTjdN2+6yqcaGvLDWEofb3AXWwQ
vG/qldnv9N1bOZWwh2lMyHXE7ubgh84+Njtq9w31LolVVY3FPvBD9quhMdHW
bc/hE6/4xGuW9RDYv1+9/A9H31sQ+9yuK7mPfg/x0+pOld1qz+7Kf99FdrN2
YNYGeZDz7mOOp+RfidWLEpWO06WmFfe8+P5Lq/5R/OT/OXwghbwdS0QONu9i
Su8gZHNi3yBPIid3xQnZnNjf+A+8zMA78Gef92S/s/fmS0Y/25DNSQI/fuGy
X8nCD8WLgh9D2nqUg96X/sF9h849BxOFAaxrDn7w3hQLWMVxTET/YJ/bdUVP
Co3fxjHi71OvO/oUoZ8rlvCpB3ZXcSMWV7pgi2zH6CzYHKjtcujbDp2ELczW
p2sjU8SI3F90v8d++HhtzU7yV/leiWdaWdPyybHqe/Je0flkc+K98/7RJdgP
XXumWFsr+xXfBLIU+9jam5DzfFxdyD7p87UP3P3Z0c+2xq9xcSaPvOSYrH3B
HhS/Q2Yf6rzha+lb/wA/fExAH/W8tJ9t7jm1kXPeA+9NuYPsfeyiY+8tiH1u
+V9s/DYXlXjFulwI+e7x8Xz59kurM0l8Cee0TW5kHa7AT5A94S/k/Zau7RIj
ZGCPHyfcf2pn3MAmkmsvZD2o494VRxi/vS/z61vvWNboeO3Tdf8sTlALpIQu
Adl4WOKcOH8pPmz6Odp+NxB5EX6tra8A+vIDN41+tiHkPO0nfh5z+duz9oT4
nfpIDSU/oBeo9nuf+OFjkuHx6vkEET+jXuj8DR1CvaDUD4qxisCjUE9b4Yfk
cH7m4ofNHcQuOfbegtjnWlPOWIgHoZNYHR78aOMPtLjC/NFXOM+KCesSEyle
Ab9hz1tc6SMuDJyya8Jzu+oA1DOIzUt1nOuwBZt81zHY+zOnEvhh6/2BEfJf
o1OCESVqdNi8CfJtlTeBnt8l1olrfH5HyH4Fqd8GxBjGPtsVfiCnPrNPWZ8c
/GCOquHLO4KPDqV/CD/6quEu/7nPiZRfxPevjfUZDPXepY4lf/OxwTZ/nHXN
OZe8N9sT0ueej0Xsc61pbE7UVrN8hVyH0uMQtrAunPuqP8cztjB4QgkZVLks
Ni6s0lla+FlsbSQotxaBP6c+Hxx6/GsPV7G0vu4reZ30pg/1COU+XfCDedh1
y6lxZnFCcU7yX5eq5SQspUa0zZsAJ0rlTXhiv9sxIJOG9A9bL72y4U7gfHOe
rN1jy9W/n7UfkEl07RC1hUWqodiX/Ur4EbJVMUfZsdTvivEcffTRS30D3YN4
Aukk6Gbq8y78sf4iX7vkpsdvyXoPNnYH3YW8jLH3Vip+kEdk43NK9TPNwRXW
q8qtuv0T1ZhL4orqUUpnge/BN7H9h3AF/shesfdqm2eOzcpjB/vk9rccm9Rn
FHzxfaK5X1tbFn55ey/85z7myuOEav4pzqmULsG80E3BCHg473+ovAlL4JMd
H3W1Q2tn9cenfvy90c+28EM9F1hT6oLn7Afl33MtvHGoGiaqodiX/QosHLIm
C/gBzxAGVPU7Mt4DuC8ZnvdZohd3CbL9PGKYCH5YfjAF3cnqK8IV+AzY0hVX
LA9TnWPsLeDK4ZsPX2z+5Akrtqs6v1ET4bewz6WOYVMP5Lp+1SL8KG3H5G1Y
xJv9q9/9V1W9NGo7oZ9rjbuc4RWcWNMlwAp4tc2v8zWdxiCvf3z87h3BdbO5
6qzP2OOGkLt+dNedC613Ln4Qz2/xY6gaisIPntkHfqDXDF17F/zQ2cq1V9A3
VDL8U/v3VWdj7L0FISc14QcxvZZXTEV3ipHFFsZa1eRY401gZcl62KLcOsxW
97A4xO+5uGF7e1m+z/x83/RUivlhuuAEc1Oc09A52CV4sJ0PelZIv7O2PzBx
7HFD1KKB3+g9fGDXH2fthX9/13nLa9EFYvI6dh34o/zN6KNdZPuh9I+h7HG+
diJxkznvAbuIeBbv8wdP9Fu/JJWwI2tNYzIrupPlt1PRnXJppaYLcZoP7K74
WSUrPhNv3GYvokO04dM+5yLVZhXFkOPetHK/tvW3vE6UihE+Hnaj4USM2O92
rvCdoIy4xhP0nSreYQJjr+q4/9nVSwygzmXOXnjH3e+txQ/8AuSGoafjW8TP
BfE7PuQufQv7xA/e4Zj4wbrmvAfb9446VFPBD2s7j9UTRue1vLVNn9cpk40L
q/ywz9jChC1N+kpuHU0I+VWx9RDnrwt2iGx/Ge7fxg/CfHJxYizfxBDEfk/B
D/I6p4gfih+r8OO6i7L2gmrwci32HosfxL6y38AL+Dy53OAJugj/V70JdJE2
di/1AOkDP+TjHsp+xbphMxMfYV1z3gN2Y137lauuqPLuxt5bkI05jM3J93yd
Cvb1TdYORhwkcQP4GXwMLbnHuTwaP7VdU/zgJfCD+1he32ZsPpea+TJv1XM6
WHEiRux3ux7I1U24W9WunsDY4TP3Xrx9iQHEHraRJbjW50uAG8TKE1cUkuOJ
U2IdwBBiV3MxpM/4XdmvhsIP1s3WYqU+VFv8QB6Ygl8QsnFVsTnZsUNTwb4x
6OsXvH9pTxa1kfGtrArFej628YPYd0XsQxvdyI4NPYN5j732YxH73a5HrI8G
fkKL3WOPW2O/d9u2JQbgu8nZC/AEq38IP9Az9FkdLoAt6CjSJXIwpG//x5D+
8674Ya+lD+xU8MPymlgMqu1bAk1l7GMR9ke7F3P5M2Rt5VU9mwLYIbIyQVvf
jJ1f1aNsAus+FrHf7XrEeLDtyTUV/GDsqrEtHSJnHyie2+sf+DWwYTbVxBLO
gAXYaOElqX1EhqhfMiR+2N5RubEtNg6N9zn2vhKl4IeXAcYe89j04A2r+cht
+DM5BLoeG0BJ/LA+EHKlu+JHVSdzAus+Jtn1qLMBTfGcUEteY8rFD/hcCD+I
sWKfpdSvRZ7hWuxY7HXk/hQM6TN+d2j7Ff4PK4fnnkd7Le9z7D0lsvgR06nI
IZv1j2fJ17Now5/h67qe81USP2xMcCxXIQc/mO/Yaz4mef0jhh9T1T+s/SoX
P7QXPH6gd7DPyL1ukrvZ38ig2K74iT6LDbCpH1Wf9iuePyZ+5Oof3n8+Fd+j
tXXE4oi8/2MqYx+LSvs/Kv2+Rc5giPCj2HfVpqajZM5Z/3ia2O92PZCnQusm
X8Hk8MP4z3P9H4ql8P4PfON8Bh+ui4EFZ9BTbO1FPsP2pfje2PXgB/fvS/8Y
0v+h+N22/g/irq3/Yyo82MYSxfIFnqvxV+IdVX363R9d7F/D0UoWd/0g2sY4
9RF/5XNA2vjPrRwNsUeYN70kutYj3Ijk469iOXhTjL+y9R+7+s99/BX8HV0i
FlsFxqjHtbdXSX/hb/wewhD+xjP7wA/0mqH1j5LxV5OJYTK8MIYfB3v+B4Sc
ptxC5ayHepmE9mKb/A/I5n8QC1kCP6i5aHlYG91IOWMhCtWmKlHndsrk8z9i
NUDsuk0FP+AzNn8wpjvFyMbvWv1Dtin2AXsX2wy6hPI/4JX4OvB5xHIIhS/K
EfG5iX3G76rO4VD5g+DrSv7grSdkvQdkeF0Lfkylfon1tcZidaj3dDDkn1uM
II/B9iVBjmpb16RtjJONwYLQHUrqHm3HZetwpJLFFdtno8+6uEORzz+P4cfZ
t52z/B55VWOPG0J3svVLSuYPQuAFOAGRc24J/o9/pI5H63q+73tx9J3/EZpP
n/oHMQdt65ew53QtuVhTwQ/1h4FiNSE9fky9/pXFCfWvki4BfxNOlKqB1aX+
lfU/geWl4q6mUP9K6xvKV6f3C+9nI+CKr38Vq4GuWoMQcvXY467O99r6dql/
JRmnqf4V+oPtuYTOkcqbwQ2vo4A5Q8Rf9YkfFjeFH/IX5NY39fUTp2IDsvV3
4Rshe4evv4s8Ofa4IVvPSjWtVCexZA1e7sXanPe5D1XnyfcI7NK3lnvZZyJb
tMEOX3+3re4B2ZoEVf3dNfmBusPHnX1c5ccr2T+W+1T1qNfwXbawqeGKr98e
8ylRf9TKAmOPG6Inr/rvtqm/K11U+DFU/V3hR1/xVzf+6ZXR/h96vvqAwPvB
ONtnkLhl9SCEwE8IXxDYxLjpD2LtV7Z+O7JGznvgDIrn8D6nYgOi/5vWtK5/
lJWTOU9DjU+6hOq082xbm6pUf1Pbs5B+FlXPQtMLlx4g6rP6ot95UWVHtvdh
jdrw6lDvqCpfN9GWxfe8P7+L7sE87FqCm77/B2uhXoL04FIvQfLDutY3troh
tT1lC6tsjWt7YAr9P2L4YftHMfaxz3Y19jUsll7Kmp6845Ss/SCdimvHqN/e
F34wl1D/Wvi/fCOqkWV7Edb1HcSPo5/y6Vj82Prhra37f9j+g5yJqdiAbP8o
9llo7N7O8lef3tkbTlibk3wTVpfowpeYg++ZbnEit/+gvX/p/oOMF1/4fSdu
WYRqm4AbVne0RGxw27F43we9P3JkRt/LXP0HS/WVsrYwdBbVbuzTx0Ldryb8
mGr/Qc7T33/7iWpcbfoPSqcauv+g8KOv+okx/IDnCy/4CYaoJj1EHDLfQbfA
t2P7oEOx/ucQ13bpX6trq/6DA8rwdXTg7s8u3w/4FrLD8Jm113TJX7G1brGB
c/4f+eIdyzinEvqE+j5ZnDj0bYeu6BNd9zdYYzG1bayTpVAPWzsn67sJfa9r
71rI947yukdbW4Rw5YVHv3BdX9tStjD2D7KG4sLYXyX6n7Pf7fOo6RE6I9b/
BH8Y+2xDYKvtX4sdJGc/2P7nQ+KH+p/35f+QjuHxA76PrlB6ntxPuTBt8OPI
S45ZXss+r/raT2B/WfzgDMZ4oLWRcD6b7G8rvTbWsML2ncW+3gUndJ36zmI7
wYbSpZ95G/ygD58dV25MhSf0PPwWQ8aAWfL9SPZ/a3/vfGJpF1zDKTAe2yGx
7lZn6Yor7DVkNtnC4KmpcWHsc19vIHZGrDzx5QduGv1sCz90djkvyLE5e0Iy
L9cifw+BHRCyPPiBzN4Hfqj/eWotrhIEfrAPeT7rmvMefuGyX1ley57+5lVn
jr63oL03r9Yni+XCaeyQzUfm7OGjsz1k8e+U8k2EdImhMKKO6I1ua5DojHXV
QSyO2N6QIeLvfK9t7/U63WMo/GjElbX3jK3Q28K66CwWV9in1sdSxeqtYYbF
FPmf6/DD1+NHLhv7bEPwGeEaOIIc2xY/8A0cLPjBfcGPphoqJQl7F3uX5yND
5/CKV3ziNctroa9e/oej760QfoTyIpkndgZ9p8ob3bN7AY6wv0roEkH/9Rrv
eP5hzx8NI2J8jbH5mmCiNvVC6gg8x58BVlFzkZ/8v03Oex2RzxR6P7zrd17w
7iJ2rNK4Iv+9tYXJf9+Wr1gfS5XDsLbPPa6Gzv1v73rbynemEqMIn9F68C6R
Y1P3BPNULF5Krd2ShE8B/EBP6AM/VH+3S3/ENnNiTwmPc/CD7+pa6O6d07Bf
oTvYdfU85YJ7ty1t1F3el86l1SXAiUqXaOG/HpoY42+d84bqHdbxpzob4FTJ
+7dCxN8rHDlsGjgSItnB2FP4WGxcWFdd2FKVF/eFM6p+H6wd+iLxNPY7nKux
zzaEnU5jQtdCjs3ZG1ovrh2S14JVrDN8vg/8kP4xtE5FXFZbPqFrIWI6xthP
queE/4V6RiXry1i7gOKcOMNTsTm1pZce8dIqZi91HXJzg8am1Hxz3i0+VNZj
7HeSS3VxYV399yHCN8v5wq7r7WFj4Qc26FyZ12LPGPjRl/7BeYb3DalT4Wux
fCQ3xt5e+7Xr+8//UEzsYweuqHyF+PSwObGPSpwZb3dC5pPdqVSc05iELGvr
XnpCJn/o3LOq/gr2O/yOL3rqegjjo2aTHztzomarzyux32FdNiKOeArhinSW
Eudjxcey+y+W8cZD5Uja2GPmlLM/bC4Q55yYqKHeC7kSfdbfVW1GWxe4bwI/
kCu0prk2aJsLU7KGO/ehzg17kphFfHeKdWqK+Wza/7IFW90JIh95o+oTTdSE
G/AEzqVi0KglQL1Fz4e75GEMQfhqvF2yqhv5zLz4yTxjti3hyJRtWm3Ixhv7
PB/slzbOvO2ZEq6gp8t3X7qmC/dQ7USNPUemUe12iHEOGatEfG2f+AE/Az+G
jCnzPUCoLZYj69lcGGqY5OSg23hY5U2w78gfR5/omvdrif6Iylvb93P/rMpX
27fpkBU+8q6z3zX6OS9N8MEm3EBvDL03MMTWvhWvKBUbVZoYl58nckJobnzG
vGM+MNXlO9hwBKJmi53n54847OnzsHYuOB8Pnn7aSn+/tmRxRTVtVSuM/BVy
anNxhfdmY8fgxTn4YevRh+ob9knI6crr7gM/4JvKLR9qTuAH/Xjb1MDivVlf
ELpBKIY3hBPoEvAm4UQb2Uf7E5kHOxp8Ev81egS1ge13hRmesH3pO8QfHSx6
R4q+Af9s8omCIZ7HktM3NQxhPD5XkXE39XWBH6Gf1OLIQaSPsL9tnRryuENn
g8/sOpAXhG3vqJOOqs4W9l1b3znn7NprhCsVPyDWmLyqNcI+zbsL9QW1NQqQ
fXPww/rF4BlD1S6B0A/Au77wg/ehHJCh7Ow8B3uZ7MLk9ufgB74ae16xM+Nj
IxYLmxN52NInmnpO1O01nzNh42FDfgn+thK7HumFpz5mWn/uNfYZ70KpuJGq
J4Ifvo6h3stUbFnYrEJz/e71f548z+eKPsL4bX1q8ghjPR/t3IlT83yjqhkW
yGXh/m1iw+xZh1eAK1+64/YFtoN97/931U/61tp3hE8hBz8+9+Se5bXoA0Pi
h2qX2LyBkoQcrlolQ9Vwb5ODzvt68bWbqhq2JWKd7L5h73FP8nWFEcg9uXyd
c2J9pdiugufkDUct9zg/8TmOfcbb8gXfU9HjhvUDpPJUZIE6nhrrzzUEsQ/B
jro5M/6cutDy+zTqIxPJHcklaq3Y/R47F/e9e7Xv4Mt//eVJ9/e5LOBKyVqU
npDnickn17EJR/i7cgch7C5DrTt+FvQPnmnzlksSa0oNXfjnkHEB1M0SJvJ+
Q1hB3AJ1Ai7YfdHiLx++a5mL3QYneAbPq2LNEnSJNqRayXo2smjonOw5YtPK
PLANj33Gcwg+loIbubH7TdhhCZvnGHFZPLeJD7XBkFQcYd03Go7g47NzuOf1
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
VkyJbZ0C7iXZiyxHH1AcEzK3ZlwW86AYLJ5zzLwwf8r3Vj6f5hmdjfeAjghv
8DuuKxtZQ0NDw1qBnEJeIbckw5DN8Efo86rPiH5hOQIZqfpQuf0Lx57jGYPk
MmMqmVMZg9WzfB0s5gM+wd/NHKp+gOcLft/4oqGh4aDB8glnedm7kNGcu9Fd
OO9beYdMVE15/l8r9moNgJ8UwwvgU/hAcWFWh5OPSTkZskcxj40vGhoaDjrk
O5FtnjO/OIX/8zd4Axu9l4noI3xGdjC+iz1n7ry/FI4A6FQAfYK6UfBEbJ7k
61Y9W77X+KKhoaFhGzZvmnO38hhl+7K6ivqThOSn8q4B/hjkrWxRxG/p3C5/
svww2ImwIwHJ+hAP8Fn4is/xb8B1BPGgak7BDzY3z8cXWJ1CcdBAPiQ9d8vF
aGhoaJgGOALOgBewZ0lfQe6LW9SvZOmxhgA3iA8Zp3QJ8QT8xnPxfDxn0yka
Ghoa5gf6hvhEuoFsY9ILyEdED4Fv0A0Uc4wMVxwTslz+COkNqlPM5+ADfZ97
qc+e4n4B99BY+Jxsco0fGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoa
GhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoazmf8K/pm
PWk=
     "], {{0, 400}, {400, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{400, 400},
   PlotRange->{{0, 400}, {0, 400}}]],
  CellChangeTimes->{3.554803165015625*^9}],
 "\n\nThe score of a dart is determined by the number of the region that the \
dart lands in. A dart landing outside the red/green outer ring scores zero. \
The black and cream regions inside this ring represent single scores. \
However, the red/green outer ring and middle ring score double and treble \
scores respectively.\n\nAt the centre of the board are two concentric circles \
called the bull region, or bulls-eye. The outer bull is worth 25 points and \
the inner bull is a double, worth 50 points.\n\nThere are many variations of \
rules but in the most popular game the players will begin with a score 301 or \
501 and the first player to reduce their running total to zero is a winner. \
However, it is normal to play a \[OpenCurlyDoubleQuote]doubles out\
\[CloseCurlyDoubleQuote] system, which means that the player must land a \
double (including the double bulls-eye at the centre of the board) on their \
final dart to win; any other dart that would reduce their running total to \
one or lower means the score for that set of three darts is \
\[OpenCurlyDoubleQuote]bust\[CloseCurlyDoubleQuote].\n\nWhen a player is able \
to finish on their current score it is called a \
\[OpenCurlyDoubleQuote]checkout\[CloseCurlyDoubleQuote] and the highest \
checkout is 170: T20 T20 D25 (two treble 20s and double bull).\n\nThere are \
exactly eleven distinct ways to checkout on a score of 6:\n\n",
 Cell[BoxData[GridBox[{
    {
     StyleBox["D3", "Text"], 
     StyleBox[" ", "Text"], 
     StyleBox[" ", "Text"]},
    {
     StyleBox["D1", "Text"], 
     StyleBox["D2", "Text"], 
     StyleBox[" ", "Text"]},
    {
     StyleBox["S2", "Text"], 
     StyleBox["D2", "Text"], 
     StyleBox[" ", "Text"]},
    {
     StyleBox["D2", "Text"], 
     StyleBox["D1", "Text"], 
     StyleBox[" ", "Text"]},
    {
     StyleBox["S4", "Text"], 
     StyleBox["D1", "Text"], 
     StyleBox[" ", "Text"]},
    {
     StyleBox["S1", "Text"], 
     StyleBox["S1", "Text"], 
     StyleBox["D2", "Text"]},
    {
     StyleBox["S1", "Text"], 
     StyleBox["T1", "Text"], 
     StyleBox["D1", "Text"]},
    {
     StyleBox["S1", "Text"], 
     StyleBox["S3", "Text"], 
     StyleBox["D1", "Text"]},
    {
     StyleBox["D1", "Text"], 
     StyleBox["D1", "Text"], 
     StyleBox["D1", "Text"]},
    {
     StyleBox["D1", "Text"], 
     StyleBox["S2", "Text"], 
     StyleBox["D1", "Text"]},
    {
     StyleBox["S2", "Text"], 
     StyleBox["S2", "Text"], 
     StyleBox["D1", "Text"]}
   },
   GridBoxDividers->{
    "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
     "RowsIndexed" -> {}}]]],
 "\n\nNote that D1 D2 is considered ",
 StyleBox["different",
  FontWeight->"Bold"],
 " to D2 D1 as they finish on different doubles. However, the combination S1 \
T1 D1 is considered the ",
 StyleBox["same",
  FontWeight->"Bold"],
 " as T1 S1 D1.\n\nIn addition we shall not include misses in considering \
combinations; for example, D3 is the ",
 StyleBox["same",
  FontWeight->"Bold"],
 " as 0 D3 and 0 0 D3.\n\nIncredibly there are 42336 distinct ways of \
checking out in total.\n\nHow many distinct ways can a player checkout with a \
score less than 100?"
}], "Text",
 CellChangeTimes->{{3.641810823294367*^9, 3.641810830132766*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"Outer", "[", 
    RowBox[{"Plus", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Total", "/@", 
          RowBox[{"Subsets", "[", 
           RowBox[{"#", ",", "2"}], "]"}]}], ",", 
         RowBox[{"2", "#"}]}], "]"}], "&"}], "@", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Catenate", "@", 
         RowBox[{"Array", "[", 
          RowBox[{"Times", ",", 
           RowBox[{"{", 
            RowBox[{"20", ",", "3"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"25", ",", "50"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"2", 
        RowBox[{"Range", "@", "20"}]}], ",", "50"}], "]"}]}], "]"}], ",", 
   RowBox[{"n_", "/;", 
    RowBox[{"n", "<", "100"}]}], ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641815581730551*^9, 3.641815582843222*^9}, {
  3.641815759449475*^9, 3.641815766490191*^9}, {3.641815805131375*^9, 
  3.641815833648936*^9}, {3.641815920606324*^9, 3.641816071422435*^9}, {
  3.641816109572987*^9, 3.641816142321496*^9}}],

Cell[BoxData["38182"], "Output",
 CellChangeTimes->{
  3.64181558315566*^9, 3.641815766869631*^9, {3.641815805901217*^9, 
   3.64181583464612*^9}, {3.641815928926928*^9, 3.641816032409262*^9}, {
   3.641816066399974*^9, 3.641816072311471*^9}, {3.641816110853956*^9, 
   3.64181614282186*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 110 - Diophantine reciprocals II", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641174070109287*^9, 3.641174079564588*^9}, {
   3.641286794735363*^9, 3.641286798645672*^9}, {3.641433295967617*^9, 
   3.641433301341758*^9}, {3.641721484851933*^9, 3.641721487500467*^9}}],

Cell[TextData[{
 "In the following equation x, y, and n are positive integers.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "x"], "+", 
     FractionBox["1", "y"]}], "=", 
    FractionBox["1", "n"]}], TraditionalForm]]],
 "\n\nIt can be verified that when n = 1260 there are 113 distinct solutions \
and this is the least value of n for which the total number of distinct \
solutions exceeds one hundred.\n\nWhat is the least value of n for which the \
number of distinct solutions exceeds four million?\n\nNOTE: This problem is a \
much more difficult version of ",
 ButtonBox["Problem 108",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/problem=108"], None},
  ButtonNote->"https://projecteuler.net/problem=108"],
 " and as it is well beyond the limitations of a brute force approach it \
requires a clever implementation."
}], "Text",
 CellChangeTimes->{{3.641721499143466*^9, 3.641721533372524*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"n_", ",", "b_", ",", "1", ",", 
     RowBox[{"{", "as___", "}"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Max", "@", "as"}], "\[LessEqual]", "#", "\[LessEqual]", 
        "b"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"#", ",", "as"}], "}"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "]"}], "&"}], "@", 
    RowBox[{"Ceiling", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "n"}], "-", "1."}], ")"}], "/", 
         RowBox[{"Times", "@@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"{", "as", "}"}]}], "+", "1"}], ")"}]}]}], "-", "1"}], 
       ")"}], "/", "2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"n_", ",", "b_", ",", "i_", ",", 
     RowBox[{"{", "as___", "}"}]}], "]"}], ":=", 
   RowBox[{"Catenate", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"n", ",", "b", ",", 
        RowBox[{"i", "-", "1"}], ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "as"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", 
        RowBox[{"Max", "[", 
         RowBox[{"1", ",", "as"}], "]"}], ",", 
        RowBox[{"Min", "[", 
         RowBox[{"b", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", "n"}], "-", "1"}], ")"}], "/", 
                 RowBox[{"Times", "@@", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", 
                    RowBox[{"{", "as", "}"}]}], "+", "1"}], ")"}]}]}], ")"}], 
               "^", 
               RowBox[{"(", 
                RowBox[{"1", "/", "i"}], ")"}]}], "-", "1"}], ")"}], "/", 
            "2"}], "+", "1"}]}], "]"}]}], "}"}]}], "]"}]}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.64169981923775*^9, 3.641699823994843*^9}, {
   3.641699862637328*^9, 3.641700031108635*^9}, {3.641700386577509*^9, 
   3.641700431757901*^9}, {3.641700503106106*^9, 3.64170050454562*^9}, 
   3.641700642236726*^9, {3.641701010297976*^9, 3.64170103120576*^9}, {
   3.641701071149173*^9, 3.64170107603516*^9}, 3.641701112749655*^9, {
   3.641701172697849*^9, 3.641701174422319*^9}, {3.641701255320079*^9, 
   3.641701330469771*^9}, {3.641701382457026*^9, 3.641701405672245*^9}, {
   3.641701438254015*^9, 3.641701619095401*^9}, {3.641701766876924*^9, 
   3.641701780686211*^9}, {3.641702526786442*^9, 3.64170255053288*^9}, {
   3.64170265993624*^9, 3.641702682111146*^9}, {3.641702715033612*^9, 
   3.64170271521377*^9}, {3.641720052368362*^9, 3.641720060788628*^9}, {
   3.641720091881443*^9, 3.641720114130835*^9}, {3.641720149846139*^9, 
   3.641720164207955*^9}, {3.641720201046195*^9, 3.641720223522542*^9}, {
   3.641720279093093*^9, 3.641720299858461*^9}, {3.641720821945601*^9, 
   3.641720852133501*^9}, {3.641720883778275*^9, 3.64172092981751*^9}, {
   3.641721134485044*^9, 3.641721141113868*^9}, {3.641723759034073*^9, 
   3.641723762449224*^9}, {3.641723805752705*^9, 3.64172388771108*^9}, {
   3.641723974817595*^9, 3.641724009160833*^9}, {3.641724049041405*^9, 
   3.641724049260243*^9}, 3.641724155322799*^9, {3.641724706592622*^9, 
   3.641724761253784*^9}, {3.641724851130019*^9, 3.64172486594705*^9}, {
   3.641724958593576*^9, 3.641724963994695*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Min", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Times", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Array", "[", 
            RowBox[{"Prime", ",", "i"}], "]"}], "^", "#"}], ")"}]}], "&"}], "/@", 
       RowBox[{"f", "[", 
        RowBox[{"4*^6", ",", 
         RowBox[{"Log2", "[", 
          RowBox[{"Times", "@@", 
           RowBox[{"Array", "[", 
            RowBox[{"Prime", ",", "#"}], "]"}]}], "]"}], ",", "i", ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "#"}], "}"}]}], "]"}]}], "&"}], "@", 
  RowBox[{"Ceiling", "@", 
   RowBox[{"Log", "[", 
    RowBox[{"3", ",", 
     RowBox[{
      RowBox[{"2", "*", "4*^6"}], "-", "1"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.641723916968614*^9, 3.641723950402177*^9}, {
  3.6417240156149*^9, 3.641724015862123*^9}, {3.641724054970864*^9, 
  3.641724094261123*^9}, {3.641724164777288*^9, 3.641724272666855*^9}, {
  3.641724319287509*^9, 3.64172438485792*^9}, {3.641724896365793*^9, 
  3.641724913110282*^9}, {3.641725054290293*^9, 3.641725065430974*^9}, {
  3.641725108023619*^9, 3.641725190248506*^9}}],

Cell[BoxData["9350130049860600"], "Output",
 CellChangeTimes->{{3.641723921179606*^9, 3.641723951139225*^9}, 
   3.641724016699026*^9, {3.641724052678933*^9, 3.641724095159737*^9}, {
   3.641724159860984*^9, 3.641724236056466*^9}, 3.641724273238685*^9, {
   3.641724322404267*^9, 3.641724332920229*^9}, 3.641724613144934*^9, 
   3.641724913731932*^9, {3.641725066693823*^9, 3.641725089942581*^9}, {
   3.641725129383258*^9, 3.641725195372639*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 111 - Primes with runs", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, 3.641724297383328*^9, {3.642237741625518*^9, 
   3.642237747134441*^9}}],

Cell["\<\
Considering 4-digit primes containing repeated digits it is clear that they \
cannot all be the same: 1111 is divisible by 11, 2222 is divisible by 22, and \
so on. But there are nine 4-digit primes containing three ones:

1117, 1151, 1171, 1181, 1511, 1811, 2111, 4111, 8111

We shall say that M(n, d) represents the maximum number of repeated digits \
for an n-digit prime where d is the repeated digit, N(n, d) represents the \
number of such primes, and S(n, d) represents the sum of these primes.

So M(4, 1) = 3 is the maximum number of repeated digits for a 4-digit prime \
where one is the repeated digit, there are N(4, 1) = 9 such primes, and the \
sum of these primes is S(4, 1) = 22275. It turns out that for d = 0, it is \
only possible to have M(4, 0) = 2 repeated digits, but there are N(4, 0) = 13 \
such cases.

In the same way we obtain the following results for 4-digit primes.

Digit, d\tM(4, d)\tN(4, d)\tS(4, d)
0 \t2 \t13 \t67061
1 \t3 \t9 \t22275
2 \t3 \t1 \t2221
3 \t3 \t12 \t46214
4 \t3 \t2 \t8888
5 \t3 \t1 \t5557
6 \t3 \t1 \t6661
7 \t3 \t9 \t57863
8 \t3 \t1 \t8887
9 \t3 \t7 \t48073

For d = 0 to 9, the sum of all S(4, d) is 273700.

Find the sum of all S(10, d).\
\>", "Text",
 CellChangeTimes->{{3.642237763008842*^9, 3.642237893847459*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#", "\[Equal]", "0"}], ",", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"Total", "@", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"FromDigits", "/@", 
              RowBox[{"Permutations", "[", 
               RowBox[{
                RowBox[{"ConstantArray", "[", 
                 RowBox[{"d", ",", 
                  RowBox[{"10", "-", "#2"}]}], "]"}], "~", "Join", "~", 
                "ds"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"PrimeQ", "@", "#"}], "&&", 
               RowBox[{
                RowBox[{"IntegerLength", "@", "#"}], "\[Equal]", "10"}]}], 
              "&"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"ds", ",", 
            RowBox[{"DeleteDuplicates", "[", 
             RowBox[{"Sort", "/@", 
              RowBox[{"Tuples", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{"0", ",", "9"}], "]"}], ",", 
                RowBox[{"{", "#2", "}"}]}], "]"}]}], "]"}]}], "}"}]}], "]"}], 
        ",", "#"}], "]"}], "&"}], ",", "0", ",", 
     RowBox[{"Range", "@", "9"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "0", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.642239304352515*^9, 3.642239312395071*^9}, {
  3.642239537947974*^9, 3.642239578547284*^9}}],

Cell[BoxData["612407567715"], "Output",
 CellChangeTimes->{
  3.642239542904624*^9, {3.642239581306124*^9, 3.642239586423188*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 112 - Bouncy numbers", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, 3.641724297383328*^9}],

Cell["\<\
Working from left-to-right if no digit is exceeded by the digit to its left \
it is called an increasing number; for example, 134468.

Similarly if no digit is exceeded by the digit to its right it is called a \
decreasing number; for example, 66420.

We shall call a positive integer that is neither increasing nor decreasing a \
\[OpenCurlyDoubleQuote]bouncy\[CloseCurlyDoubleQuote] number; for example, \
155349.

Clearly there cannot be any bouncy numbers below one-hundred, but just over \
half of the numbers below one-thousand (525) are bouncy. In fact, the least \
number for which the proportion of bouncy numbers first reaches 50% is 538.

Surprisingly, bouncy numbers become more and more common and by the time we \
reach 21780 the proportion of bouncy numbers is equal to 90%.

Find the least number for which the proportion of bouncy numbers is exactly \
99%.\
\>", "Text",
 CellChangeTimes->{{3.640938400079567*^9, 3.640938406278833*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "@", 
  RowBox[{"NestWhile", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "+", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Boole", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "\[NotEqual]", 
            RowBox[{"Sort", "@", "#"}], "\[NotEqual]", 
            RowBox[{"Reverse", "@", 
             RowBox[{"Sort", "@", "#"}]}]}], "&"}], "@", 
          RowBox[{"IntegerDigits", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], "]"}]}], "]"}], ",", 
        "1"}], "}"}]}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Divide", "@@", "#"}], "<", ".99"}], "&"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.640937961413736*^9, 3.640938111270862*^9}, 
   3.640938191837615*^9, 3.640938274063463*^9, {3.640938309919348*^9, 
   3.640938366643315*^9}, {3.640938416419067*^9, 3.64093843446699*^9}}],

Cell[BoxData["1587000"], "Output",
 CellChangeTimes->{{3.640938088204379*^9, 3.640938094312057*^9}, 
   3.640938225596257*^9, 3.640938275156249*^9, {3.640938313929862*^9, 
   3.640938383266804*^9}, 3.640938451959439*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 113 - Non-bouncy numbers", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, 3.64155010407781*^9, 3.64155025004686*^9}],

Cell[TextData[{
 "Working from left-to-right if no digit is exceeded by the digit to its left \
it is called an increasing number; for example, 134468.\n\nSimilarly if no \
digit is exceeded by the digit to its right it is called a decreasing number; \
for example, 66420.\n\nWe shall call a positive integer that is neither \
increasing nor decreasing a \[OpenCurlyDoubleQuote]bouncy\
\[CloseCurlyDoubleQuote] number; for example, 155349.\n\nAs n increases, the \
proportion of bouncy numbers below n increases such that there are only 12951 \
numbers below one-million that are not bouncy and only 277032 non-bouncy \
numbers below ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "10"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nHow many numbers below a googol ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["10", "100"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") are not bouncy?"
}], "Text",
 CellChangeTimes->{{3.641550140270168*^9, 3.641550167131504*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Binomial", "[", 
     RowBox[{
      RowBox[{"9", "+", "n", "-", "1"}], ",", "n"}], "]"}], "+", 
    RowBox[{"Binomial", "[", 
     RowBox[{
      RowBox[{"10", "+", "n", "-", "1"}], ",", "n"}], "]"}], "-", "10"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641550342941887*^9, 3.641550351179834*^9}, {
  3.641551652901504*^9, 3.641551768335505*^9}, {3.641551887144527*^9, 
  3.641551907057984*^9}, {3.641551948878723*^9, 3.641551956432561*^9}, {
  3.641552001060987*^9, 3.641552065542066*^9}}],

Cell[BoxData["51161058134250"], "Output",
 CellChangeTimes->{{3.641551684171061*^9, 3.64155176941591*^9}, {
  3.641551898872063*^9, 3.641551908718457*^9}, {3.641551949575664*^9, 
  3.641551961999936*^9}, {3.641552002803097*^9, 3.641552066109988*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 114 - Counting block combinations I", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, 3.64155010407781*^9, 3.64155025004686*^9, {
   3.64162153470638*^9, 3.641621539217466*^9}}],

Cell[TextData[{
 "A row measuring seven units in length has red blocks with a minimum length \
of three units placed on it, such that any two red blocks (which are allowed \
to be different lengths) are separated by at least one black square. There \
are exactly seventeen ways of doing this.\n\n",
 Cell[BoxData[
  GraphicsBox[{{}, {{InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, 0}]}, 
         {GrayLevel[0], RectangleBox[{2, 0}]}, 
         {GrayLevel[0], RectangleBox[{3, 0}]}, 
         {GrayLevel[0], RectangleBox[{4, 0}]}, 
         {GrayLevel[0], RectangleBox[{5, 0}]}, 
         {GrayLevel[0], RectangleBox[{6, 0}]}},
        ImageSize->168], {90.3, -13.028571428571428`}, 
       ImageScaled[{0.5, 0.5}], {168, 24.}], InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], {
          {GrayLevel[0], RectangleBox[{3, 0}]}, 
          {GrayLevel[0], RectangleBox[{4, 0}]}, 
          {GrayLevel[0], RectangleBox[{5, 0}]}, 
          {GrayLevel[0], RectangleBox[{6, 0}]}}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, 0}, {3, 1}]}},
        ImageSize->168], {270.9, -13.028571428571428`}, 
       ImageScaled[{0.5, 0.5}], {168, 24.}], InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], {
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{4, 0}]}, 
          {GrayLevel[0], RectangleBox[{5, 0}]}, 
          {GrayLevel[0], RectangleBox[{6, 0}]}}, 
         {RGBColor[1, 0, 0], RectangleBox[{1, 0}, {4, 1}]}},
        ImageSize->168], {451.5, -13.028571428571428`}, 
       ImageScaled[{0.5, 0.5}], {168, 24.}]}, {InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], {
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, 0}]}, 
          {GrayLevel[0], RectangleBox[{5, 0}]}, 
          {GrayLevel[0], RectangleBox[{6, 0}]}}, 
         {RGBColor[1, 0, 0], RectangleBox[{2, 0}, {5, 1}]}},
        ImageSize->168], {90.3, -39.08571428571429}, 
       ImageScaled[{0.5, 0.5}], {168, 24.}], InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], {
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, 0}]}, 
          {GrayLevel[0], RectangleBox[{2, 0}]}, 
          {GrayLevel[0], RectangleBox[{6, 0}]}}, 
         {RGBColor[1, 0, 0], RectangleBox[{3, 0}, {6, 1}]}},
        ImageSize->168], {270.9, -39.08571428571429}, 
       ImageScaled[{0.5, 0.5}], {168, 24.}], InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], {
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, 0}]}, 
          {GrayLevel[0], RectangleBox[{2, 0}]}, 
          {GrayLevel[0], RectangleBox[{3, 0}]}}, 
         {RGBColor[1, 0, 0], RectangleBox[{4, 0}, {7, 1}]}},
        ImageSize->168], {451.5, -39.08571428571429}, 
       ImageScaled[{0.5, 0.5}], {168, 24.}]}, {InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {GrayLevel[0], RectangleBox[{3, 0}]}, {
          {RGBColor[1, 0, 0], RectangleBox[{0, 0}, {3, 1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{4, 0}, {7, 1}]}}},
        ImageSize->168], {90.3, -65.14285714285714}, 
       ImageScaled[{0.5, 0.5}], {168, 24.}], InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], {
          {GrayLevel[0], RectangleBox[{4, 0}]}, 
          {GrayLevel[0], RectangleBox[{5, 0}]}, 
          {GrayLevel[0], RectangleBox[{6, 0}]}}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, 0}, {4, 1}]}},
        ImageSize->168], {270.9, -65.14285714285714}, 
       ImageScaled[{0.5, 0.5}], {168, 24.}], InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], {
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{5, 0}]}, 
          {GrayLevel[0], RectangleBox[{6, 0}]}}, 
         {RGBColor[1, 0, 0], RectangleBox[{1, 0}, {5, 1}]}},
        ImageSize->168], {451.5, -65.14285714285714}, 
       ImageScaled[{0.5, 0.5}], {168, 24.}]}, {InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], {
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, 0}]}, 
          {GrayLevel[0], RectangleBox[{6, 0}]}}, 
         {RGBColor[1, 0, 0], RectangleBox[{2, 0}, {6, 1}]}},
        ImageSize->168], {90.3, -91.2}, ImageScaled[{0.5, 0.5}], {168, 24.}], 
      InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], {
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, 0}]}, 
          {GrayLevel[0], RectangleBox[{2, 0}]}}, 
         {RGBColor[1, 0, 0], RectangleBox[{3, 0}, {7, 1}]}},
        ImageSize->168], {270.9, -91.2}, ImageScaled[{0.5, 0.5}], {168, 24.}],
       InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], {
          {GrayLevel[0], RectangleBox[{5, 0}]}, 
          {GrayLevel[0], RectangleBox[{6, 0}]}}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, 0}, {5, 1}]}},
        ImageSize->168], {451.5, -91.2}, 
       ImageScaled[{0.5, 0.5}], {168, 24.}]}, {InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], {
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{6, 0}]}}, 
         {RGBColor[1, 0, 0], RectangleBox[{1, 0}, {6, 1}]}},
        ImageSize->168], {90.3, -117.25714285714284`}, 
       ImageScaled[{0.5, 0.5}], {168, 24.}], InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], {
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, 0}]}}, 
         {RGBColor[1, 0, 0], RectangleBox[{2, 0}, {7, 1}]}},
        ImageSize->168], {270.9, -117.25714285714284`}, 
       ImageScaled[{0.5, 0.5}], {168, 24.}], InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {GrayLevel[0], RectangleBox[{6, 0}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, 0}, {6, 1}]}},
        ImageSize->168], {451.5, -117.25714285714284`}, 
       ImageScaled[{0.5, 0.5}], {168, 24.}]}, {InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{1, 0}, {7, 1}]}},
        ImageSize->168], {90.3, -143.3142857142857}, 
       ImageScaled[{0.5, 0.5}], {168, 24.}], InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], {}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, 0}, {7, 1}]}},
        ImageSize->168], {270.9, -143.3142857142857}, 
       ImageScaled[{0.5, 0.5}], {168, 24.}], 
      TagBox[InsetBox["", {451.5, -143.3142857142857}, {Center, Center}, {168., 23.99999999999997}],
       "InsetString"]}}, {}},
   ContentSelectable->True,
   ImageSize->{553.8, 168.34285714285713`},
   ImageSizeRaw->{1, 1},
   PlotRangePadding->{6, 5}]], "Output",
  CellChangeTimes->{
   3.64152461509964*^9, 3.64152580084516*^9, {3.641525863929924*^9, 
    3.641525901369001*^9}, 3.641525965666369*^9, 3.64162157308854*^9, 
    3.641621893751829*^9, {3.641621957134483*^9, 3.641622120263936*^9}, 
    3.641622188228406*^9, 3.641622244253672*^9, {3.641622294323218*^9, 
    3.64162231571916*^9}, {3.641622352478865*^9, 3.641622376606407*^9}, 
    3.641622456823478*^9, 3.641622498358608*^9}],
 "\n\nHow many ways can a row measuring fifty units in length be filled?\n\n\
NOTE: Although the example above does not lend itself to the possibility, in \
general it is permitted to mix block sizes. For example, on a row measuring \
eight units in length you could use red (3), black (1), and red (4)."
}], "Text",
 CellChangeTimes->{{3.641621545888358*^9, 3.641621557893503*^9}, 
   3.641622501837587*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SeriesCoefficient", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "+", "u", "+", "v"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"u", "*", "v"}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "\[Rule]", 
       RowBox[{
        RowBox[{"x", "^", "3"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}]}]}], ",", 
      RowBox[{"v", "\[Rule]", 
       RowBox[{"x", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}]}]}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "50"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641622568793816*^9, 3.641622713522982*^9}}],

Cell[BoxData["16475640049"], "Output",
 CellChangeTimes->{{3.641622586142735*^9, 3.641622608608105*^9}, {
  3.641622640309615*^9, 3.64162271405416*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 115 - Counting block combinations II", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, 3.64155010407781*^9, 3.64155025004686*^9, {
   3.64162153470638*^9, 3.641621539217466*^9}, {3.641640437072334*^9, 
   3.641640442906281*^9}}],

Cell[TextData[{
 "NOTE: This is a more difficult version of ",
 ButtonBox["Problem 114",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/problem=114"], None},
  ButtonNote->"https://projecteuler.net/problem=114"],
 ".\n\nA row measuring n units in length has red blocks with a minimum length \
of m units placed on it, such that any two red blocks (which are allowed to \
be different lengths) are separated by at least one black square.\n\nLet the \
fill-count function, F(m, n), represent the number of ways that a row can be \
filled.\n\nFor example, F(3, 29) = 673135 and F(3, 30) = 1089155.\n\nThat is, \
for m = 3, it can be seen that n = 30 is the smallest value for which the \
fill-count function first exceeds one million.\n\nIn the same way, for m = \
10, it can be verified that F(10, 56) = 880711 and F(10, 57) = 1148904, so n \
= 57 is the least value for which the fill-count function first exceeds one \
million.\n\nFor m = 50, find the least value of n for which the fill-count \
function first exceeds one million."
}], "Text",
 CellChangeTimes->{{3.641640452412353*^9, 3.641640471708153*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IncreaseWhile", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"SeriesCoefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "+", "u", "+", "v"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"u", "*", "v"}]}], ")"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"u", "\[Rule]", 
          RowBox[{
           RowBox[{"x", "^", "50"}], "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", "x"}], ")"}]}]}], ",", 
         RowBox[{"v", "\[Rule]", 
          RowBox[{"x", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", "x"}], ")"}]}]}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "#"}], "}"}]}], "]"}], "<", "1*^6"}], 
   "&"}], "]"}]], "Input",
 CellChangeTimes->{{3.641640910447367*^9, 3.641641017058269*^9}}],

Cell[BoxData["168"], "Output",
 CellChangeTimes->{{3.641640911933264*^9, 3.641640980290646*^9}, 
   3.64164101842743*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 116 - Red, green or blue tiles", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641523703707317*^9, 3.641523707351024*^9}}],

Cell[TextData[{
 "A row of five black square tiles is to have a number of its tiles replaced \
with coloured oblong tiles chosen from red (length two), green (length \
three), or blue (length four).\n\nIf red tiles are chosen there are exactly \
seven ways this can be done.\n\n",
 Cell[BoxData[
  GraphicsBox[{{}, {{InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {RGBColor[1, 0, 0], RectangleBox[{0, 0}, {2, 1}]}, 
         {GrayLevel[0], RectangleBox[{2, 0}]}, 
         {GrayLevel[0], RectangleBox[{3, 0}]}, 
         {GrayLevel[0], RectangleBox[{4, 0}]}},
        ImageSize->120], {64.8, -12.8}, ImageScaled[{0.5, 0.5}], {120, 24.}], 
      InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{1, 0}, {3, 1}]}, 
         {GrayLevel[0], RectangleBox[{3, 0}]}, 
         {GrayLevel[0], RectangleBox[{4, 0}]}},
        ImageSize->120], {194.39999999999998`, -12.8}, 
       ImageScaled[{0.5, 0.5}], {120, 24.}], InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, 0}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{2, 0}, {4, 1}]}, 
         {GrayLevel[0], RectangleBox[{4, 0}]}},
        ImageSize->120], {324., -12.8}, ImageScaled[{0.5, 0.5}], {120, 24.}], 
      InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, 0}]}, 
         {GrayLevel[0], RectangleBox[{2, 0}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{3, 0}, {5, 1}]}},
        ImageSize->120], {453.6, -12.8}, 
       ImageScaled[{0.5, 0.5}], {120, 24.}]}, {InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {RGBColor[1, 0, 0], RectangleBox[{0, 0}, {2, 1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{2, 0}, {4, 1}]}, 
         {GrayLevel[0], RectangleBox[{4, 0}]}},
        ImageSize->120], {64.8, -38.400000000000006`}, 
       ImageScaled[{0.5, 0.5}], {120, 24.}], InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {RGBColor[1, 0, 0], RectangleBox[{0, 0}, {2, 1}]}, 
         {GrayLevel[0], RectangleBox[{2, 0}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{3, 0}, {5, 1}]}},
        ImageSize->120], {194.39999999999998`, -38.400000000000006`}, 
       ImageScaled[{0.5, 0.5}], {120, 24.}], InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{1, 0}, {3, 1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{3, 0}, {5, 1}]}},
        ImageSize->120], {324., -38.400000000000006`}, 
       ImageScaled[{0.5, 0.5}], {120, 24.}], 
      TagBox[InsetBox["", {453.6, -38.400000000000006`}, {Center, Center}, {120.00000000000006`, 24.000000000000004`}],
       "InsetString"]}}, {}},
   ContentSelectable->True,
   ImageSize->{530.4, 63.2},
   PlotRangePadding->{6, 5}]], "Output",
  CellChangeTimes->{3.641525637434547*^9, 3.641525693303894*^9}],
 "\n\nIf green tiles are chosen there are three ways.\n\n",
 Cell[BoxData[
  GraphicsBox[{{}, {InsetBox[
      GraphicsBox[
       {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
        {RGBColor[0, 1, 0], RectangleBox[{0, 0}, {3, 1}]}, 
        {GrayLevel[0], RectangleBox[{3, 0}]}, 
        {GrayLevel[0], RectangleBox[{4, 0}]}},
       ImageSize->120], {64.5, -12.6}, ImageScaled[{0.5, 0.5}], {120, 24.}], 
     InsetBox[
      GraphicsBox[
       {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {RGBColor[0, 1, 0], RectangleBox[{1, 0}, {4, 1}]}, 
        {GrayLevel[0], RectangleBox[{4, 0}]}},
       ImageSize->120], {193.5, -12.6}, ImageScaled[{0.5, 0.5}], {120, 24.}], 
     InsetBox[
      GraphicsBox[
       {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, 0}]}, 
        {RGBColor[0, 1, 0], RectangleBox[{2, 0}, {5, 1}]}},
       ImageSize->120], {322.5, -12.6}, 
      ImageScaled[{0.5, 0.5}], {120, 24.}]}, {}},
   ContentSelectable->True,
   ImageSize->{399., 37.2},
   PlotRangePadding->{6, 5}]], "Output",
  CellChangeTimes->{
   3.641525414373437*^9, 3.641525449901226*^9, {3.641525666760761*^9, 
    3.641525672078247*^9}}],
 "\n\nAnd if blue tiles are chosen there are two ways.\n\n",
 Cell[BoxData[
  GraphicsBox[{{}, {InsetBox[
      GraphicsBox[
       {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
        {RGBColor[0, 0, 1], RectangleBox[{0, 0}, {4, 1}]}, 
        {GrayLevel[0], RectangleBox[{4, 0}]}},
       ImageSize->120], {64., -12.6}, ImageScaled[{0.5, 0.5}], {120, 24.}], 
     InsetBox[
      GraphicsBox[
       {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{1, 0}, {5, 1}]}},
       ImageSize->120], {192., -12.6}, 
      ImageScaled[{0.5, 0.5}], {120, 24.}]}, {}},
   ContentSelectable->True,
   ImageSize->{268., 37.2},
   PlotRangePadding->{6, 5}]], "Output",
  CellChangeTimes->{3.641525518118069*^9, 3.641525703098127*^9}],
 "\n\nAssuming that colours cannot be mixed there are 7 + 3 + 2 = 12 ways of \
replacing the black tiles in a row measuring five units in length.\n\nHow \
many different ways can the black tiles in a row measuring fifty units in \
length be replaced if colours cannot be mixed and at least one coloured tile \
must be used?\n\nNOTE: This is related to Problem ",
 ButtonBox["117",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/problem=117"], None},
  ButtonNote->"https://projecteuler.net/problem=117"],
 "."
}], "Text",
 CellChangeTimes->{{3.64152371509422*^9, 3.641523745850734*^9}, {
   3.641523952567466*^9, 3.641523956050827*^9}, {3.641523993725686*^9, 
   3.641524056714541*^9}, {3.641524107385144*^9, 3.641524157315434*^9}, 
   3.641524377087383*^9, 3.641525332887439*^9, 3.641525453146357*^9, 
   3.641525521411911*^9, 3.641525649956981*^9, {3.641525707763505*^9, 
   3.641525726381552*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SeriesCoefficient", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", "x", "-", 
       RowBox[{"x", "^", "2"}]}], ")"}]}], "+", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", "x", "-", 
       RowBox[{"x", "^", "3"}]}], ")"}]}], "+", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", "x", "-", 
       RowBox[{"x", "^", "4"}]}], ")"}]}], "-", 
    RowBox[{"3", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", "x"}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "50"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641523750596834*^9, 3.641523758739424*^9}, {
  3.64152382597005*^9, 3.641523867309638*^9}, {3.641523913292033*^9, 
  3.641523932838253*^9}}],

Cell[BoxData["20492570929"], "Output",
 CellChangeTimes->{{3.641523846581251*^9, 3.641523867980448*^9}, {
  3.641523920845862*^9, 3.641523933451387*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 117 - Red, green, and blue tiles", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641523703707317*^9, 3.641523707351024*^9}, {
   3.641552105956623*^9, 3.641552116576582*^9}}],

Cell[TextData[{
 "Using a combination of black square tiles and oblong tiles chosen from: red \
tiles measuring two units, green tiles measuring three units, and blue tiles \
measuring four units, it is possible to tile a row measuring five units in \
length in exactly fifteen different ways.\n\n",
 Cell[BoxData[
  GraphicsBox[{{}, {{InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, 0}]}, 
         {GrayLevel[0], RectangleBox[{2, 0}]}, 
         {GrayLevel[0], RectangleBox[{3, 0}]}, 
         {GrayLevel[0], RectangleBox[{4, 0}]}},
        ImageSize->120], {64.8, -12.96}, ImageScaled[{0.5, 0.5}], {120, 24.}],
       InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {RGBColor[1, 0, 0], RectangleBox[{0, 0}, {2, 1}]}, 
         {GrayLevel[0], RectangleBox[{2, 0}]}, 
         {GrayLevel[0], RectangleBox[{3, 0}]}, 
         {GrayLevel[0], RectangleBox[{4, 0}]}},
        ImageSize->120], {194.39999999999998`, -12.96}, 
       ImageScaled[{0.5, 0.5}], {120, 24.}], InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{1, 0}, {3, 1}]}, 
         {GrayLevel[0], RectangleBox[{3, 0}]}, 
         {GrayLevel[0], RectangleBox[{4, 0}]}},
        ImageSize->120], {324., -12.96}, ImageScaled[{0.5, 0.5}], {120, 24.}],
       InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, 0}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{2, 0}, {4, 1}]}, 
         {GrayLevel[0], RectangleBox[{4, 0}]}},
        ImageSize->120], {453.6, -12.96}, 
       ImageScaled[{0.5, 0.5}], {120, 24.}]}, {InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, 0}]}, 
         {GrayLevel[0], RectangleBox[{2, 0}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{3, 0}, {5, 1}]}},
        ImageSize->120], {64.8, -38.88}, ImageScaled[{0.5, 0.5}], {120, 24.}],
       InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {RGBColor[1, 0, 0], RectangleBox[{0, 0}, {2, 1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{2, 0}, {4, 1}]}, 
         {GrayLevel[0], RectangleBox[{4, 0}]}},
        ImageSize->120], {194.39999999999998`, -38.88}, 
       ImageScaled[{0.5, 0.5}], {120, 24.}], InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {RGBColor[1, 0, 0], RectangleBox[{0, 0}, {2, 1}]}, 
         {GrayLevel[0], RectangleBox[{2, 0}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{3, 0}, {5, 1}]}},
        ImageSize->120], {324., -38.88}, ImageScaled[{0.5, 0.5}], {120, 24.}],
       InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{1, 0}, {3, 1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{3, 0}, {5, 1}]}},
        ImageSize->120], {453.6, -38.88}, 
       ImageScaled[{0.5, 0.5}], {120, 24.}]}, {InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {RGBColor[0, 1, 0], RectangleBox[{0, 0}, {3, 1}]}, 
         {GrayLevel[0], RectangleBox[{3, 0}]}, 
         {GrayLevel[0], RectangleBox[{4, 0}]}},
        ImageSize->120], {64.8, -64.80000000000001}, 
       ImageScaled[{0.5, 0.5}], {120, 24.}], InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{1, 0}, {4, 1}]}, 
         {GrayLevel[0], RectangleBox[{4, 0}]}},
        ImageSize->120], {194.39999999999998`, -64.80000000000001}, 
       ImageScaled[{0.5, 0.5}], {120, 24.}], InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, 0}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{2, 0}, {5, 1}]}},
        ImageSize->120], {324., -64.80000000000001}, 
       ImageScaled[{0.5, 0.5}], {120, 24.}], InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {RGBColor[1, 0, 0], RectangleBox[{0, 0}, {2, 1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{2, 0}, {5, 1}]}},
        ImageSize->120], {453.6, -64.80000000000001}, 
       ImageScaled[{0.5, 0.5}], {120, 24.}]}, {InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {RGBColor[0, 1, 0], RectangleBox[{0, 0}, {3, 1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{3, 0}, {5, 1}]}},
        ImageSize->120], {64.8, -90.72}, ImageScaled[{0.5, 0.5}], {120, 24.}],
       InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {RGBColor[0, 0, 1], RectangleBox[{0, 0}, {4, 1}]}, 
         {GrayLevel[0], RectangleBox[{4, 0}]}},
        ImageSize->120], {194.39999999999998`, -90.72}, 
       ImageScaled[{0.5, 0.5}], {120, 24.}], InsetBox[
       GraphicsBox[
        {EdgeForm[{GrayLevel[1], Thickness[Large]}], 
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {RGBColor[0, 0, 1], RectangleBox[{1, 0}, {5, 1}]}},
        ImageSize->120], {324., -90.72}, ImageScaled[{0.5, 0.5}], {120, 24.}], 
      TagBox[InsetBox["", {453.6, -90.72}, {Center, Center}, {120.00000000000006`, 24.000000000000014`}],
       "InsetString"]}}, {}},
   ContentSelectable->True,
   ImageSize->{530.4, 115.68},
   ImageSizeRaw->{1, 1},
   PlotRangePadding->{6, 5}]], "Output",
  CellChangeTimes->{
   3.64152461509964*^9, 3.64152580084516*^9, {3.641525863929924*^9, 
    3.641525901369001*^9}, 3.641525965666369*^9}],
 "\n\nHow many ways can a row measuring fifty units in length be tiled?\n\n\
NOTE: This is related to ",
 ButtonBox["Problem 116",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://projecteuler.net/problem=116"], None},
  ButtonNote->"https://projecteuler.net/problem=116"],
 "."
}], "Text",
 CellChangeTimes->{{3.641552124376706*^9, 3.641552156605947*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SeriesCoefficient", "[", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"1", "-", "x", "-", 
      RowBox[{"x", "^", "2"}], "-", 
      RowBox[{"x", "^", "3"}], "-", 
      RowBox[{"x", "^", "4"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "50"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641552177155461*^9, 3.641552204834603*^9}}],

Cell[BoxData["100808458960497"], "Output",
 CellChangeTimes->{{3.641552187246438*^9, 3.641552205411565*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 118 - Pandigital prime sets", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641523703707317*^9, 3.641523707351024*^9}, {
   3.641552105956623*^9, 3.641552116576582*^9}, {3.642246742661565*^9, 
   3.64224674831144*^9}}],

Cell["\<\
Using all of the digits 1 through 9 and concatenating them freely to form \
decimal integers, different sets can be formed. Interestingly with the set \
{2,5,47,89,631}, all of the elements belonging to it are prime.

How many distinct sets containing each of the digits one through nine exactly \
once contain only prime elements?\
\>", "Text",
 CellChangeTimes->{{3.642246762021104*^9, 3.64224676599525*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Union", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Sort", "/@", 
       RowBox[{"Fold", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Catenate", "@", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Append", "[", 
                RowBox[{"sets", ",", "#"}], "]"}], "&"}], "/@", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"Permutations", "[", 
                 RowBox[{
                  RowBox[{"Complement", "[", 
                   RowBox[{
                    RowBox[{"Range", "@", "9"}], ",", 
                    RowBox[{"Union", "@@", "sets"}]}], "]"}], ",", 
                  RowBox[{"{", "#2", "}"}]}], "]"}], ",", 
                RowBox[{"PrimeQ", "@*", "FromDigits"}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"sets", ",", "#"}], "}"}]}], "]"}]}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", "}"}], "}"}], ",", 
         RowBox[{"Reverse", "@", "#"}]}], "]"}]}], "&"}], "/@", 
     RowBox[{"IntegerPartitions", "@", "9"}]}], ")"}]}], "//", 
  "Length"}]], "Input",
 CellChangeTimes->{{3.642249835475476*^9, 3.642249886194532*^9}}],

Cell[BoxData["44680"], "Output",
 CellChangeTimes->{{3.642249874810804*^9, 3.642249888441938*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 119 - Digit power sum", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641436236234971*^9, 3.641436243650914*^9}}],

Cell[TextData[{
 "The number 512 is interesting because it is equal to the sum of its digits \
raised to some power: 5 + 1 + 2 = 8, and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["8", "3"], " ", "=", " ", "512"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Another example of a number with this property is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"614656", " ", "=", " ", 
    SuperscriptBox["28", "4"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nWe shall define an to be the nth term of this sequence and insist that \
a number must contain at least two digits to have a sum.\n\nYou are given \
that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "2"], " ", "=", " ", "512"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "10"], " ", "=", " ", "614656"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nFind ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "30"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.641436251189649*^9, 3.641436305048896*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"Union", "@@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"2", ",", 
           RowBox[{"9", 
            RowBox[{"IncreaseWhile", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"9", "#"}], ")"}], "^", "n"}], "\[GreaterEqual]", 
               RowBox[{"10", "^", 
                RowBox[{"(", 
                 RowBox[{"#", "-", "1"}], ")"}]}]}], "&"}], "]"}]}]}], "]"}], 
         "^", "n"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Total", "@", 
            RowBox[{"IntegerDigits", "@", "#"}]}], "^", "n"}], "\[Equal]", 
          "#"}], "&"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "2", ",", "30"}], "}"}]}], "]"}]}], ")"}], "[", 
  RowBox[{"[", "30", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.641437785923758*^9, 3.641437790309761*^9}, {
  3.641437821850628*^9, 3.641437877597923*^9}, {3.64143793674267*^9, 
  3.64143803011577*^9}}],

Cell[BoxData["248155780267521"], "Output",
 CellChangeTimes->{{3.641437837873848*^9, 3.641437878038425*^9}, {
  3.641437937809653*^9, 3.641438030759688*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 120 - Square remainders", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.6413441707035*^9, 3.641344175715257*^9}, {
   3.641345789188448*^9, 3.641345792657677*^9}}],

Cell[TextData[{
 "Let r be the remainder when ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"a", "\[Minus]", "1"}], ")"}], "n"], " ", "+", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"a", "+", "1"}], ")"}], "n"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is divided by ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["a", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nFor example, if a = 7 and n = 3, then r = 42: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["6", "3"], " ", "+", " ", 
     SuperscriptBox["8", "3"]}], " ", "=", " ", 
    RowBox[{"728", " ", "\[Congruent]", " ", 
     RowBox[{"42", " ", "mod", " ", "49"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". And as n varies, so too will r, but for a = 7 it turns out that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["r", "max"], " ", "=", " ", "42"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nFor 3 \[LessEqual] a \[LessEqual] 1000, find ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Sum]", " ", 
    SubscriptBox["r", "max"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.641345809398355*^9, 3.641345880682207*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Max", "@", 
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"4", 
         RowBox[{"Range", "@", "a"}]}], "-", "2"}], ",", "a"}], "]"}]}], 
    "a"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "3", ",", "1000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641346522503142*^9, 3.641346529563699*^9}}],

Cell[BoxData["333082500"], "Output",
 CellChangeTimes->{3.64134652998686*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 121 - Disc game prize fund", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.6413441707035*^9, 3.641344175715257*^9}, {
   3.641345789188448*^9, 3.641345792657677*^9}, {3.641641180413908*^9, 
   3.641641184491654*^9}}],

Cell["\<\
A bag contains one red disc and one blue disc. In a game of chance a player \
takes a disc at random and its colour is noted. After each turn the disc is \
returned to the bag, an extra red disc is added, and another disc is taken at \
random.

The player pays \[Sterling]1 to play and wins if they have taken more blue \
discs than red discs at the end of the game.

If the game is played for four turns, the probability of a player winning is \
exactly 11/120, and so the maximum prize fund the banker should allocate for \
winning in this game would be \[Sterling]10 before they would expect to incur \
a loss. Note that any payout will be a whole number of pounds and also \
includes the original \[Sterling]1 paid to play the game, so in the example \
given the player actually wins \[Sterling]9.

Find the maximum prize fund that should be allocated to a single game in \
which fifteen turns are played.\
\>", "Text",
 CellChangeTimes->{{3.641641191607277*^9, 3.641641197911031*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Floor", "[", 
  RowBox[{"1", "/", 
   RowBox[{"Total", "@", 
    RowBox[{"Take", "[", 
     RowBox[{
      RowBox[{"Fold", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "#2"}], ",", 
            RowBox[{"1", "-", 
             RowBox[{"1", "/", "#2"}]}]}], "}"}], ".", 
          RowBox[{"{", 
           RowBox[{"#", ",", 
            RowBox[{"RotateRight", "@", "#"}]}], "}"}]}], "&"}], ",", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{"1", "\[Rule]", "1"}], ",", 
          RowBox[{"15", "+", "1"}]}], "]"}], ",", 
        RowBox[{"1", "+", 
         RowBox[{"Range", "@", "15"}]}]}], "]"}], ",", 
      RowBox[{"Floor", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"15", "+", "1"}], ")"}], "/", "2"}], "]"}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.641643700864691*^9, 3.641643749204408*^9}, {
   3.641643793007621*^9, 3.641643833797314*^9}, {3.64164402573197*^9, 
   3.641644048083459*^9}, 3.64164409126638*^9}],

Cell[BoxData["2269"], "Output",
 CellChangeTimes->{{3.641643710252284*^9, 3.641643750654601*^9}, {
   3.641643795590432*^9, 3.641643836076519*^9}, 3.641644026329721*^9, 
   3.641644092335575*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 122 - Efficient exponentiation", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.6413441707035*^9, 3.641344175715257*^9}, {
   3.641345789188448*^9, 3.641345792657677*^9}, {3.641641180413908*^9, 
   3.641641184491654*^9}, {3.642210950838442*^9, 3.642210956923888*^9}}],

Cell[TextData[{
 "The most naive way of computing ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "15"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " requires fourteen multiplications:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n", " ", "\[Times]", " ", "n", " ", "\[Times]"}], " ", "..."}],
      " ", "\[Times]", " ", "n"}], " ", "=", " ", 
    SuperscriptBox["n", "15"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nBut using a \[OpenCurlyDoubleQuote]binary\[CloseCurlyDoubleQuote] \
method you can compute it in six multiplications:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"n", " ", "\[Times]", " ", "n"}], " ", "=", " ", 
    SuperscriptBox["n", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["n", "2"], " ", "\[Times]", " ", 
     SuperscriptBox["n", "2"]}], " ", "=", " ", 
    SuperscriptBox["n", "4"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["n", "4"], " ", "\[Times]", " ", 
     SuperscriptBox["n", "4"]}], " ", "=", " ", 
    SuperscriptBox["n", "8"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["n", "8"], " ", "\[Times]", " ", 
     SuperscriptBox["n", "4"]}], " ", "=", " ", 
    SuperscriptBox["n", "12"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["n", "12"], " ", "\[Times]", " ", 
     SuperscriptBox["n", "2"]}], " ", "=", " ", 
    SuperscriptBox["n", "14"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["n", "14"], " ", "\[Times]", " ", "n"}], " ", "=", " ", 
    SuperscriptBox["n", "15"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nHowever it is yet possible to compute it in only five multiplications:\n\
\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"n", " ", "\[Times]", " ", "n"}], " ", "=", " ", 
    SuperscriptBox["n", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["n", "2"], " ", "\[Times]", " ", "n"}], " ", "=", " ", 
    SuperscriptBox["n", "3"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["n", "3"], " ", "\[Times]", " ", 
     SuperscriptBox["n", "3"]}], " ", "=", " ", 
    SuperscriptBox["n", "6"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["n", "6"], " ", "\[Times]", " ", 
     SuperscriptBox["n", "6"]}], " ", "=", " ", 
    SuperscriptBox["n", "12"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["n", "12"], " ", "\[Times]", " ", 
     SuperscriptBox["n", "3"]}], " ", "=", " ", 
    SuperscriptBox["n", "15"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nWe shall define m(k) to be the minimum number of multiplications to \
compute ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "k"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "; for example m(15) = 5.\n\nFor 1 \[LessEqual] k \[LessEqual] 200, find \
\[Sum] m(k)."
}], "Text",
 CellChangeTimes->{{3.642210971741423*^9, 3.642211122952982*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Length", "@*", "First"}], "/@", 
    RowBox[{"Fold", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Append", "[", 
        RowBox[{"#", ",", 
         RowBox[{"MinimalBy", "[", 
          RowBox[{
           RowBox[{"Catenate", "@", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Append", "[", "#2", "]"}], "/@", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"#2", "-", "i"}], "]"}], "]"}], ",", 
                 RowBox[{"MemberQ", "[", "i", "]"}]}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"#2", "/", "2"}]}], "}"}]}], "]"}]}], ",", "Length"}],
           "]"}]}], "]"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"{", "1", "}"}], "}"}], "}"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{"2", ",", "200"}], "]"}]}], "]"}]}], "-", "1"}], "//", 
  "Total"}]], "Input",
 CellChangeTimes->{{3.642219753922749*^9, 3.642219754120861*^9}, 
   3.642219990717128*^9, {3.642222510398971*^9, 3.642222513172274*^9}, {
   3.642222562673942*^9, 3.642222576618041*^9}}],

Cell[BoxData["1582"], "Output",
 CellChangeTimes->{3.642219760897807*^9, 3.642220004349971*^9, 
  3.642222516106973*^9, 3.64222258541677*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 123 - Prime square remainders", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.6413441707035*^9, 3.641344175715257*^9}, {
   3.641526219913011*^9, 3.641526223788197*^9}}],

Cell[TextData[{
 "Let pn be the nth prime: 2, 3, 5, 7, 11, ..., and let r be the remainder \
when ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["p", "n"], "\[Minus]", "1"}], ")"}], "n"], " ", "+", " ", 
    
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["p", "n"], "+", "1"}], ")"}], "n"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is divided by ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox["p", "n"], "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nFor example, when n = 3, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "3"], " ", "=", " ", "5"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["4", "3"], " ", "+", " ", 
     SuperscriptBox["6", "3"]}], " ", "=", " ", 
    RowBox[{"280", " ", "\[Congruent]", " ", 
     RowBox[{"5", " ", "mod", " ", "25"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nThe least value of n for which the remainder first exceeds ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "9"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is 7037.\n\nFind the least value of n for which the remainder first \
exceeds ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "10"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.641526230043091*^9, 3.641526306800551*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IncreaseWhile", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{"2", "#", " ", 
        RowBox[{"Prime", "@", "#"}]}], ",", 
       RowBox[{
        RowBox[{"Prime", "@", "#"}], "^", "2"}]}], "]"}], "<", "1*^10"}], 
    "&"}], ",", "1", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.64152633725529*^9, 3.641526436898226*^9}, {
  3.641526509105717*^9, 3.641526514721945*^9}, {3.641526661926297*^9, 
  3.641526668719906*^9}}],

Cell[BoxData["21035"], "Output",
 CellChangeTimes->{
  3.641526354079136*^9, {3.641526384128983*^9, 3.64152644041118*^9}, {
   3.641526509690915*^9, 3.641526515859251*^9}, {3.64152666505875*^9, 
   3.641526669323654*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 124 - Ordered radicals", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.6413441707035*^9, 3.641344175715257*^9}}],

Cell[TextData[{
 "The radical of n, rad(n), is the product of the distinct prime factors of \
n. For example, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"504", " ", "=", " ", 
    RowBox[{
     SuperscriptBox["2", "3"], " ", "\[Times]", " ", 
     SuperscriptBox["3", "2"], " ", "\[Times]", " ", "7"}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", so rad(504) = 2 \[Times] 3 \[Times] 7 = 42.\n\nIf we calculate rad(n) for \
1 \[LessEqual] n \[LessEqual] 10, then sort them on rad(n), and sorting on n \
if the radical values are equal, we get:\n\n",
 StyleBox["Unsorted",
  FontWeight->"Bold"],
 "\t\t\t",
 StyleBox["Sorted",
  FontWeight->"Bold"],
 "\n",
 StyleBox["n",
  FontWeight->"Bold"],
 "\t",
 StyleBox["rad(n)",
  FontWeight->"Bold"],
 "\t\t",
 StyleBox["n",
  FontWeight->"Bold"],
 "\t",
 StyleBox["rad(n)",
  FontWeight->"Bold"],
 "\t",
 StyleBox["k",
  FontWeight->"Bold"],
 "\n1\t1\t\t1\t1\t1\n2\t2\t\t2\t2\t2\n3\t3\t\t4\t2\t3\n4\t2\t\t8\t2\t4\n5\t5\t\
\t3\t3\t5\n6\t6\t\t9\t3\t6\[LineSeparator]7\t7\t\t5\t5\t7\[LineSeparator]8\t2\
\t\t6\t6\t8\[LineSeparator]9\t3\t\t7\t7\t9\n10\t10\t\t10\t10\t10\n\nLet E(k) \
be the kth element in the sorted n column; for example, E(4) = 8 and E(6) = \
9.\n\nIf rad(n) is sorted for 1 \[LessEqual] n \[LessEqual] 100000, find \
E(10000)."
}], "Text",
 CellChangeTimes->{{3.641344182575843*^9, 3.641344209058667*^9}, {
  3.64134424458178*^9, 3.641344323032632*^9}, {3.641344561364068*^9, 
  3.641344789829784*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "@", 
  RowBox[{"Ordering", "[", 
   RowBox[{
    RowBox[{"Radical", "@", 
     RowBox[{"Range", "@", "100000"}]}], ",", "10000"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.641345514210055*^9, 3.641345516679567*^9}, {
  3.641345575058598*^9, 3.641345635340325*^9}}],

Cell[BoxData["21417"], "Output",
 CellChangeTimes->{{3.641345584712065*^9, 3.641345637689262*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 125 - Palindromic sums", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.6413441707035*^9, 3.641344175715257*^9}, {
   3.641385282108612*^9, 3.641385288284611*^9}}],

Cell[TextData[{
 "The palindromic number 595 is interesting because it can be written as the \
sum of consecutive squares: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["6", "2"], " ", "+", " ", 
    SuperscriptBox["7", "2"], " ", "+", " ", 
    SuperscriptBox["8", "2"], " ", "+", " ", 
    SuperscriptBox["9", "2"], " ", "+", " ", 
    SuperscriptBox["10", "2"], " ", "+", " ", 
    SuperscriptBox["11", "2"], " ", "+", " ", 
    SuperscriptBox["12", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nThere are exactly eleven palindromes below one-thousand that can be \
written as consecutive square sums, and the sum of these palindromes is 4164. \
Note that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", " ", "=", " ", 
    RowBox[{
     SuperscriptBox["0", "2"], " ", "+", " ", 
     SuperscriptBox["1", "2"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " has not been included as this problem is concerned with the squares of \
positive integers.\n\nFind the sum of all the numbers less than ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "8"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " that are both palindromic and can be written as the sum of consecutive \
squares."
}], "Text",
 CellChangeTimes->{{3.641385295016669*^9, 3.641385343023321*^9}, {
  3.641386043435594*^9, 3.641386045034316*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{"DeleteDuplicates", "@", 
   RowBox[{"Catenate", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Reap", "[", 
          RowBox[{"NestWhileList", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "+", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "^", "2"}], ",", "1"}], 
               "}"}]}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "i"}], "}"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"PalindromeQ", "@", "#"}], ",", 
                  RowBox[{"Sow", "@", "#"}], ",", "#"}], "]"}], "&"}], "@", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "<", "1*^8"}], "&"}]}], 
           "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"i", "^", "2"}], "<", "#", "<", "1*^8"}], "&"}]}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Sqrt", "@", "1*^8"}]}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.641385119835648*^9, 3.641385166174495*^9}, {
  3.641385400546304*^9, 3.641385407391516*^9}, {3.641385566634798*^9, 
  3.641385572122947*^9}, {3.641385628427524*^9, 3.641385671995008*^9}, {
  3.641385725424683*^9, 3.641385727257702*^9}, {3.641385821442437*^9, 
  3.641385861963565*^9}, {3.641385932117642*^9, 3.641385937345679*^9}, {
  3.641386177617757*^9, 3.641386215847793*^9}}],

Cell[BoxData["2906969179"], "Output",
 CellChangeTimes->{
  3.641385166779385*^9, 3.641385408393293*^9, 3.641385603693683*^9, {
   3.641385639648042*^9, 3.641385672452814*^9}, 3.641385737382047*^9, 
   3.641385941987406*^9, {3.641386210388975*^9, 3.641386219990412*^9}}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 126 - 150", "Subsection",
 CellChangeTimes->{{3.640509015355191*^9, 3.640509022245683*^9}, {
  3.640519338671053*^9, 3.640519341443173*^9}, {3.6405218351164*^9, 
  3.640521837410107*^9}, {3.640692001248666*^9, 3.64069200435303*^9}, {
  3.640938376129309*^9, 3.640938377765213*^9}, {3.641284295689656*^9, 
  3.641284299496535*^9}}],

Cell[CellGroupData[{

Cell["Problem 126 - Cuboid layers", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.642232653803073*^9, 3.64223266472953*^9}, {3.642298778283247*^9, 
   3.642298787208101*^9}, {3.642553552638087*^9, 3.642553558940838*^9}, {
   3.643173460658807*^9, 3.643173469352534*^9}}],

Cell[TextData[{
 "The minimum number of cubes to cover every visible face on a cuboid \
measuring 3 x 2 x 1 is twenty-two.\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
E++99548LoQQolbs2rXLbdu2zbRs3bq1quvfuXOnPC6EEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEECVmy5Yt/hxvq0JuVYpV/eSSsayfovNXhRBC
1JZvvvnGTZ061ec6tSrt2rXzuW2s6j/jjDPcWWedZVY/eXW4B8ozK4QQolg+
++wz7/E5c+a4u+66K3hZtGiRGzhwoM/dfueddwavf/ny5W7ChAmuX79+jjx9
Fvfg9ttvd127dnVNmjTR2S8iOBs2bHBr1qwxK6tXr3YvvPCCWf2vvPKKe/bZ
Z83qf/XVV327J6ayfhZEOtm+fbvPWX711Ve7u+++291zzz1BC+4mvys56y3q
p85Jkya5Pn36uKVLlwavn7Jw4ULXt29ff/bLqaeeKpeLoLz00ku+/Q0ZMsSk
cGZEy5Yt3YABA0zqHzRokGvbtq0788wzze4B7/F8/k2bNqnti6LhuSEev/76
600chjtpR+PGjTOpn3iYeJw2ZOXxO+64w/Xs2dO3Z85Xl8tFSIhHOa+A59Di
+Z8/f773mFUfxLs8c1vcA4v6KcRSvEswNvn555+r7Yui+PLLL30sPnPmTJN4
eNmyZf7ssjFjxvjYPHT9eHzy5Mm+HTOubtGGFyxYsCcex+NyuQjJ888/78aO
HevnuCye/1tuucWf+8TcnkUfxNwabe+CCy7wfw9dP5/5uuuu8+t06As5g0su
F8XAWSeXXXaZu+aaa0za8IoVK3w8fuGFF5rUn4R4nHF1xvVZ8xZ5XC4XoWBc
fdSoUf45tHj+582b5z1+7bXXmtRPIQ7mHEWr+qdPn+49zrgk34VcLoqBZ+Wq
q67y74MW78K4k/bDue6W8Tget4pHiMeZI8yMx+VyEQriccbDrMbVb775Ztej
Rw83e/ZsszFB3qFZI0BcYdEHMR7KWdCjR4/27V4uF8XAGkk8NmPGDJM2TLsl
Huf5taifcumll7r+/fubzo8zrp4dj8vlIgQvv/yyH1dn34TF8088jsetxgQp
tD3iCYtYgoLHicf5HqJ2L5eLuLDv7PLLLzebm1qyZIlf38W+M95LQ9dPu2W9
uuX8OOOZ9GO54nG5XJQb9nwRi1rF49H8OPG4Rf3MiTOuzj2w8Dj9LmOixOOZ
HpfLRVx27drlpk2b5p8jizbEM4zHR4wYYVI/xXrfWRSPR+vV5XIREtar448k
zI9b7T1l7yvxuMU6Nwpr9YnHo3F1uVwUw8cff+z9wfso671CF+Jwnt/TTjvN
pP7x48f79tumTRv/PsP4VujCvEa3bt3yxuNyuSgXjKsPHTrUbH3I3Llz/b4z
q3iccUDG41ivblE/7xHsO4vWueVq93K5KMTf//5317x5c7/Wy6J07NjRHXro
oX6O2qJ+1pjVr1/fXwf5WS0K9dc0Py6Xi3LCuDrxuNW4+q233urnlWbNmmUS
j7O2jXic/eNW+86ieBxf19Tu5XJRiMcee8x7lLWjFoW4vHXr1u6GG24wqZ8x
vZNOOsm3J6t7cMIJJ3xvfkwuF+Xmqaeeci1atPBzS/gsdOH99fjjj3cdOnQw
qZ+CQ48++miz+skL3b59e79vJ1+7l8tFIeRyuVxUH+w7i3Ix8eyFLvQ5nC2A
oyzqZzyddo8fLepnTpx5hX333df/Wajdy+WiEHK5XC6qC/LA4HCrfWesVye3
ufW+M3xqMa5PIRcX69WZX2OeTS4XdUUul8tF9UA8jsOs5sdp53jcap0beWDI
YUFbsspFxd5f7gF5LQ855BC5XJQEuVwuF9VBtO/MKh5nnVuXLl18PG4VD7NX
hHcZqzwwrFcnHsfjtGe5XJQKuVwuF5UP4+rDhw83i8dvuukm16lTJ7N4nPXq
7Lulv7F4jyAenzJlin+Xydx3JpeLUiGXy+WissHjlnlgeMYZU7Y644EYnDXj
3AOL/OqZ+dxYp5DZnuVyUSrkcrlcVC6Mq1vG44yrs+/L6vxxCnkkrM5cpJAL
Co/T12W3Z7lclAq5XC4XlYl1HhjaNGPK1uePM6Ztdd5ZTfG4XC5KjVwul4vK
g3F11nhZ7jvD45bnj1ufuTh16lS/RiBXPC6Xi1Ijl8vlorKIzh+3mh/P3Hdm
df54dEaR1b4zznbgHhRq13K5KBVyuVwuKocXX3zR50XlmWrXrp1J4XyFww8/
3LVt29akfs6X+PWvf+3bikX9p5xyij8rqlBe1mJd3rRpU5/jhtzx+QrrIx58
8EG3e/du9RNVhFwul4vK4aGHHvJ7r9jDbVGIR8nNalU/5bDDDvNr3azqJz8s
Po/TnotxOe9G7O1j/UOuwjjM9OnT/f2fOHGi++abb9RPVBFyuVwuKgdcznov
q2eZ9tSsWTOz+ilHHnmkmzRpkln9vEeUw+WcwZJvHWO0Z6BXr15+7bxcXl3I
5XK5qBzk8up0OWfGcm4za/0Yh5fLqw+5XC4XlYNcXn0uZ88A8Tjz5PysXF6d
yOVyuagc5PLqcjnxOB4nHo9+Vi6vTuRyuVxUDnJ5dbicvX7E44yrR/G4XF7d
yOVyuagc5PLqcDn9ZXY8LpdXN3K5XC4qB7m8sl3OvjP6SvLJjRgxIufPVorL
t27d6t9dOO/dqlx22WWm9/H99993V199daxy/vnn+9wKPXr0KFnp3r27z9/I
n4V+lpwKRx11VKyfLaZ+nvU4/82uXbv6tk97KuU9oH722pba5fQR69atK/hs
ffvtt27x4sWm7YDn64MPPkh1f5IE3n33Xb9vOc4979evnzv77LPl8gp0Ofvm
TzzxRHfwwQe7evXquSOOOCJnqV+/vu9TOVOGXAOlKrwjfPjhh0HaMx7nrPdL
L73UP1OhC+2NvH3cy88++8ykD+NcJM4WfPnll2MV8jaXsjz66KM+V8I//vGP
kv+345RnnnnGt2P2WpIDy+IaeJckXwN+LqXL6afJi1konxPtYObMmT5fhEU7
mDFjhuvTp4/v01etWiWX14G3337bDR061OcAiXPv6W/pw+XyynM5cc/8+fP9
OTEhy9KlS31O4P3339+99tprZW/Pmzdv9mv66MOszshl7qJnz54+h2Jol9O/
b9iwwY8V8+7E3y0KbQifWdWPRx944AGz+smFTb9LLkXadClczjwEsRbPN895
vudgx44dPjcUYwLkhbbIRc27NOMdjE08++yzcnktYS6F52LBggWx7//48eN9
3m65vLJcTnxEe1qyZEnw9kz/061bNz8mUG6Xb9myxTucMb3QfVe0ppC+m7FV
7jtj1qFdvmbNGt+OyL1v4TDGUokD165d6z755JPg9X/00Ufuj3/8o/vTn/7k
Pv744+D185lfffVVfzbSk08+6Z//Urmc9Qx8t4WegZ07d/qYmLEpi3ZAu+cz
R30TY1Ryee144403fCxGHFbMdyCXV57LWadOW+K/HbI9E5/Sj/FezrmxrCsq
p8u//PJLH4syvm0RjzMGMXLkSNe7d+89ufRDupx4HH8Si23cuNHE43iMOJAx
ewuP4248Tjxu5XHGInDoP//5T/fcc8+VxOW0H+Jx1rrwvprvOeDf8wwwJmAR
j9Puicfpl/jccnntefPNN/09nDdvXtHfg1xeWS7nfY52xJhcyPZMH4LPiMfp
h7iWcrqc/ou5Yc57t/A4dbKWkHg8+ryhXc77O9+zhUOpE3dOmTLF/ec//zGL
x++//37zeJx3mSeeeMJ7vFQux+M838Tb+Z4B1rlFa6NCt4Go0O55f8+8frm8
eGjPPDfFxuNyeeW5PBpX578Z2uP0X1xXptfK5fKvvvpqz7k0VvE495p4PPPz
hnI58fjrr7/u8wVYODTyKHEg4/tWHicWZx+OlcdZX5cZj5fC5VE8fuONN7pt
27blfY6YP2c9HPNLFvE47QB/8P6efcajXF4cxOOsMapNPC6XV5bLGevl/6dt
h/Z4djxeTpezTpdY1DIeZ+yDeDzXGbUhXP7OO+/4e4DDrGJy4nFiUqtxdeJx
S4/z2fE4a/YzPV5Xl+Nx+kSe83zPAPE4zwB7IC3aASVyNp83ux3I5fGJxtVr
G4/L5ZXjcjxOPM67fGiPR+vccnmt1C6nfyMWZK2bRd/F52WPCOfK5eq/Qrgc
h/A9//e//w3uMArr3BhTZjywWte5MT/OPciOx+vicn6HdW7Mj3/99dcF4/Fo
/5fVuBTv7bne3+Xy4mC9C2N8dfW4XJ5+l/Mc8M+hPc56F/ydPa5eLpdH8bhV
/4XHGQOrKR4P4XJcQnuxWufG52K9Oi6zXOdGSWI8XheXR/Pjhfad7dq1y7d1
5sctxtVpe6xzw9X52oFcXhg8Tp9SzL4zubwyXc5YL/F46HF12jP153svL6XL
8Thj6pb7zojHo31n+Uq5XI5DaCsWDqfw/kAbYd+r1TXg8OXLl5vVz1p99p3V
FI/X1uWM87Afo9AzsH37dv8uS1uwaAfZ+87yFbk8P4yrE4eVyuNyeXpdzr6z
Nm3a+O+PfiBkIS9KtO8s37WWwuWMJdM38rnZr44rQxaeTZ6PQnFIuVzOOjf8
2aFDB9euXTufUyt0IY8/eVnJg2NRP/lYyXt07LHH+r+Hrp81jtx7chmyfzyf
xyOXc60nn3xywcJzTZsqFI+TO4D2xs/zPVi0g4YNG/prjvadyeW144UXXnAt
WrTwuTZL+R2Rw5PnVS5Pj8vp16P2xdkUoUrLli1dgwYN/DtEIY+XwuX0X4xn
8oxYxCHMI5x77rnuoIMOcuedd16s76fULme9On29VSzK/PiECRNM43HW9j7+
+ONm9a9cudK/QzC/UMjjFJ6Df/3rXyVdJ0LdjMFbjUuRD4l+kvy0cdqBXJ4b
5qeIhbLPolZcXp0upz3xeyHbM+tdmNtp1KiR69y5c6xrrYvLP/30U7/OLfQ+
+agsW7bM+5s82Mcdd1xwlxOPMw7HvjOLvKzMDVMv87Lkebda53bffff5PO9W
8+OrV6/2Y9o8h6zdD+1yxqWuuOIKvybOYp0Icxq0e/IT8z6fFpdv2rTJPfzw
w/5dNAlnRtGeaUfcy9tvv70s35Vcnh6XM7/CuAxxUsj2THwa7cNirLXcLice
Z27cKh5nXpAzxJjHZPyBMc3QLudcBd4nLNa54TA8SizI92fl8T/84Q/ur3/9
q5nH8TIeZ36cd6rQLiceZ36ePAoW7YBCn8O6GD4TfVRaXL5+/Xp3zDHHuMaN
G/vxDNxudS1APM4ax3LE43J5ulzOGBcOrUsugdp6nDEhPM48IG20nC7H48SC
VvE44w+cAdy3b989+85Cupz3d/Kv8FxYrVen8B0wvm8Zj1t6PIrHcTJ+Du1y
4nG+A9asW8Xj7HWN3mfT6vLv/up+/OMfu0MPPdT3Kfz/7M0PdR20Z9atci/L
FY/L5elxOR5nvo7+JLTXong8as/ldPkXX3zh43GreUHice51Zv8V2uWcP87n
tzrvDI8x7mOZX5143HJcnfPOong88nNIlxOPM65uldeQwvs78XhmHoW0ujwq
P/rRj/yaRL5LckeGuA7ey8s1Py6Xp8vljHHhztAez9xPndmey+VyxsDoK1nn
ZeXxQYMG+XWg2Z8jlMuZTyN24PctPM57BOPqjO9beJz3l3vvvdc99thjZh7/
97//7T369NNP7+XnUC7nu6cvYn7coh3w/s4emVz5kNLu8qj88Ic/dPXr1/f5
WZhPL0f9UTxObBDC43J5sl3OnmbejUOPq0fxOGMB2e25HC6n/yIet/I4n5c2
h8dzrc8vt8tp93iUz281rs5aQ+JxcoxbxuOPPPKI6fw4z+FTTz31PT+HcDnn
/jEewLiMZT4k2n2u/ZeV4vKo/OQnP/FxOu2fWIJ2WKr68Tj3MpTH5fLkupwz
uGgPnGUYuj1nzo/naqOldDnz4+TDtBxXZ36cOKSmz1Ful1uePx55m37A6vxx
4nE8TjxulV+ecXWew2h+PLTLGfOlD7JaJxLNL+XLh1RpLs8s7M0mZuI9si71
8j7AOjfmx0N6XC5PpstZQ00ullLk6C2mRPvOsufJyuVyYsFov49F/8X6Hu41
69zy7Zcvl8szzx+vayzKWCExPV5k7RglOnuFdVTca66L9wViENYmEAfyM5zP
wVqv0A6NCuPquMSqfj478XhNHi+3y6P9l+RvtMqvHic/cblc/pe//MXf/1IW
rmG//faL7XLKT3/6U7/uHQfTLmqzRo55Mtarl3udm1yefJcTj1vlV88Xj5fa
5biHvM7UhcssShSP5/u85XQ5+Z+4B7zHc/ZZ6EL9PG+cU2JRP+vkWd81Z84c
P0dvcQ2slcejucbVQ7ic9yrav2U7YC6PcfVCz3a5XM779D5FODdEIacEfXPc
NXK8l/NOyJob8uxafI/0UQMGDJDLE+By2hQuYK6afiNU4X2O2LSQx0vpcvrG
pk2butNPP92k8P6db/whhMvJDcq4Jj63KEcffbT/Lpknt6h/yJAhPi8v34FF
/XyneCRfPF5ul9P/4Y327dubtQXqj5OfuJpcvs//5tMZp587d64f78oXp2/Z
ssW/D5Gb1ep7JPcIsYlcbuty7gFthZgcr4Ys5JrGu3HyspbK5azzog+3uufk
vGE8Ks7nKJfL6cOsxpUpnOvx5z//2XRsmzXjVvXjW57BOH4ul8uZY+Jd2rL/
O+yww2I929Xm8qiw7p12zXx6TefK43LyPTPGY/U94g76XO6nRWFMghzfVvVT
Dj74YJ+j0Kp+5sZZe0HucYtngPmdU089NXYblcvlcrlcLq8Wl//gBz9w+++/
v9+rx36TXJ8hCS6nT+Psm44dO/oxT2I0vocQhbOPyO/Nn6HqzCx8ZvIBcWYI
fgpdP/eeePyXv/ylP4vJ6hmQy+VyuVwul8u/7/Cf/exn/kyGVatWuZ07d9b4
eZLgcvplzvJjrpS1jKxpDLHWaunSpX7tEWsOLdZuRmf/8Byxnjl0/RTWt3Ge
JHsc+/fvL5fL5XK5XC6XJ6CwBh4/cb5RnM+QFJe3atXK9+fsCwnlcfpRy7Mz
GNsnp5pF/ZSZM2d6j3Pf6VPlcrlcLpfLq9Hl7KFh3W8pC+Oc++67b1H+Zl78
F7/4he8XiMO3b98e6/rB2uXEhazlZR4gVDy+aNEi/75jlWs4yvHFZ7aIx/nM
UTzOfiCee7lcLpfL5fJqdXk5IJ4mT+s+MT3+85//3HuB76829Vm6HJ/w/sIa
at6LQniMMxwHDx7s99+FdmhUqJ/PbVU/7zBRPB4993K5XC6Xy+VyeemI43Li
cNYq0Q55FouJw7Oxcjn7yrn+kB4nlw7xuFWu4SjHF7n1rOJxcmLgca4h87mX
y+VyuVwul8tLRyGXs6aNmK4U58yDhcujPD94PNS4OvE4Hue5De3QqHCf6TtD
rQnILrgLj7O+MPu5l8vlcrlcLpfLS0culxOHH3DAAT4XF2ef7Nixo2TXF9rl
mfF4KKcxP05+J8t4nHvM9xdqDCKz8Jn57PiPa8j13MvlcrlcLpfL5aUj2+Ws
gyOG5QydXbt2lfy6Qro80+Oh43GrfWcUvj/64VCfObtwDjHxeE0el8srx+Xs
jSAX5jfffCOXV6nLuZ9Tp071OT/jPAOV6HL6fD4TZ/cU48NSErn8oIMO8muM
33vvvVqdlRKXUC5nnVvoeHzJkiW+b7M6y5IYnHVuzE1b7V/Ptc6tWlzOc01O
WM7jyvXsV5LL+Rz8ez4vZ5LFbf9yeWW5nPO+Lr/8cn9mS9xnoNJcTuzEPCLn
9MW9B+WA75d9v5wflC/HS6kI4XLicXLBkHedPpicreUu9Pf0f+Q04+8h6swu
xIQ8o506dTKpH1ewbz97nVtNriC3UKW4nGeaM9fynQVcSS7nnZV7+PXXXxfV
Z8jlleNyzlvj7Fjiv2KegUpyOXOpvM9axuNWhHA5Y7zkSMUpoc7dIv7n7J2Q
Z31lF3LDkgvGqn769rhzS5Xk8igeLxSfVoLLuX7GEzlnjDOoi23/cnlluPyR
Rx7x8Tj/zWKfgUpxOfE47T7u3EKlEcrlnIfGsxbq2WB+nJjU8vnkXYJ5K6v6
aaNxXV4pY+zRGsM4XqsElxOHMD++efPmWvVfcnn6Xf7YY4/5vnXdunW1egYq
weW8zzIOV43xeIRcXr4il8cvpXB5FI/HnSdLs8u5btZicAZ2TesB4iCXp9vl
Dz/8sO9XP/jgg1o/A2l3Oc8w159vPq0akMvLV+Ty+KWuLucZZr1L3L1YkGaX
83mZR/r888/r1H/J5el1eRSPr127tk7PQJpdTptgHrMu77OVglxeviKXxy91
cTnPL79f7DxZWl3OOjf+3LZtW537L7k8nS6P5sfrEo9HpNXl0TqRYt7fKxm5
vHxFLo9fautynl3mi2vTntPocgr3qph9Z/mQy9PncuJx1qvXdn48mzS6nHVu
rKX+5JNP5PH/IZeXr8jl8UttXB6tc6vtPtK0uZx9htynuHlg4iCX/z+Xb9q0
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
s5yziXdLWT+FdxTOoIvzswcccIA/g6aU9bP3LO75d+VwOe8Tc+bMcTt37lQf
V0fkcrlciKTDeY6c/WfVZq+99lrXrFkzs/opnCvG+ZdW9Zfa5bzHMM+xefNm
9W8lQC4PX+RyIYpDLq8slxOPX3PNNeZnOVYScnn4IpcLURxyeeW4nLVurLnb
tm2b+rUSIpeHL3K5EMUhl1eGy1m7N2PGDPfFF1+oTysxcnn4IpcLURxyefpd
TjyOx7dv367+rAzI5eGLXC5Eccjl6XY58+OMqyseLx9yefgilwtRHHJ5el3O
enXWuWl+vLzI5eFLMS4nj8Rdd92lNiCqGrk8fS6n74r2nWm9evmRy8OXuC6n
7ZAb4sUXX1Q7EFWNXJ4+lzdv3tzH49o/Hga5PHyJ4/LRo0f7nFQvvPCC+/bb
b9UWRFUjl6fL5fXq1fP5Wbdu3aq+KxByefhSyOW0Ga5v5cqVjtyW1s+IENbI
5elw+cUXX+z7Lvq4d955R31XQOTy8CWfy4nHOUPh+eefl8eF+B9yefJdjsdZ
r37jjTcqv7oBcnn4UpPLaSs9evTw8bjG1YX4/8jlyXc5MQge37Jli/ouA+Ty
8CWXy8eMGePbAvPj1s+EEElDLk+uy4nHyed26623Kh43RC4PX7JdjseJx1ev
Xq14XIgcyOXJdDke51z5G264QevcjJHLw5dMl9M+iMdXrVqldiBEDcjlyXN5
ZjyuvKz2yOXhS+Ry1rn17NlT+86EKIBcniyXRx4nHlc+t2Qgl4cvuPzEE0/0
fUP79u39P0+cODFWmTp1qps8eXLsny91oS957rnn1HZFUOTy5LgcjzOWSDyu
cfXkQK7vM88805177rnByrHHHutz9fJeR2EfQ6HfGTRokD9nZ/DgwXUubdu2
9TmJivkd6uY6S1E/97t+/fruyiuvdDfddFOsMmfOHH8funfv7v8e9/dKWehH
GjZs6BYsWKD2K4IilyfD5W3atPH9IPG41rkli40bN7r777/f3XvvvcHKsmXL
3MKFC/eURYsW5f35xYsXu5YtW/rxg4suuqjOhbVmI0eOLOp3GjVq5J/hUtQ/
duxYN336dHf33Xe7e+65J1aZMGGCX2OydOnS2L9TykJb5v2LMRW+M+vnVlQX
cnkyXN6gQQP/d+07E8Wyfv1677/bb7/dxGHMQZAT/bLLLivKvaUqjJswts17
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
yuX/AsbCkV4=
     "], {{0, 247}, {499, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{499, 247},
   PlotRange->{{0, 499}, {0, 247}}]], "Output",
  CellChangeTimes->{3.64317349797866*^9}],
 "\n\nIf we then add a second layer to this solid it would require forty-six \
cubes to cover every visible face, the third layer would require \
seventy-eight cubes, and the fourth layer would require one-hundred and \
eighteen cubes to cover every visible face.\n\nHowever, the first layer on a \
cuboid measuring 5 x 1 x 1 also requires twenty-two cubes; similarly the \
first layer on cuboids measuring 5 x 3 x 1, 7 x 2 x 1, and 11 x 1 x 1 all \
contain forty-six cubes.\n\nWe shall define C(n) to represent the number of \
cuboids that contain n cubes in one of its layers. So C(22) = 2, C(46) = 4, \
C(78) = 5, and C(118) = 8.\n\nIt turns out that 154 is the least value of n \
for which C(n) = 10.\n\nFind the least value of n for which C(n) = 1000."
}], "Text",
 CellChangeTimes->{{3.643173478008841*^9, 3.643173505329782*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "@", 
  RowBox[{
   RowBox[{"Cases", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n_", ",", "1000"}], "}"}], "\[RuleDelayed]", "n"}], "]"}], "@", 
   RowBox[{"Tally", "@", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", "*", "b"}], "+", 
           RowBox[{"b", "*", "c"}], "+", 
           RowBox[{"c", "*", "a"}]}], ")"}]}], "+", 
        RowBox[{"4", 
         RowBox[{"(", 
          RowBox[{"i", "-", "1"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"a", "+", "b", "+", "c", "+", "i", "-", "2"}], ")"}]}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"20000", "-", "2"}], ")"}], "/", "4"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"20000", "-", 
              RowBox[{"2", "a"}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", "a"}], "+", "2"}], ")"}]}], ",", "a"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"20000", "-", 
              RowBox[{"2", "a", "*", "b"}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", "a"}], "+", 
              RowBox[{"2", "b"}]}], ")"}]}], ",", "b"}], "]"}]}], "}"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"3", "-", "a", "-", "b", "-", "c", "+", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"20000", "-", "2", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"a", "-", "1"}], ")"}], "^", "2"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b", "-", "1"}], ")"}], "^", "2"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"c", "-", "1"}], ")"}], "^", "2"}]}], "]"}]}], ")"}], 
          "/", "2"}]}], "}"}]}], "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.643173521698783*^9, 3.643173528935061*^9}}],

Cell[BoxData["18522"], "Output",
 CellChangeTimes->{3.643173580506601*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 127 - abc-hits", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.642232653803073*^9, 3.64223266472953*^9}, {3.642298778283247*^9, 
   3.642298787208101*^9}, {3.642553552638087*^9, 3.642553558940838*^9}}],

Cell[TextData[{
 "The radical of n, rad(n), is the product of distinct prime factors of n. \
For example, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"504", " ", "=", " ", 
    RowBox[{
     SuperscriptBox["2", "3"], " ", "\[Times]", " ", 
     SuperscriptBox["3", "2"], " ", "\[Times]", " ", "7"}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", so rad(504) = 2 \[Times] 3 \[Times] 7 = 42.\n\nWe shall define the \
triplet of positive integers (a, b, c) to be an abc-hit if:\n\n    GCD(a, b) \
= GCD(a, c) = GCD(b, c) = 1\n    a < b\n    a + b = c\n    rad(abc) < c\n\n\
For example, (5, 27, 32) is an abc-hit, because:\n\n    GCD(5, 27) = GCD(5, \
32) = GCD(27, 32) = 1\n    5 < 27\n    5 + 27 = 32\n    rad(4320) = 30 < 32\n\
\nIt turns out that abc-hits are quite rare and there are only thirty-one \
abc-hits for c < 1000, with \[Sum]c = 12523.\n\nFind \[Sum]c for c < 120000."
}], "Text",
 CellChangeTimes->{{3.642553566386133*^9, 3.64255358917773*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rads", "=", 
   RowBox[{"Radical", "@", 
    RowBox[{"Range", "@", "120000"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"radIndex", "=", 
   RowBox[{"PositionIndex", "[", "rads", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Length", "@", 
     RowBox[{"Select", "[", 
      RowBox[{"as", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "<", 
          RowBox[{"c", "/", "2"}]}], "&&", 
         RowBox[{
          RowBox[{"Times", "@@", 
           RowBox[{"rads", "[", 
            RowBox[{"[", 
             RowBox[{"{", 
              RowBox[{"#", ",", 
               RowBox[{"c", "-", "#"}], ",", "c"}], "}"}], "]"}], "]"}]}], 
          "<", "c"}]}], "&"}]}], "]"}]}], "*", "c"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "120000"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"as", ",", 
     RowBox[{"radIndex", "/@", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"c", "/", 
          RowBox[{"rads", "[", 
           RowBox[{"[", "c", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"SquareFreeQ", "@", "#"}], "&&", 
          RowBox[{"CoprimeQ", "[", 
           RowBox[{"c", ",", "#"}], "]"}]}], "&"}]}], "]"}]}]}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.642553608742481*^9, 3.642553609960567*^9}, {
  3.642554721712879*^9, 3.642554738226633*^9}}],

Cell[BoxData["18407904"], "Output",
 CellChangeTimes->{3.642553892493539*^9, 3.642554809578263*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 128 - Hexagonal tile differences", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.642232653803073*^9, 3.64223266472953*^9}, {3.642298778283247*^9, 
   3.642298787208101*^9}, {3.642553552638087*^9, 3.642553558940838*^9}, {
   3.643020567687199*^9, 3.643020571301186*^9}}],

Cell[TextData[{
 "A hexagonal tile with number 1 is surrounded by a ring of six hexagonal \
tiles, starting at \[OpenCurlyDoubleQuote]12 o\[CloseCurlyQuote]clock\
\[CloseCurlyDoubleQuote] and numbering the tiles 2 to 7 in an anti-clockwise \
direction.\n\nNew rings are added in the same fashion, with the next rings \
being numbered 8 to 19, 20 to 37, 38 to 61, and so on. The diagram below \
shows the first three rings.\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3QvwdlddH/r3nPetr4OmNEAiuQGBcE0yCYJBycUoaYmJ5IyI0kRMIcol
VgOECAa8cCmGIaYDBiQc1Az1QouCOMpEM14OCBStTJmh2qpTBqsdqU4d61Qd
a+1zns/2/8vsPn3ue6291nqyvzMr/7z//3NZe631u1/WuTe9/Lkv+b+PHTv2
qi+c/+e5L3rNV91664tu//oT83989e23vfim4/P/+Zn/69ixt82HX06YMGHC
hAkTJkyYMGHChAkTJkyYMGHChDL427/929lv/dZvze6///6i41d+5Vdmn/rU
p2Z/+Zd/OSu9JhMmTJgwYTM++9nPzq6++urZeeedV3w8+9nPnv3sz/7s7G/+
5m8mGTJhwoQJleO2226bnXnmmbM3v/nNs7e85S3Fxhve8IbZVVddNbv++utn
v/u7vzvJjwkTJkyoGB/72Mdm55xzzuy1r33tjB+r5Fz++q//eva+971v9hVf
8RWzd77znZMfa8KECRMqBX79/Oc/f/aUpzxl9od/+IdV8OrPf/7zs5e+9KWd
P+0zn/lMFXOaMGHChAn/O37iJ36i81vR9UvPJcAG+oVf+IXOBuFP+7M/+7Nq
5jZhwoQJE44d+9M//dMu1nDllVfO/H/p+fTBb3XrrbfOnv70p3X5WKX9ahMm
TJgw4e+AH9PtxT3kzdbInz/96U/PLr/88tm3f/u3VyffJkyYMOHBCrz50ksv
nb34xS+umjffddddXU6vupAaZdyECRMmPJjw53/+5zP5uhdffNHsox/9aNV8
+Y/+6I+6epDrrruuajk3YcKECYcOsuK+++7rYtPf+73f2wRP/sAHPtDF+MX6
S89lwoQJEx6soM/LjX3Ws541+43f+I2qbY+AWLoc40suuWT2B3/wB9XPd8KE
CRMODWo93v/+93c5TW9729tm/Fil57QtPvnJT3Y2yBvf+MZm5jxhwoQJhwI9
rujxYgl6JZaezy5gJ7361a+ePelJT5qJ/Zeez4QJEyY8WMAHdO+993Yxcz/Z
IqXntCs+97nPdXXy/G9Tb8UJEyZMGAe/8zu/M7vs0ktnL3jBC2ZiIKXnsw/Y
IPfcc8/ssY99bNeft/R8JkyYMOHQIc5x5513zi688MKO77YQM18FPbrUyz/v
ec9rIndswoQJE1pF3AtFZ1fH3aLfqg9+qw9/+MPd8+jZ1bIsnDBhwoSaIe6h
xvypT33qwcSd+d88k7pCfrnS85kwYcKEQ8RHPvKR2SMefmrX66r0XFKBzaGf
iVwA+bzTHSETJkyYkBbiHnR0fa5ajZmvgtiH+nmxkNp7sEyYMGFCa3jve987
O/UfPLSrGRzyOe7fcJcsnf9HfuRHuvxfMZVN9Yd4upxb73vPe94z++AHP9j5
m1LZC5/4xCc6+aGX1xRLnzBhwoQ0wLfVmT/3uc8dVGfuHqdXvOIVXd2h/K3j
x4/PTp482dUguq983Z2F3itfmJ9p/s+uftx8yJIU/J4cMgd9TcTUJxtkwoQJ
E4YBH+XbOf3002f6fgz5rFtuuaW7I4QcEGu4++67u94n33bzzZ18esMb3rD0
fkCxej0ayQuxF++TQ3zTTTd1dShsmBT9U9hBz3nOc7p4+tQba8KECROGQV9E
tgLePzRf933ve9/sx37sxzo/FH2fbDLwav1EyIhFGeV1X3vttZ1vqe+vknvL
XmHPeF+KewV9pppCz6tPb+v5yRMmTJhQCng1HV+fD7r5UP7MtlgWr/C5ahEf
8pCH/B+5XWIlbB82xrLPlBOG3+vHnoLff/7zn+/8a3IFJhtkwoQJE/aDOIAe
g3xMufNaxTfmP7r4df/35Iq4PTmy7H1RQ873lcKHRZaxPZ74xCd28f3JBpkw
YcKE3SBHV1+PK664YiXvToXg2WLieHb/b+rCTznllBm7YNl72TRsBfXwy2In
+4DMYHe56/bQcpUnTJgwISfEAfBtOrh83dz9afF99oPaEnGM/t8i32qd70zM
22vEVVLNib+O7XXrrbdOuVgTJkyoHvgUH0zpIYZ9zTXXzG688cakPHnVM5MZ
8q/o/Iu5uKXkB4jFPOxhp3a9WkrviTH50iZMmLAM0UdDDULJcccdd3TxY3x7
jP664hfyZS+//PKl+cF6bR0rJD/4rtSDXHXVVcX35a677up8fJM/bcKECYuQ
m8pfxOeOd5cacq3o3Gr6cvcTFJMXL4+4x7IYfUn7A+QHnzhxosvxKrkvfGlj
5TJMmDChHYgvqKHDu8Ub7r///mKDzcGPdOEF52e1P/BAObfqz9WWrKohZ5t4
zSqeyafD14a/p9bN5e+qLfHZ9913X9F90a9F3aVcATU5KZ9zwoQJ7UINgxoH
umXpucDHPvaxjm/mjH+QHfgyubmub4maQ/m7q2QDufOsZz2rqyNMlX8VEP84
5Yu/aHDPrxQgx8kw+6J2P/WzTpgwoT2Ii0Z99aoc1bFB18ej+NLw79RxW/JS
vHybPiFkGX+an8v+zseGp6b260TdPdlUS9yarLz99tu7mIxY2ZQXNmHCgxv8
/vz/td3BjS/zlZBrn/3sZ5PNjezwmXxk29g2f/zHf9zZZot1hQH9UM599Dld
z8NUecbhTyS39OVN8ZkpQF5En2D2lrUpPacJEyaUAd1bzYM6vdpionioPoX6
HabS7d2tgffpg0g+baM/e41aFDJWD/mIk5iPuAD7gB2zzge2K8hytpeaxNr2
hS0kR06uBX/WZINMmPDgBB+Ru7f5ZmrkA+Fbo9+nsEHYEHKZ9LliU5AJy36S
F/334ZnsAXXo/deJi1x99dVJeicGxBWuv/767vPVfdS4L/ZCTrE86ymfd8KE
Bx/4IcQA+LNT9G3KBX4hMi5F/93oA79pLMoP8N16ZJEjXsO3JgafMmYUtg6b
y70itcQ9liH8dn7WPM8JEyakBR33pS99aRf3/cxnPlOljtuHWAXdf7G3yKFB
zxL2jH3x/6Xnsw50Dn5PsfSpT/CECQ8OkBVy+dG9uELNtkdArEI8QE1hbfGA
VIj7B+n07JrcPb9SQPyHbah3WO06yIQJE4ZDzpE6MHGF3PXdKSFWwwaRz1t6
LqmB90bNC50+d7/hVCDjxPj521o6SxMmTNgd/NTyddke7kNqSZfnc9OLCo9N
metUA6KuQk6THlOl57MLyDq2obhQS+dpwoQJuyHu137hC1+Yva9tDrA91ESw
RQ7FX+I5+IH0jhGTajGfSW9FOWlHd3BNmDDhwCDOgc7ZHuIfLfjXF+EZxEDk
jR1KLJ28kB/gmciR0vPZB+wn50pdzao+YhMmTGgTcccF3w9/das07jmiV1eN
tXW7gj+RLD/n7LO6eu6Wn4ffzXMs3t84YcKEtiF28NrXvrbTEfHfln0/nuXV
r351159XbUjp+QyB/h/u59UDoPZ83U3wLOoJ1eO3Ev+fMGHCepAV7kUS4yRD
WvRb9RHPI29UHKfVHkxRK8iWUtfYskwH89cfxr7oG1x6PhMmTBgO+rp8XTpu
izHzZeDnueeee7q8Uf6SFnlv9GXUj6tlv1Uf/KJsQ3buqn7FEyZMaAf80vjU
ofml9YbiK5FP1prvh7y79dZbu31pLV93E+IuefGcFmpTJ0yYsByRF6MnxqHd
94MH673EBpFX1pIOj8fKQ1YrWHouqRF5fmSI3IAWbcMJEx7sQLfomI47NC8U
T+D7EnegL+svrgfrtjzb69yHpNfWkHkswhzEbMWgza0FXhV9o9RLsKFSfJ51
6O+NWvBl+oI7n9xluM0YYjvYZ/0NUve1nzBhwjjg01GThoaHxMzla+lvJFZN
pzx+/HjX/1yPcTGIbfrP4m945qo7mIYAr3vSk57UxaBbyEtWA7nuPqpdQP6I
VZOhavPnv+ruu1WHQXdYjHexRb1mmzGkH4m8ZP2DzUkvr6k/74QJ7YC+rz5C
LszQvkRqounKeBKeh08bYvLkCT61SldlD+Dp7l167GMe3cVWh8xlGXw+GSmf
t/Y7VfFz92aQdyl61lpPPU/ID/EUdfmxNxdffFH3//38NDEwuoDXrRoxv6G5
FnSGG264oal+XhMmTPi7vqjydemmQ/kpnkOXJIfCX+Uz8QQyiu9oWS2415A9
eJt7vOe/ymJ/ABuJrstGqtUGsR7667I9rGeKPGr2n/2xF/29wbvtjTXZxXfJ
liR77NPQdTQPtqE5mGdL8akJEx6siDouteYp7uzDR5bRPv7AF+MOPn3gl/39
2IJPJIf9AfwjeJ5Yeq0xWzL2sksv7XLGUt2XYa9X7Q2bjy9r2d6sgviJXItU
dpyzQ4eQO77tfcETJkwoh85X9NjHjnIvnFjt/EdXl7j4t+hJbvBxHctofwBZ
yb9/+eWXV5drhsfrr8v2GKv3GNnOBmUDbPN66yemZS9T1mSqKWSD8I1NNsiE
CfWCjifvhc85951w4Z8QG9lUW3LUlzWb/RHzIace8fBTO39Jru/ZB54fDxWn
GaO/LvmJX6uN2Sb2QM/g6yR7yfuUdoLPtu90mtbqdCZMeLAAnd55552dzqkv
VG5fQfAoPhm5ueteG/Ijp/0B9Hp+O7yqlj7odHl3Y/CtWYdc+0K3N+gQZIE4
+LY5zfi6/Ajx9hy2m1g8+Sme3nr/nAkTUgJ9Bu2WHGLI9Ed1v9vk1A59Zrmj
8q/0Ht8Uax3D/gjw3avNI6tK74nBn+hOWjw9Zz02O3D+o3t2egR/1Dayw5zI
DXZrTvuATWhu4vlkVOlhb6Z4zISSCD6qDx76KPVTjJT+qN5jjDskyCc6Ndvj
E5/4xMbvG8v+CLgjhB/rjjvuKLo3+Lh4Od2bfM/5zPi/+I89sc7iH/T+dTwy
elE6O7njEz7bOrCP6Rx8eaV+GnffffdU2zihKNAnHRxN8JvIMyn1U32FueTu
z44P0Ffpu/JQt+E5Y9ofgDecPHly9qVPftTsmRc9rti45PxzZ2c84qGj1UDY
d/YEG0wu86aayrg3V85V7vvL4/5hd4SQ7yUHmS6n3DmZahsnlAKfBF+7ODL6
KznYIHzs+EGuGgi0Rq9Vf87+2DZPZ0z7Q9yDTMW7P3nvd83+wwfeWGx86sdf
N7v9RV8ze/zjHjNqDYTvYf9Yh1V9cKPfuv6/7KTcfBSvluvtZ87v2QbOiPqY
Zz/72Qdzj+WEtoBn49fiDTXoMPKt1H7xYeHXOeKU6gPUNe96f/qY9ocavVNO
OWX2L+948Wz2m+8uPj79k98zu/qZ53e8KnX/r3WIu+JX5aKxB8hzZya3Hwet
ODf8azX05I17LPn6+O1qy/eecNjAm/lQ8ercdv8uUI+hjwc/b+oYOj0W/ZMd
u9YljmV/0CU9/7WXXTj763/9zuKyw/gfn/yh2Q991w2zxz/6jK7+fAxeFb2J
yQ8+xmV/5+NinxzV8GSdi32P2pdaYtZsdL1c5JzU3vdmwmEBP0QPNdjifdDt
1Puyi/jUUtkgZAf9ma66T037GPYHG5BPDc/89ffeXlxu9Mfv//wds2+46mmd
bCPjUvAquVKrcqwirnHpivwGMoz/xsgtz+RzeG5np7beMvZCnvMYOYsTJgAe
LdeF7lYbPQCaEKfk105BEyE7xB35X/bhfWPYH2pe9BJ85TddVY3tEeN//Zt7
On/aE889s+NVKXg2W0a+BP8U/5N9Mfy/WJj48Kp6DmvFdpZ7NXQe64BW2Oli
hLnzOvaBOJG14luzJlNtyoTcEJeUQ7JtX4ixgUbp+fJX2UdDaRbPl8sk9ok/
4zvLBn/J4jzib+yh+a+6OcXvUt5vGj2/HnXGw2ef+Vff1/Hr0jJjcfz3X/vB
2Q1XXzJ75OmP6GyCoftCbsiBs6by/6ypvrn+3yCnluXvkif+fsstt2SP26l9
sfc199a3RvKXnZ8pn3dCTjhr/KX6BNVKD9DPlRw6Tz6hEydObByLvjx8a93r
U9Wp+J57772341P3vPabZn/18XcUlxWrBr/aBY87q+srMjQXC+9na+od4zzK
idMvkU9KnoN9XyajyHkyJ0VvzXWIfA7nUH+C2myPQPSajF5hNeTCTDg8RI9X
OngK/TE33NsjD8m9ELXPdQjEAfjXrnzaE7qc2dIyYtPgX3vIF35BtfZrCvAD
RS8y8fvaebL5ygvhx8rdN27Cgw/9fJWc9RWpITYozp/bz10KdHhxgMecc+bs
p9/60tn//I13FZcPm8Z//ZV/3tU18jcdat4oe0ONHr9QKz0T+VPtiXzeQ9a3
JowP8oIfRz5LqvyZMSDeLR+Jf+PQeFX0h7cn/+Rrv6LLcSotG7Yd/Gx8TWRf
K2dpWzhn6mr5E/nKWno+uqGYUisyb0L9iD7lah/karTGh+W/sEH4s0rPJSXI
dHdVPOW8s2cffvt3FJcJuww1IVc+/Ymdz/2QeFXUtMv9UoPUmi8o+gSbe+0+
twltQJxRHJAtPmb9cCqYPz6lx9HQO61rAT4l3/LC85/SxRP+5JfuKi4Tdh33
v/MVs1Mfekpn1x7KvUry4MTv1XvkrkvMBfkI9K377ruvyflPqAd0ELk98uyd
qxbp3DOwm9CEmGZL/oRVkGdJR9Sj8KPvua24LNjXBrnpuks72X4IvEoMWp1P
9PSpoU/JPjBvsRv6Vsp7GCc8+MC34BzdeOONzdnifbA71BPKPd5011PtIA/5
E897zDmz73vJc6rO11031Kj85o+9bnbuWadVnw++Dfh15cHRtVrvSSi33J0t
tfWXmNAO6CH0df7Qse6szoXomyufUi1Xi3ZUQO9U+uFXf9mTZr/3oTcVlwND
xl987O7ZHd/+dX9Xu1LZnbu7gE0bfh89pVqmFUD78nn1V6ypv92ENoAexDrk
g6vTbS1mvgx8PmLp5OFRP5HmQA7SCR91xmmzt9/2/CbydTfZIOrl5fPqiTPG
HSE5YF/cPyO/vZZ7g4cA/bOh5PPq5dC6PJwwLugffLjkR8o+GyWBJthR8hPJ
xBb9JeZMV2d70N1L8/8UQ6+ue1//ws42bDWfV96rWlV13C3OfxnojGypuJOt
9HwmtAHnX305Puv+09LzSQl+K/VR+prwZ7VE6+aqt/DZpz+s2Zj5qqFu/uu+
6uIuPtVCb4M+xNb4rfRkaWne20D884orruhyNVrUtyaMDzyWf50t3nLMfBXU
0dOpxrpTNRX4E/VwfME1zyjO73OMD975stmZp5/a9TdoxV+KVuS1q1H99Kc/
3cScdwG/nLgOn6/6qUOTjxPSI+LMQ+vt0BZfML6HZ/OD+fe62DW+QWbxvXqP
XCk5hClrmdCA+0rZV63kJAef0l/3P334Ldl4uHiEPrmf+7nv7+6+/eV3vbKL
T/zRL741e09433Hz876yq52Qz9uCz10NjnOk5iPF59lncbqgGbWI7JtNucDO
tPf2aUfPnhRymI6lN+8NN9yQvefkhLbh7Ip5uOtiSP66syt3C12xY+a/6vzD
4tfk0jJbGC3yLckV1qPRe9QG6H8onzAln0efXc/BK6/s6p9r16viLtY3vuy6
bPxbPYa7ZuVDPf8fPn12xiMe2u3BMy44d3bz13/l7N2ve8HsP9/31qwyRB29
/rzOSe29xOlCzpCe8SnsWHlO7kbw7Gjm+PHjXU9htbtxx8my9zm73ksnkjMl
5j3/deejTVFXQ447f2yQMe+wn9AWnEPxMvrU0Jg5fymfsNoR/y8WT5aQS/qg
LDuHZIV7dviV+Pm9x088Xh9EMiSlHWIOYtFitjXTBJ2SP/GpT3rM7L995O1Z
+LY8rk/9+Os6uUFe6Kf1Hc//qtnLr//q2Uuee/nsec/60tkXfsHfm736xmd3
/Q9zyQ+2z+0v+pqu9qD2XuLy4Jwftakp5imvPPok9GmG3ckmQ5vL9C6yQ/1M
3K3sfYYckVR1KGSXPgHXXHNN56erXd+aMD74iuj9zsnQ84G20BXdPuwYn+nf
aAM/XOyF4nvpOfhl8HM/2eJkCFpKecemz0KbnrlWmjAn8o0s/sk3f0u2fF0y
Ad8mO37x7pd3/47vUp+oN6NacTbJh+66OasNoqbw0ovP6/J5a+0347w4k85x
qjmyPZbRDNsGbdD/F++McYbJDnqZHKmccSM572SU3pCtxKcmjAN8mt2s71uK
fnar4hxsYf1QxFcW68VW3WUdc5Nfn7p2HE2weehtNfrbPS9fxj9+9pdl1fvl
Pz3u7NO671lVz/7vf/oNnQ3CNskpP8gtPrSzHnl6lXdnmA8/q3PDF5tqfmhm
mc84/Ef6FfMJ9/8mX5hfeIyeCmSG3AYyhH+6Rn1rQhm4rw09OJ+56dV3zX90
9vi272GLew9bJOVcPKt4C3lWW50Luem+Lnz0/ne8PGutIPnxhEd9SXe/7Ko4
uR6NX/yQk50PK6f8MMRZ9OcVW6jNBnEG2QJ0jrHyE9UtRT/4+J28Erm1zshY
ug+7S006X8Bkg0wANrCYg1jgKhsgFeKuTDEWdsg278HjxUHwkhw5kp4ZbfJH
1GSDdP115/Ygv1JO2yNkwz/9xis7/9WvvvtVXSx98TVi2/K/Pv6jr8kuP4z3
ff+3dv4yOm/pvQjgmfi1s2h/xtDB2SRi4+iz7xtgczi3Y+o9aNFcxGnI0ckG
mSBWwTeU0hZfhbhbhw6z7Z2AdDzyLZe+F3kD/AC13BFCtyQzH//oM2b/3//7
quy8Wt7uv/2J755de9mFs9NOPaWLneutFTbPr/3wd87OPfPhsx9/001LZUuO
wY/2j778KV3NSy09mPRkl9ekp0fuejrnUtxaTISdIfbR12/kF4iLRa4vuSbv
gL9TzMzvc9AzfTNiP7X5Fh8scDYM56HkoM/Ta8awxT2v7+M/5TPahv68B08X
4ybncuVJWQv+O7mP/CW+h95X6ifbDJ96x2uuz1530ZchZIb6RHEO/nb//w1X
Pa3LwRLXHrvf1m//1Os7eSZGXHpPxLHRCf6sLiPHOQywb06ePPnAnQPk56Ku
T4bJ7xU7l9ttkLX0ID/9TZwmh58pZBfa9Pmlhz16sNhCnhOvFgfgzyw1+JHQ
Jb45hi1Ob5FXiP62sblD3qAPOfC5a5f4mNEsWUXGlRpq48kOd3v8+ntvH41X
y52VW3XdFRd1d1L96PfeOLvyaU/oasKveOrjO39Sbj/asqGvyYkTJ7p1cXZK
DboFmSrPNrfeTb93DuXtijU4m+LrfRrV62X+o6sZIdtCtzI3ebtq/sgQNbKp
52se7k22HmKHJQZ5SYb5f71jDukey3Xgm8APPTf/dsmBT/FlOp85acLZ5rcS
99imBsn5JC/oe/iGOqjcNMsHQH7w5ZXeF+t0yfnndr4rdkFuHs2ukLfLf8VH
Fb0Z1ZuId/Ajyc8SOydnxpId5kGO4hPsZLURpQYfkn2Rfz5Gj100QLfmt8Iv
yK2+LRHyY5V9wWYhh+Qupsx7B7xa7AXfJp9KDjYWOStOVnMdVwrEXeLOoee2
D6UG/6j8SHoVXSWXfo/vs7XoQuTBpjvNrJHXiEngG+J1uXM9fD5/Ltlhf0ru
C5vL2fDs+PUYd9P6Dr1D6Pr/5f4fWMrH+dLEs8e8a13NCx13l1y9XIj75vmW
5NOO5fv3PXSuRbtd7ZIa9VW04X3omn6YkrbxaL1MyI8a7smKfbE+hx7Tpwd4
TrpUDfcERI5o5EPlkN98Y/Idt+2fYw58vuwOOtcY60SPId/0Ssn9XduA7og/
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
Huwy/urj75g96oyHd73uWjtPm0BHuewob6ml+iKg96Jz+bqHRCuehe6rN9g2
d9iNjfB90nNT9DKoDfwlbHL0rh6nlbNl3mq7nJta7dYhiHxk986q3y4tF7YZ
6j30iifTU8fM7fG2vIFfk39WbZb3pOoV5TPEP6J+qhX5yE6Pe3CGzrnfT8X6
Gj5znf/bHsRrV40h/nPvlXcpBqqnVE08TFyGzZfi/jrrLn+DPUN/4Rv273Vr
Zy3sD52U3el93m//Uq0T3UTtgRzY2uT3MlgvtiB9KvcdRL7LHsX9s/K7xpBX
9lyvPLxY/3V6fWn5sGnov8L2ECNMvR70Zj6Kda9hT8vlVCMrhjT/VcdTvDd6
Dg6dB9qTcyJPTg5KTbxqGZxf9jmZJ/9nyHzjzna1C2LB9Df37KoDkMe5KjdN
HOzYht6pQ31P9En1hHThWmJuaNic6OZD77R0fuXWiPM4e/Nfdb5Utfh0tWVn
O2IUzr+7mvSU9j4xC+9jL6SIe5MZbD/1E7X2O+/DWSM7xG1yxf3jrnY5XeSq
/OD5r7vv5PMbI4bqzKj1VL+NN9PvS8uIVUPfFbbSWY88PWkszf7SndxNsUl+
0K3ILvwq7rOwfmSIHmPOdorzon5KLlYL/Sf0JmF7OLdDc4/p9p7bPlhPfjwD
P/L7Vb0xQ37E65eNoflT0c/Ld4lP1eCTIFMX7ybeF2pd2DHONVlAh9F/Rh2o
M+5MLp5t8st68J3Zfzq395Fp4jFRh5KC3+PJkV9SM02wxa2XfcnZ/4bsEBNy
9y8+ZN0N/Ikc9/+5e/Y7D+bg3Hz3t1xTdW8sfVfYHvSaVLTLh4f2xILouevk
B76FrpwNPDPmgIacbXvobC+7a2NX4MN0CjxzGd3WAvOU30ovTGErkR/ubrEv
6CPuwqJL+T3+scyO6NkfWRH1eXht6d7b5uIskrMp+k2jK3or2yrOtnPHvmAL
kiWLdZRh/5Cr5hPn1O/9jj/TOU5xfn0GfYqdy5c49PNyIPqd46fOa67zYS3Y
Hfae7WdfIucO3bAj8TL+pdy8I/J56fW/9sPfWWVd+u996E3dHVT4RAr+HKCX
Huv5ONbJDzzNudCHfPFv9gi94G/Odoo9833Rg6nW+mfPzPZK1WeCvrSs5jD6
B+l3jyYW/z6W/AA2JnuoZH8Q66H/d8o6GzJ6mV4WvXzpCIvfZR6rcu28zzp5
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
uj47pAa7HL90Zwn+KUaTa+1rlh8Qd4TUEJ/y/WS6O17Z5KVotLT8ALmYbBC1
6eil1NAvjW3OFnr8o8/oeGjuHon7yI/P33/n7J9+45Vd3EPtX455ifeoKRRL
ZyOW3BcjcgXtTUt1p/sgdBg0wY8lt6bkIDfEAXPzqSHyI2f8I8BfGrouvUru
V6kh/sOXeP311xfNP6pBfkT/1JMnT3bxsJKDzieHUr4uPp1TduwjP9gaag7F
PX76rS/NKt/Uu6gpFDMtvS/ig+Ieh3CHzDYQB1EPIr8CXZQcJ06c6Hhm7l6u
tdsfoObFnhjWpdTw/Z6bnVoyj6QG+QHWQU0SX57cmlKD/EAzL7/+q5PVe6SU
H//5vrd2doe4h5q/nHP76Htu6+QHPafknhhsD3LsEO8NXwT7Q04mPUaOIv2y
5NA31Nqz/XLeQ92C/CDT7Yv8uJJ7wlfC5lJDZ39K+dNqkB9oRc8vMsT5lJNW
atgXedQXP/Gc2f3vfEVV8oPtwaf29Kc8upub/iY55/a8Z31pNz8+vZJ7YoiN
yYdjrx9y7Bz4iNhanreGvhnRpx2vynlXSe3ywx3i1oBMryH+pq+StWKfl+Lf
peUHWuFftS815Io6F+x0eRZsEHlOtcgP/jR5UWr8csdlfvR7b+zqJmvpjxd1
g/outX7P3Tp4LnWRYh819bKMfjFoNZf8rjn+ofZc/hlbvKb4G5kmpq9uqES+
d0n5gVbkVfOt1pRXjV/qf+xuvtwxhm3lhznIJWZ7/PuffkNW2cEvdvUzz+94
dU29AfAtPdNavZdhG3hGuksNOT59iB2rB4o67By1N7XaH/bBuaPjyq3O9T37
gL+E38aZKdFHtKT8kFcj3iAHrSaZDvaCz12cQa+q0vLDHMTM3/26F2SVHXKD
9dN65OmP6PT8GnJ3+2AbiqWXqpfKCXxKP8iaagz6EKflKxELyaFX1Co/PvrR
j3bPLDZbGz2AvDj5cXLlxuCjakmtu8Eenf+qswPk1Y91X6590FdGLIpMr0nX
CrAN1dDx5aSsIfzkvd/V1W8Y+ieKUce/9bNafL24h54nl5x/bhc/zyk//u1P
fPfsyqc/saOVmmyPAPpwzxXZjq4PyY8lJkt2jJGLui/41sQq2SKpPhPfoavg
QfN/drzav41lcpTtE3/XS8V75FiII/tdyp7eZJqcXfxZnLbG84Ym9AiPHLkS
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
pOhb6fmdc/U8/HhyitDBqni8WJjv5cOx9s6y96euO4n64VR97VNA7ZB1t05D
5bazz6YXV5THMf9VZ0/i2fx363QZPAkv4WfCM73P++XWp8ijiHwZvKqFXsLO
INsj9Z0V9hg90PnXvU6esBpSOfT2YP6rTue2l3SCVLkI5KTYDl7FBqmZV+HJ
9Fu6Vo6evmjQ2d/0Oufi2IZ7AobEMO2Be1P4S8Snate38G17QuYN9Sd6bufR
OccXT5w40a2nfbH3iz2k+TX0Petef/ZZ3Wvtj3/bz5R8Hu2qpcdf+SZK21m+
35pYpxQ82jp6NnoqeW0v5MXjN35/xx13LNVdo8eyNdeXXB6Y98ZIxeudLf2E
nbWaaYIug2+LL6f0J/os/Y7I9k3yQ8zFftoX9op9oHvrk2Ru6CaF7x+vMief
Sa+q2Qah3+AR+oCnpF37Ym2dy23lB5rt08jiGEoz3o9efY+8v9K8ahXQsTvK
+N/J9KH6B95lD/iM+YliPe09/kSe9u/wcWb5CZyJ4FvsSPkVXk8PTGmHRHxK
38vSeSfBS1LVptDvra2z17+P0jPTeZc98wP3x19wfqdro6WcOii7kg3Cl1Wr
ritfV11Byr4FYlueO+zCTfLDmWBjLO4lPQO9shNT5df7DufD3OxPjfuCT7Gt
8Qq6fao52muyOvZlW/mx7m7YVPCc8jHNqVZ9i2+VXZzqntvg//hQX2b6bHKU
jPdd8Xs0ym6mS0Uv7LiLhj3EhkuZCx36FnlZslcnmcg/YR6pckis3zK6il4u
x48f7+yv/t+if5t1HiN2by7sSjRYY8zWGeXLYSelXA+8z5184fvYJD9W6ZvW
z375rJQ+HHtBh2CH1JbDEfm6eHzqfqL0GHsS+1KT/PDcnc11dPdSbT5fPdSc
Y/pMKvm2ioeBM4qH0f/jd167iuehZa9Pfb+K88c+osuU6GVkjdimZCn/Um59
L+725UtclB9ks3nkvJtuEWQnPoVWa6IJ8wp/Yi49/Oh5O9/YPu93dskP80zd
WxOPpkvW1IMpevrgU3h9zppmvKYm+QH0O3ut1iXV3csp4Bzzi5PpY+QjRUyI
DU+H2Ob15Aeel+N+LrJMnQt//9j9IePubHxgjO+212LrYiCLfVfJE3uCLs2F
HkGm8HMt+k9SQvwp6r9q8JeQ6c4ZWSq+n2tfQn5ssj8WYY3wEryUD9j6pZa9
9tu5FK8fkj+UEvYBjcoNFaPIeVZ2kR/iMOgkaIUstz855kfHRKNyf2q4r8wz
dr0y5nMaI8eYzuQ7yCuydBsdwnv4l+xnrnoUvjtrMGaPSGeM7eO5yNMxvlcO
Av87ebW49uZC3ybT/T8ZM/9158PhG+ZrxFdSz9P+8pmlzo/dF3Q78SF8nU2a
a192lR98SWhVHqd8RnEKdJFLvomhsUFqqHnBKz07P4G8gdx3GewiP471cq3Q
D1qhf+S4Z9o6yEsVk6uh7z5+YD45eTPgjz6fjkvPFCvf1gaLOPdznvOcbLEj
vFR8ikwby+cbtnhOHbcP/ArfIReW1e75PTvA+Sdj/LTuflobebxoN8dcI+dF
rIHPpOS48cYbu7ngATlrmneVH0f+1W7YK/IcbeSUb+wbfgnfVXJPnFc+K889
Rn/dbeUH3olGYqAV83R+8JIc92b7THOzFqVpRU6T86EOJicPEx+e/+hiGPQZ
tLCN/UU3FeO2VnyyOX3k9C226Fh3hES9Fn0/ty3q8+kr8kCd+WV6vjgs/cne
yFmIOdkDst4ZoffI0Uo9P3zQd/t8/gn/z+4p8ZPObV9y1zTvGv+g69E15JKw
3/kh2R90n1wyxHd052JOFyX3xPfTX+idY/Ry3VZ+LAKtOMt0j5x36LKP2T74
Ktu91JDzw8e5TQ3sEOCVzj7ZQQ4Y9Ih1fDP6HYrp00tz563JkRMLQ5s5vycQ
vaBuuummrP1orWPkPNJ1xceXrTs+obfkqs+xPuhYzlTqOTof9BifzT9DZ/Bz
7OF7+djJj9rsj4D9ZCOjH/ZBqnzJRXh2PILPSFy0xH7EntDt2IXmMkavkn3l
R0DMKPwZqetoogesGEjEXUoN54L+wzc0Rkw/+mLg0Zt66JHjZId9pPPmrpvh
V6MzjNUfD83jUZ4PneR6PrKJ38mz8R+u4jX42Dr5Qebgq0bq+VkD57CGvu7O
JLpXc5QzJ29f+dF/Pz8jf0mOeAB6oPPXcLdU5F7ZE/pWbhtkqPwwX/yNbp4y
pmfPPT8/c466+11Bx3BO2Il8jGPE9OMsRD3lqnmFb22MPnv2Qg4WPjtmHmnE
XfiVcuW5eCZygY6/Tp+23uyvdX5Mfz+KGSYDXYLPqJa7hdEAOetZ+Ypqy7/q
g06Ox6euf3Uu6frOZS151c6u2gf6C5ukhvyrdaCDzH8k9ZvEvUBotXROA0Q/
WjoM/W+su0r4bvhL8LZlf+d3Df9h7ni2NcAnnJex+/74rsib9ayp5bfcTrE8
Pzf5Ytii1nxVLZ99cHZT3vFGvxfvIENr6svgWfFm/roUvRiWIUX9B/uDDzr1
PTHoko5b292X9oIf1sh5N85Q+UHnEKNI2QfG5+DTaLSGPMUAniUvBw/TcyS3
voEWxXJXxV3Yy3geu2OMnv58Y2jQXEroWr6TrmL9U+m6cY9I5M5sw5udSTyD
LF2U2dFL2uel8u/5TDyaPVMTPQQ8Jx6CZnPoMNvYH2hhWc60f0fdEnme0kaS
K6mmU55FLbZHwHPTs3L3gtpGftD7rPuyvYm7NlP6TnwWfQavrknXgui9aX4p
6o/Z0z5nWc0ZmcBnYX37+k3UCdJxU/dFWwV8AZ2IE5pzKZvQOtDD5TilmIOz
htfLKbS3q0b/bIceQXbTP9kGXkPPQyt8YKl4imdk7/iuVM+cA2Lp/EMpc0bp
kdb1SGZ2uYWxH4v6EhrBy9iP/ATxPn4MvqXo6ZNq/aLGGQ3W2meJPA09PGV+
LFkQ+2DNnff49zL9wRrxodgbsjz2Rj4lmzLlHWnsLrk2Ro26FsRdJeqShtpc
fO3qxdnXZDF/qvXFo+O+5UV9H49yJsgxPMs52cTzhiB8R/QMP0vXc/JpsslS
xMXwlmMb+kobizU/6ESeHFso+rb7GfdopsoVdb7Y92i0hpj5KuBPYrb08VS2
8GVzm+HYiv2w9v3X6m3jfEb+qtfgWejH+pFrqfQs+0p/sCelbPFtIf4hPoVm
Uj0/H+qxFftCx1l8vfU3B3sRdYTRj5ddTaak4Cn2gT7tc9FrrbqWeYbfc2gv
Jjaw3EJ8CE+M3u3ipM6n/N1Fm5vcOLYFz3PG951XH3gD+VbLHSB4M15BbxnK
q/ig0EMMZ33ZWBbvcg6cfbzMa/hH6ACp+Cd6j/x4dlJttvgi5JegiX6vzyEg
h63rsv1Z7EkGzil7wz54LZuSjkvHSqnzxL1eagpqtT0CzqJaPfwkVY6c897f
k/5YdvcLOmET2gt2qtfhn/zhqWIe4Qtjz4QvIcXn5gK+Ya4p8oGsITnCX8km
Rh/4Bl/NMt2GztOnpWW8z79T+BJ8vzPBP1DTHYTsNvrMNn3BWkXY4vayhTs5
2WR4KhusBj0jByKXnG5HP6vZ9gjQfcxX7UHtOsi+wEOjv+sYdfdDgY+ylch1
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
unM0DrVmkMmPY4P38EFG5a/YDnJXr2VDPAR8w+oL4Pm0yAuUo8tOUL/AbvBc
HPYOu8b76W9O7c3e8Q9rkctAr1+STxy8X+CP2xMt5mrzceUy6dmDtyULDv3c
z6O3d/jp9krv99O+l0/M92jpd7UE2UkHV659qzXKla9ncP+/07Oq/7+0R3wv
/6N667M/Rp39Y104X3K9BecpZ9u5xODme8RBr8g7OebD+/30mfvP3u16vtc5
Ws2prL62fA9cWuIewSGwc72PS/tl8Ledh+38Tz+fPn3z/3J59+cm4HdxA737
11TvRGshS0fulyNeyUcSs2zhGwI78q1ns/t5qEffIbh/lY/dYk1AX4rLkn1s
+9F8jzm8qxWfarHO6mFVszboE/UNfORT55cPduxZtuiFCvg1/AT5sIV5OcE6
wBl578QsRuhN0AvsR7EFvs61euAtgRgN+7LFnKJRUX0o6Ep+4ehyii5Xw8XW
HylG0xquE4eGU+5dJxZsH2wedhW7d+219ABbrnKb2Hoj+x4FslSMgm6/1Top
11V9bemRLXAkZpVYL1vkFuVq5QuIi8qlH3UeSzAOvCNkFdtqtJhyC8hTUY/G
799Sr86qwcQNbmXNl4KvW32Z6fSR+lOfAh3HVxdDazl3fBSwrSr3i5++9nqC
8VE9qu3lEWeVLIEcJvFhvBWffLTZEqdgrexAPsit+YbyYNnwYuat5vldC+Ln
4hXidq3iUyOAbvQs2JI4iVu6tqAv2H96RsvVG6nP/xJUL3J+h1jgFjlr/LN+
tOIDI8eWHwLXIReYXuxZK9kT1s83bJG7OArwEHrPXTprIQgKbA+ySs6PnPQt
2YPHQCfiGqqv1BbzA8hae5qsvQXf0HtVswbJqS3qdMDzqsl23IK9Zf+rFZQD
ttW9EqwL3Cd5i/vcOl9CTol14q3kro6e23MMrkN9BP2hN9RW4gTHgBPRi8/1
sOG3LKfkyvJBxG/WXstS0Ie4RJxiYubBu6ByL9hU9viW+U+5PfYCe0oO7Jb9
Kc8Bz2Mmhl7Ba6/nXVG+B52uBmfreWVkrlpP+cdslbXXswTeq6of2fJeCdYF
LlrsTAztmj2rW6J8cTkytxA3sJ/xPOxD8amtctN8jerv5flsXU5Zv3w+el3/
ha36UngHHO8o82mDbaN6icvNv2bP6lZg1/I7xM17z/O7Fuzrqef8bl7iFnWi
XAY63Xu1hVqPS8De4hvq++j5bE0neg7mvNEftxDHCdYHWSWGJpaO+9mSTWL/
ytclp+Sxr72elpA3WvOMtpbzSs6KmdPrl8wy3hJcj2sTZ9uavaXGg/80Wi/q
YNsgq2re7igzMi6Btcp3xfVsbS+fA1tR7yn8z/fff7+pOGflu17aa2tLqHmb
bHh9DrbiG9Lp9jd7ZAs9GYLtgG3L9/if//6vKU9mC3uCn/TixYupb5R6yCXn
srf0zGKfuQ/4ev79uZwC98nf4Wrk24oh6TEm1tqCs6lZKXpo6LW6Bd/Q/RBj
ZqO3iJl7NuwEuR7m7Xo27vGpOhLvs++WV1jPxbpavde+nyyWk7wF/6pmBbBF
rjEvOnj/IFdUXLBmqo7+jpEJfHGxmyVygezHfam72M3JmPgw/IR6sWM5tGw4
3Jm/Iy99jk0q10iOp/O2kPeuk83IPxw9L9k7o48Sn5CcWno+stk9du3uwd3u
2ah95dsc6/9O19C7/FKfEa/wnPQUbtGzh21AHuPntlAT6T7JxaDz4nsEvVD9
DEaP2eJy7AeyZOnsbPFEdpncTHMY5DaSTfJTyB/1lft+CBn0f3//+3Sv1ND4
+/oc3UGu+Cz7d6kervl08mDNUxnZB/H+6PVBh7aQqfoSV79eesQ9xt3TDfWe
7vN6fAOzka2hPiPHkK+qPwwd0uLd5t94R/jsI/dZ8754L91Htsit5DIE44Gc
JKvIgJFrCvkFNTt76X5gR5LLbLSSK2SB/6cLPvvss9e72aFvoH9sze9hz9Ua
/CTva16Qz7eQVfLK6COc0Kg+iHen5su0ivfjJT2fY8+GDjFHuf6erOSr8KHl
PddnPBf3jW/kd57n0vX5fPmGbJBR41PeHdcshhbfI+gN9ps9IfdnRJuKXPjr
p59O+qNFPwzy/pCMd+3i1/SEOOn8d3wfc+CO6Qb/jhu3xhZyxfnYkM7Hlh7R
B6GD6Q5yvRWfc+rZ4Mf4n/OeVPRK9a85dD68Fh3cai4tnUkuu25+8Gi2vefA
HmR7uPYR93NwW7AH7EmxhVbzzVrB2nBMZDpeojfHtqupnL5z/u+4EPrjVHyd
jhGbadUjn/2MfyEfR/NBrEd8gT/Qcg7vKdDtfLz5DNeKiR2rucQ50et4rVY6
ToxGDwec2WjzEPhm9CWbY/QYTXA78K6xWRwj2bpsPPuBnJKT01NOlf9BXu/P
cS/+ip17SIeRX2SKGrNW9896rENsWqymxTlbgb1hXXT6NfrgVB2fePC8Dg7f
ZV7gMf3qc+IiYlatZL3nQj7zDUfqnUNXitHRay34uiB4CHDY9iLeZIR3z97H
M+Ms5HD21ms1S0T8Yz9H0/0gK+mQmqcnT4su8bfPnj3rkpdT/L6cZTHblud+
V/A33KPevVbIe/w9ztK99X37/CWe//7HSb8UL/vo0aOm9dees++mQ0boI1e2
T/XXHWH/Bu8fcBJi6WQEm27Ngy3/8ZMPJ/l5LG+zFew3NhsfQk7zIVsVl2ZN
jx8/nnyUqkm2Pnu3F19Ab5BT1sYHW/MQK6t5XXyjnvy/e3z/401fSfJ/Xy5W
vu4p/eH5+JvWdbJ4NGsTo197r8h9oSe9j733ShAcA1uafS0+iDNa8yA/yCn7
tLc9xfenN/j+x3pqkeP4AfsU7y6XlEynR8SQfa6XjyRmy4bmi/FF1jp8P/3p
HvTuW0Duex5iSvJ6xc/Jxvm7sKb+oDutTVxs7b0iV1c/oluYIRNsF+Qfu5Id
s/ZR83vEQHrqD7KHLqCvjtUK4KrIsnlc0r0iz/B9uAz8Cv3bY63sb7Ib/7/m
MyGLySv6gy/S+jr34V7ih/QJUAPiOc19wzX1h+c/9Qp4+nT1vaJeRh+J0eL5
QbAGyA25YPQH7rvXviB3Ki/0VIyVThX7ONRzixzhm5CruIzWOWK+07nFHNbm
2tncYsY4zmvkwxWq52flpda/i4+x/49xhz5H17HPW+ewsWvYHLc04zYIbgVk
Od6CDumVyy5uUfVgp/oxsmHJqWO/J6fkieL9WtZsuWY2t7yGUea1VI8ucyyv
2T/fs5LzNa/1kFfh347pBu/Ql19+OfGOLeNTzksvuQep0QuCMcGuxw3Z/633
KU6k4uXnbFOy4lz9By6cXd5yneSznBocxSi1auUb8onUql2DM6l+gOJh896Z
lVsw90nmEHPHO+pJ09JXsga81S3MyQqCW0XVYZPLLWdikDf8Bf03LuE15F3h
uI7VV7LJ6bmW/JXz4LVb1d23BFtezkDl6rV4LuIph3KsoHqC7fs8av2rBv7Q
Ocl3cl6+dSv9K+bFVlCTE98jCMaG/aoOu1VtN7+D7qgcoktknzXgSfTOo0NK
bpDxZLv6dNy8c7eSU5Ps++jJVAs/Uk1nge3vmnF7LeQoO8H9xU/Jh/Ncqi+7
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
giAIgiB4P/D/UVeG8g==
     "], {{0, 431}, {400, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{400, 431},
   PlotRange->{{0, 400}, {0, 431}}]], "Input"],
 "\nBy finding the difference between tile n and each of its six neighbours \
we shall define PD(n) to be the number of those differences which are prime.\n\
\nFor example, working clockwise around tile 8 the differences are 12, 29, \
11, 6, 1, and 13. So PD(8) = 3.\n\nIn the same way, the differences around \
tile 17 are 1, 17, 16, 1, 11, and 10, hence PD(17) = 2.\n\nIt can be shown \
that the maximum value of PD(n) is 3.\n\nIf all of the tiles for which PD(n) \
= 3 are listed in ascending order to form a sequence, the 10th tile would be \
271.\n\nFind the 2000th tile in this sequence."
}], "Text",
 CellChangeTimes->{{3.643020578105754*^9, 3.643020582083797*^9}, 
   3.643021808044614*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"#2", "[", 
    RowBox[{"[", 
     RowBox[{"2000", "-", "#3", "-", "1"}], "]"}], "]"}], "&"}], "@@", 
  RowBox[{"NestWhile", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "/.", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"k_", ",", "_", ",", "i_"}], "}"}], "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"k", "+", "1"}], ",", "#", ",", 
            RowBox[{"i", "+", 
             RowBox[{"Length", "@", "#"}]}]}], "}"}], "&"}], "@", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"2", "+", 
                RowBox[{"3", "k"}], "+", 
                RowBox[{"3", 
                 RowBox[{"k", "^", "2"}]}]}], ",", 
               RowBox[{"Count", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"5", "+", 
                    RowBox[{"6", " ", "k"}]}], ",", 
                   RowBox[{"7", "+", 
                    RowBox[{"6", " ", "k"}]}], ",", 
                   RowBox[{"17", "+", 
                    RowBox[{"12", " ", "k"}]}]}], "}"}], ",", 
                 RowBox[{"_", "?", "PrimeQ"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"7", "+", 
                RowBox[{"9", "k"}], "+", 
                RowBox[{"3", 
                 RowBox[{"k", "^", "2"}]}]}], ",", 
               RowBox[{"Count", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"5", "+", 
                    RowBox[{"6", " ", "k"}]}], ",", 
                   RowBox[{"11", "+", 
                    RowBox[{"6", " ", "k"}]}], ",", 
                   RowBox[{"5", "+", 
                    RowBox[{"12", " ", "k"}]}]}], "}"}], ",", 
                 RowBox[{"_", "?", "PrimeQ"}]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"n_", ",", "3"}], "}"}], "\[RuleDelayed]", "n"}]}], 
          "]"}]}], ")"}]}]}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", "2"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Last", "@", "#"}], "<", "2000"}], "&"}]}], "]"}]}]], "Input"],

Cell[BoxData["14516824220"], "Output",
 CellChangeTimes->{3.643021816576504*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 129 - Repunit divisibility", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.642232653803073*^9, 3.64223266472953*^9}, {3.642298778283247*^9, 
   3.642298787208101*^9}}],

Cell["\<\
A number consisting entirely of ones is called a repunit. We shall define \
R(k) to be a repunit of length k; for example, R(6) = 111111.

Given that n is a positive integer and GCD(n, 10) = 1, it can be shown that \
there always exists a value, k, for which R(k) is divisible by n, and let \
A(n) be the least such value of k; for example, A(7) = 6 and A(41) = 5.

The least value of n for which A(n) first exceeds ten is 17.

Find the least value of n for which A(n) first exceeds one-million.\
\>", "Text",
 CellChangeTimes->{{3.642298796006689*^9, 3.642298800842378*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"i", "*", 
     RowBox[{"IncreaseWhile", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"CoprimeQ", "[", 
          RowBox[{"10", ",", "#"}], "]"}], "\[Implies]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"CoprimeQ", "[", 
              RowBox[{"#", ",", "i"}], "]"}], "\[Implies]", 
             RowBox[{"#", "<", 
              RowBox[{"1*^6", "/", "i"}]}]}], "&"}], "@", 
           RowBox[{"MultiplicativeOrder", "[", 
            RowBox[{"10", ",", "#"}], "]"}]}], ")"}]}], "&"}], ",", 
       RowBox[{"Ceiling", "[", 
        RowBox[{"1*^6", "/", "i"}], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"3", "^", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"3", ",", "1*^6"}], "]"}]}], "]"}]}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.642300797783601*^9, 3.642300851773495*^9}, {
  3.642301161562672*^9, 3.642301228957901*^9}, {3.642301275295567*^9, 
  3.642301312387799*^9}}],

Cell[BoxData["1000023"], "Output",
 CellChangeTimes->{{3.642300829290582*^9, 3.642300852257982*^9}, {
  3.642301180626437*^9, 3.642301230311941*^9}, {3.642301280372493*^9, 
  3.642301312899121*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 130 - Composites with prime repunit property", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.642232653803073*^9, 3.64223266472953*^9}, {3.642298778283247*^9, 
   3.642298787208101*^9}, {3.642578620046833*^9, 3.642578626001908*^9}}],

Cell["\<\
A number consisting entirely of ones is called a repunit. We shall define \
R(k) to be a repunit of length k; for example, R(6) = 111111.

Given that n is a positive integer and GCD(n, 10) = 1, it can be shown that \
there always exists a value, k, for which R(k) is divisible by n, and let \
A(n) be the least such value of k; for example, A(7) = 6 and A(41) = 5.

You are given that for all primes, p > 5, that p \[Minus] 1 is divisible by \
A(p). For example, when p = 41, A(41) = 5, and 40 is divisible by 5.

However, there are rare composite values for which this is also true; the \
first five examples being 91, 259, 451, 481, and 703.

Find the sum of the first twenty-five composite values of n for which
GCD(n, 10) = 1 and n \[Minus] 1 is divisible by A(n).\
\>", "Text",
 CellChangeTimes->{{3.642578632395728*^9, 3.642578636504934*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{"NestList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"IncreaseWhile", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"CompositeQ", "@", "#"}], "&&", 
           RowBox[{"CoprimeQ", "[", 
            RowBox[{"#", ",", "30"}], "]"}]}], "\[Implies]", 
          RowBox[{"!", 
           RowBox[{"Divisible", "[", 
            RowBox[{
             RowBox[{"#", "-", "1"}], ",", 
             RowBox[{"MultiplicativeOrder", "[", 
              RowBox[{"10", ",", "#"}], "]"}]}], "]"}]}]}], ")"}], "&"}], ",", 
       RowBox[{"#", "+", "1"}]}], "]"}], "&"}], ",", "0", ",", "25"}], 
   "]"}]}]], "Input"],

Cell[BoxData["149253"], "Output",
 CellChangeTimes->{3.642578646461775*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 131 - Prime cube partnership", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.642232653803073*^9, 3.64223266472953*^9}}],

Cell[TextData[{
 "There are some prime values, p, for which there exists a positive integer, \
n, such that the expression ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["n", "3"], " ", "+", " ", 
    RowBox[{
     SuperscriptBox["n", "2"], "p"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is a perfect cube.\n\nFor example, when p = 19, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["8", "2"], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["8", "2"], "\[Times]", "19"}]}], " ", "=", " ", 
    SuperscriptBox["12", "3"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nWhat is perhaps most surprising is that for each prime with this \
property the value of n is unique, and there are only four such primes below \
one-hundred.\n\nHow many primes below one million have this remarkable \
property?"
}], "Text",
 CellChangeTimes->{{3.642232673534099*^9, 3.64223270479427*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"i", "+", "1"}], ")"}], "^", "3"}], "-", 
      RowBox[{"i", "^", "3"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Max", "[", 
        RowBox[{"i", "/.", 
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "+", "1"}], ")"}], "^", "3"}], "-", 
             RowBox[{"i", "^", "3"}]}], "\[Equal]", "1*^6"}], ",", "i"}], 
          "]"}]}], "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"_", "?", "PrimeQ"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.642232770650989*^9, 3.642232773212777*^9}, {
  3.642232836337314*^9, 3.642232848861942*^9}, {3.642232917591619*^9, 
  3.642232971732945*^9}, {3.642233093728732*^9, 3.642233118352419*^9}, {
  3.642233212068527*^9, 3.642233213633389*^9}, {3.642233382583282*^9, 
  3.642233407532217*^9}}],

Cell[BoxData["173"], "Output",
 CellChangeTimes->{
  3.642232849687526*^9, {3.642232918528571*^9, 3.642232972110197*^9}, {
   3.642233096770717*^9, 3.64223311884664*^9}, 3.642233218954317*^9, {
   3.64223338574577*^9, 3.642233408774363*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 132 - Large repunit factors", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.642232653803073*^9, 3.64223266472953*^9}, {3.642294284213508*^9, 
   3.642294288710048*^9}}],

Cell[TextData[{
 "A number consisting entirely of ones is called a repunit. We shall define \
R(k) to be a repunit of length k.\n\nFor example, R(10) = 1111111111 = 11\
\[Times]41\[Times]271\[Times]9091, and the sum of these prime factors is \
9414.\n\nFind the sum of the first forty prime factors of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "(", 
    SuperscriptBox["10", "9"], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.642294296633538*^9, 3.642294312636601*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{"First", "@", 
   RowBox[{"NestWhile", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"PowerMod", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"10", "^", "9"}], ",", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", "1"}], ")"}], 
              RowBox[{"PowerMod", "[", 
               RowBox[{"9", ",", 
                RowBox[{"-", "1"}], ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{"Append", "@@", "#"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"NextPrime", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "5"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "@", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "<", "40"}], "&"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.642293937946295*^9, 3.6422939763609*^9}, 
   3.6422940557026*^9, {3.642294117403876*^9, 3.642294145056445*^9}, {
   3.642294188436239*^9, 3.64229419425113*^9}, 3.64229426089055*^9, {
   3.642294323972865*^9, 3.642294327597831*^9}}],

Cell[BoxData["843296"], "Output",
 CellChangeTimes->{3.642293941946535*^9, 3.642294215832774*^9, 
  3.642294262138534*^9, 3.642294328489611*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 133 - Repunit nonfactors", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.642232653803073*^9, 3.64223266472953*^9}, {3.642294284213508*^9, 
   3.642294288710048*^9}, {3.642666120293348*^9, 3.642666125090248*^9}}],

Cell[TextData[{
 "A number consisting entirely of ones is called a repunit. We shall define \
R(k) to be a repunit of length k; for example, R(6) = 111111.\n\nLet us \
consider repunits of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "(", 
    SuperscriptBox["10", "n"], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nAlthough R(10), R(100), or R(1000) are not divisible by 17, R(10000) \
is divisible by 17. Yet there is no value of n for which ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "(", 
    SuperscriptBox["10", "n"], ")"}], TraditionalForm]]],
 " will divide by 19. In fact, it is remarkable that 11, 17, 41, and 73 are \
the only four primes below one-hundred that can be a factor of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "(", 
    SuperscriptBox["10", "n"], ")"}], TraditionalForm]]],
 ".\n\nFind the sum of all the primes below one-hundred thousand that will \
never be a factor of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "(", 
    SuperscriptBox["10", "n"], ")"}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.642666131187204*^9, 3.6426661568262*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"PrimeRange", "@", "1*^5"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "<", "7"}], "||", 
      RowBox[{"!", 
       RowBox[{"SubsetQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "5"}], "}"}], ",", 
         RowBox[{"First", "/@", 
          RowBox[{"FactorInteger", "@", 
           RowBox[{"MultiplicativeOrder", "[", 
            RowBox[{"10", ",", "#"}], "]"}]}]}]}], "]"}]}]}], "&"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.642666261595762*^9, 3.642666264012442*^9}, {
  3.642666294796992*^9, 3.642666392153945*^9}}],

Cell[BoxData["453647705"], "Output",
 CellChangeTimes->{
  3.642666264709328*^9, {3.642666312609146*^9, 3.642666392945982*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 134 - Prime pair connection", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.642232653803073*^9, 3.64223266472953*^9}, {3.642240114310365*^9, 
   3.642240119566286*^9}}],

Cell[TextData[{
 "Consider the consecutive primes ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "1"], " ", "=", " ", "19"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "2"], " ", "=", " ", "23"}], TraditionalForm]]],
 ". It can be verified that 1219 is the smallest number such that the last \
digits are formed by ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "1"], TraditionalForm]]],
 " whilst also being divisible by ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "2"], TraditionalForm]]],
 ".\n\nIn fact, with the exception of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "1"], " ", "=", " ", "3"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "2"], " ", "=", " ", "5"}], TraditionalForm]]],
 ", for every pair of consecutive primes, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "2"], " ", ">", " ", 
    SubscriptBox["p", "1"]}], TraditionalForm]]],
 ", there exist values of n for which the last digits are formed by ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "1"], TraditionalForm]]],
 " and n is divisible by ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "1"], TraditionalForm]]],
 ". Let S be the smallest of these values of n.\n\nFind \[Sum] S for every \
pair of consecutive primes with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"5", " ", "\[LessEqual]", " ", 
    SubscriptBox["p", "1"], " ", "\[LessEqual]", " ", "1000000"}], 
   TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.64224012696429*^9, 3.642240205518597*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ChineseRemainder", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "#1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"#2", ",", 
        RowBox[{"10", "^", 
         RowBox[{"IntegerLength", "@", "#1"}]}]}], "}"}]}], "]"}], "&"}], "@@@", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"PrimeRange", "[", 
      RowBox[{"5", ",", 
       RowBox[{"NextPrime", "@", "1000000"}]}], "]"}], ",", "2", ",", "1"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.642562429194147*^9, 3.642562443634976*^9}, {
  3.642562479762196*^9, 3.642562507250117*^9}}],

Cell[BoxData["18613426663617118"], "Output",
 CellChangeTimes->{{3.642562481997183*^9, 3.642562513843844*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 135 - Same differences", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.642232653803073*^9, 3.64223266472953*^9}, {3.642240114310365*^9, 
   3.642240119566286*^9}, {3.642297696960777*^9, 3.642297702195479*^9}}],

Cell[TextData[{
 "Given the positive integers, x, y, and z, are consecutive terms of an \
arithmetic progression, the least value of the positive integer, n, for which \
the equation, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], " ", "\[Minus]", " ", 
      SuperscriptBox["y", "2"]}], " ", "\[Minus]", " ", 
     SuperscriptBox["z", "2"]}], " ", "=", " ", "n"}], TraditionalForm]]],
 ", has exactly two solutions is n = 27:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["34", "2"], " ", "\[Minus]", " ", 
      SuperscriptBox["27", "2"]}], " ", "\[Minus]", " ", 
     SuperscriptBox["20", "2"]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["12", "2"], " ", "\[Minus]", " ", 
       SuperscriptBox["9", "2"]}], " ", "\[Minus]", " ", 
      SuperscriptBox["6", "2"]}], " ", "=", " ", "27"}]}], 
   TraditionalForm]]],
 "\n\nIt turns out that n = 1155 is the least value which has exactly ten \
solutions.\n\nHow many values of n less than one million have exactly ten \
distinct solutions?"
}], "Text",
 CellChangeTimes->{{3.642297711196776*^9, 3.642297750734327*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"Tally", "@", 
    RowBox[{"Catenate", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"y", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", "y"}], "-", 
          RowBox[{"4", "z"}]}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "1*^6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", 
         RowBox[{"Max", "[", 
          RowBox[{"1", ",", 
           RowBox[{"Ceiling", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", "y"}], "-", 
               RowBox[{"1*^6", "/", "y"}]}], ")"}], "/", "4"}], "]"}]}], 
          "]"}], ",", 
         RowBox[{
          RowBox[{"Ceiling", "[", 
           RowBox[{"3", 
            RowBox[{"y", "/", "4"}]}], "]"}], "-", "1"}]}], "}"}]}], 
      "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"_", ",", "10"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData["4989"], "Output",
 CellChangeTimes->{3.642297769616138*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 136 - Singleton difference", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.642232653803073*^9, 3.64223266472953*^9}, {3.642240114310365*^9, 
   3.642240119566286*^9}, {3.642297696960777*^9, 3.642297702195479*^9}, {
   3.642656122714656*^9, 3.642656127117082*^9}}],

Cell[TextData[{
 "The positive integers, x, y, and z, are consecutive terms of an arithmetic \
progression. Given that n is a positive integer, the equation, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], " ", "\[Minus]", " ", 
      SuperscriptBox["y", "2"]}], " ", "\[Minus]", " ", 
     SuperscriptBox["z", "2"]}], " ", "=", " ", "n"}], TraditionalForm]]],
 ", has exactly one solution when n = 20:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["13", "2"], " ", "\[Minus]", " ", 
      SuperscriptBox["10", "2"]}], " ", "\[Minus]", " ", 
     SuperscriptBox["7", "2"]}], " ", "=", " ", "20"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nIn fact there are twenty-five values of n below one hundred for which \
the equation has a unique solution.\n\nHow many values of n less than fifty \
million have exactly one solution?"
}], "Text",
 CellChangeTimes->{{3.642656132561223*^9, 3.642656157820038*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Length", "@", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"#", ",", "4"}], "]"}], "\[Equal]", "3"}], "&"}], "]"}], "@", 
    
    RowBox[{"PrimeRange", "@", "50*^6"}]}]}], "+", 
  RowBox[{"PrimePi", "[", 
   RowBox[{"50*^6", "/", "4"}], "]"}], "+", 
  RowBox[{"PrimePi", "[", 
   RowBox[{"50*^6", "/", "16"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.642655972929123*^9, 3.642656051056968*^9}, {
  3.642656094904744*^9, 3.642656105206015*^9}, {3.642656820687372*^9, 
  3.64265682389725*^9}}],

Cell[BoxData["2544559"], "Output",
 CellChangeTimes->{{3.642656001913576*^9, 3.642656051579442*^9}, {
   3.642656098706088*^9, 3.642656117463879*^9}, 3.64265683543094*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 137 - Fibonacci golden nuggets", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.642232653803073*^9, 3.64223266472953*^9}, {3.642240114310365*^9, 
   3.642240119566286*^9}, {3.642297696960777*^9, 3.642297702195479*^9}, {
   3.642656122714656*^9, 3.642656127117082*^9}, {3.642722718260033*^9, 
   3.642722723490659*^9}}],

Cell[TextData[{
 "Consider the infinite polynomial series ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["A", "F"], "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"x", " ", 
       SubscriptBox["F", "1"]}], "+", 
      RowBox[{
       SuperscriptBox["x", "2"], 
       SubscriptBox["F", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["x", "3"], 
       SubscriptBox["F", "3"]}], "+"}], "..."}]}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "k"], TraditionalForm]]],
 " is the kth term in the Fibonacci sequence: 1, 1, 2, 3, 5, 8, ... ; that \
is, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "k"], "=", 
    RowBox[{
     SubscriptBox["F", 
      RowBox[{"k", "-", "1"}]], "+", 
     SubscriptBox["F", 
      RowBox[{"k", "-", "2"}]]}]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "1"], "=", "1"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "2"], "=", "1"}], TraditionalForm]]],
 ".\n\nFor this problem we shall be interested in values of x for which ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["A", "F"], "(", "x", ")"}], TraditionalForm]]],
 " is a positive integer.\n\nSurprisingly ",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["A", "F"], "(", 
     RowBox[{"1", "/", "2"}], ")"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "2"}], ")"}], ".1"}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "2"], ".1"}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "3"], ".2"}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "4"], ".3"}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "5"], ".5"}], "+"}], "..."}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{"\t", 
    RowBox[{"=", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "2"}], "+", 
       RowBox[{"1", "/", "3"}], "+", 
       RowBox[{"2", "/", "8"}], "+", 
       RowBox[{"3", "/", "16"}], "+", 
       RowBox[{"5", "/", "32"}], "+"}], "..."}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{"\t", 
    RowBox[{"=", "2"}]}], TraditionalForm]}]],
 "\nThe corresponding values of x for the first five natural numbers are \
shown below.\n\n",
 Cell[BoxData[GridBox[{
    {
     StyleBox["x", "Text"], 
     StyleBox[
      FormBox[
       RowBox[{
        SubscriptBox["A", "F"], "(", "x", ")"}],
       TraditionalForm], "Text"]},
    {
     StyleBox[
      RowBox[{
       RowBox[{"\[Sqrt]", "2"}], "\[Minus]", "1"}], "Text"], 
     StyleBox["1", "Text"]},
    {
     StyleBox[
      RowBox[{"1", "/", "2"}], "Text"], 
     StyleBox["2", "Text"]},
    {
     StyleBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Sqrt]", "13"}], "\[Minus]", "2"}], ")"}], "/", "3"}], 
      "Text"], 
     StyleBox["3", "Text"]},
    {
     StyleBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Sqrt]", "89"}], "\[Minus]", "5"}], ")"}], "/", "8"}], 
      "Text"], 
     StyleBox["4", "Text"]},
    {
     StyleBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Sqrt]", "34"}], "\[Minus]", "3"}], ")"}], "/", "5"}], 
      "Text"], 
     StyleBox["5", "Text"]}
   },
   GridBoxDividers->{
    "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
     "RowsIndexed" -> {}}]]],
 "\n\nWe shall call ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["A", "F"], "(", "x", ")"}], TraditionalForm]]],
 " a golden nugget if x is rational, because they become increasingly rarer; \
for example, the 10th golden nugget is 74049690.\n\nFind the 15th golden \
nugget."
}], "Text",
 CellChangeTimes->{{3.642722743214335*^9, 3.642722777082977*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeneratingFunction", "[", 
  RowBox[{
   RowBox[{"Fibonacci", "[", "n", "]"}], ",", "n", ",", "x"}], "]"}]], "Input",\

 CellChangeTimes->{{3.64272197773151*^9, 3.64272199049537*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["x", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "x", "+", 
    SuperscriptBox["x", "2"]}]]}]], "Output",
 CellChangeTimes->{3.642721993616988*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["x", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x", "+", 
       SuperscriptBox["x", "2"]}]]}], "\[Equal]", "a"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.642722164893001*^9, 3.642722195994896*^9}, {
   3.642722274945055*^9, 3.642722307403263*^9}, {3.6427223707008*^9, 
   3.642722373949942*^9}, 3.642722406890858*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "-", "a", "+", 
       SqrtBox[
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "a"}], "+", 
         RowBox[{"5", " ", 
          SuperscriptBox["a", "2"]}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"1", "+", "a", "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "a"}], "+", 
          RowBox[{"5", " ", 
           SuperscriptBox["a", "2"]}]}]]}], 
       RowBox[{"2", " ", "a"}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.642722196529753*^9, {3.642722284500738*^9, 3.642722307900456*^9}, 
   3.642722374673031*^9, 3.642722408308664*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DeleteCases", "[", 
   RowBox[{
    RowBox[{"Union", "@@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"a", "/.", 
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "+", 
                RowBox[{"2", " ", "a"}], "+", 
                RowBox[{"5", " ", 
                 RowBox[{"a", "^", "2"}]}]}], "\[Equal]", 
               RowBox[{"m", "^", "2"}]}], ",", 
              RowBox[{"a", ">", "0"}], ",", 
              RowBox[{"m", ">", "0"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"a", ",", "m"}], "}"}], ",", "Integers"}], "]"}]}], "/.", 
         RowBox[{
          RowBox[{"C", "[", "1", "]"}], "\[Rule]", "k"}]}], "//", 
        "Simplify"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "15"}], "}"}]}], "]"}]}], ",", 
    "Undefined"}], "]"}], "[", 
  RowBox[{"[", "15", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.642722387926201*^9, 3.642722469312837*^9}, {
  3.642722506501986*^9, 3.642722508767475*^9}, {3.642722559284289*^9, 
  3.642722674897204*^9}}],

Cell[BoxData["1120149658760"], "Output",
 CellChangeTimes->{{3.642722439391677*^9, 3.642722470567441*^9}, 
   3.642722509484554*^9, {3.642722593924484*^9, 3.64272262836146*^9}, 
   3.64272267768916*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 138 - Special isosceles triangles", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.642232653803073*^9, 3.64223266472953*^9}, {3.642240114310365*^9, 
   3.642240119566286*^9}, {3.642297696960777*^9, 3.642297702195479*^9}, {
   3.642579647361602*^9, 3.642579650903694*^9}}],

Cell[TextData[{
 "Consider the isosceles triangle with base length, b = 16, and legs, L = 17.\
\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
6JMAAAAAAAAAAABw5H8XHXnk
     "], {{0, 228}, {230, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{230, 228},
   PlotRange->{{0, 230}, {0, 228}}]], "Output",
  CellChangeTimes->{3.642579683125578*^9}],
 "\n\nBy using the Pythagorean theorem it can be seen that the height of the \
triangle, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"h", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["17", "2"], " ", "\[Minus]", " ", 
        SuperscriptBox["8", "2"]}], ")"}]}], " ", "=", " ", "15"}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", which is one less than the base length.\n\nWith b = 272 and L = 305, we \
get h = 273, which is one more than the base length, and this is the second \
smallest isosceles triangle with the property that h = b \[PlusMinus] 1.\n\n\
Find \[Sum] L for the twelve smallest isosceles triangles for which h = b \
\[PlusMinus] 1 and b, L are positive integers."
}], "Text",
 CellChangeTimes->{{3.642579656483175*^9, 3.642579692752956*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solutions", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"l", "/.", 
     RowBox[{"First", "@", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"b", "/", "2"}], ")"}], "^", "2"}], "+", 
            RowBox[{"h", "^", "2"}]}], "\[Equal]", 
           RowBox[{"l", "^", "2"}]}], ",", 
          RowBox[{"h", "\[Equal]", 
           RowBox[{"b", "+", "d"}]}], ",", 
          RowBox[{"b", ">", "0"}], ",", 
          RowBox[{"h", ">", "0"}], ",", 
          RowBox[{"l", ">", "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", "h", ",", "l"}], "}"}], ",", "Integers"}], 
       "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.642579493302414*^9, 3.642579497292736*^9}, {
  3.642579545572274*^9, 3.642579577803461*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ConditionalExpression", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "10"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"5", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"9", "-", 
            RowBox[{"4", " ", 
             SqrtBox["5"]}]}], ")"}], 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", 
            RowBox[{"C", "[", "1", "]"}]}]}]]}], "+", 
        RowBox[{"2", " ", 
         SqrtBox["5"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"9", "-", 
            RowBox[{"4", " ", 
             SqrtBox["5"]}]}], ")"}], 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", 
            RowBox[{"C", "[", "1", "]"}]}]}]]}], "+", 
        RowBox[{"5", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"9", "+", 
            RowBox[{"4", " ", 
             SqrtBox["5"]}]}], ")"}], 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", 
            RowBox[{"C", "[", "1", "]"}]}]}]]}], "-", 
        RowBox[{"2", " ", 
         SqrtBox["5"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"9", "+", 
            RowBox[{"4", " ", 
             SqrtBox["5"]}]}], ")"}], 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", 
            RowBox[{"C", "[", "1", "]"}]}]}]]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}], "&&", 
      RowBox[{
       RowBox[{"C", "[", "1", "]"}], "\[GreaterEqual]", "1"}]}]}], "]"}], ",", 
   RowBox[{"ConditionalExpression", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "10"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"5", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"9", "-", 
            RowBox[{"4", " ", 
             SqrtBox["5"]}]}], ")"}], 
          RowBox[{"2", " ", 
           RowBox[{"C", "[", "1", "]"}]}]]}], "+", 
        RowBox[{"2", " ", 
         SqrtBox["5"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"9", "-", 
            RowBox[{"4", " ", 
             SqrtBox["5"]}]}], ")"}], 
          RowBox[{"2", " ", 
           RowBox[{"C", "[", "1", "]"}]}]]}], "+", 
        RowBox[{"5", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"9", "+", 
            RowBox[{"4", " ", 
             SqrtBox["5"]}]}], ")"}], 
          RowBox[{"2", " ", 
           RowBox[{"C", "[", "1", "]"}]}]]}], "-", 
        RowBox[{"2", " ", 
         SqrtBox["5"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"9", "+", 
            RowBox[{"4", " ", 
             SqrtBox["5"]}]}], ")"}], 
          RowBox[{"2", " ", 
           RowBox[{"C", "[", "1", "]"}]}]]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}], "&&", 
      RowBox[{
       RowBox[{"C", "[", "1", "]"}], "\[GreaterEqual]", "1"}]}]}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.642579553152612*^9, 3.642579580227701*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"Union", "@@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"solutions", "/.", 
         RowBox[{
          RowBox[{"C", "[", "1", "]"}], "\[Rule]", "i"}]}], "//", 
        "Simplify"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "12"}], "}"}]}], "]"}]}], ",", "12"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.642579444504759*^9, 3.642579524577004*^9}, {
  3.642579595801183*^9, 3.64257963425945*^9}}],

Cell[BoxData["1118049290473932"], "Output",
 CellChangeTimes->{
  3.642579445763501*^9, {3.642579482806155*^9, 3.642579539441404*^9}, {
   3.642579604061934*^9, 3.642579634550433*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 139 - Pythagorean tiles", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.642232653803073*^9, 3.64223266472953*^9}, {3.642240114310365*^9, 
   3.642240119566286*^9}, {3.642297696960777*^9, 3.642297702195479*^9}, {
   3.642579647361602*^9, 3.642579650903694*^9}, {3.642657856434099*^9, 
   3.642657860994543*^9}}],

Cell[TextData[{
 "Let (a, b, c) represent the three sides of a right angle triangle with \
integral length sides. It is possible to place four such triangles together \
to form a square with length c.\n\nFor example, (3, 4, 5) triangles can be \
placed together to form a 5 by 5 square with a 1 by 1 hole in the middle and \
it can be seen that the 5 by 5 square can be tiled with twenty-five 1 by 1 \
squares.\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztndezFdWex5nwMP+CPjkUhQ+WUqUUBZRpfDC88HCVKn3QKpUZU1HChYOS
c05HgiA5KVnSIUmOApLxcA4gOUpOCiK6xs+y9hUQTtrdv9W9+/up6rnXe+ee
Xrv37vXpXusX/vudj//xf/9eq1atVv/1x//5x9uf/M8///l221f/849/eKFt
6/995z/++DclfxzF/1arFv+hEEIIIYQQQgghhBBCCCGEEEIIIYQQQoj46dq1
q3v//fd16AhyDB482IW+Byw4deqUa9myZfDrrSObR/Pmzd3q1asjv9fq16/v
PvroI/f999+7srIyHTpiP0pLS92sWbPcK6+84l5++eVM+IPP/NZbbwW75gMH
DnTdunULdv733nvPTZs2LejvrmHDhsHOvXTpUte0adNg5x82bJgbOnRo5Pda
48aN3ciRI938+fPdrVu3MnEvi3BcunTJff3114733n379rkXX3wxE785ns94
Tgt1/q+++sp98cUXwc7/6aefum+//Tbod/38888HO/8PP/zg3n333WDn5577
7LPPIj8/1/To0aNuwIABbvfu3e7333/PxP0s7Dlx4oR/Bho3bpz78ccf3S+/
/CJ/GCF/yB9x+eO3337z322fPn3clStXMnE/Czv4fW3evNl1797dLV++3F2/
ft3/xuQPO+QP+SMuf/Cvv/76q1+f5NmQ+z3q84hs8tNPP7m5c+e6nj17ur17
997125I/7JA/5I84/ZGjd+/e7ptvvnG3b9/OxH0t4oF1UNar2LfjYN/j3v8f
+cMO+UP+sPAH69I8K+7cuTMT97WIHuIwNm3a5AYNGuRKSkoeGJchf9ghf8gf
Fv7I7YVwrjNnzmTi3hbRcePGDR+bSzzG9u3bK4zHkD/skD/kDwt/AM+L/N6m
TJnibt68mYn7W+QHniD2Am+MGDHCnTt3rtJ9NPnDDvlD/rDyB/Ac2a9fP7di
xYpM3N+i5uCBbdu2uc6dO/v4qur87+QPG+QP+cPSH8D6VceOHV15eXkm7nFR
fXjOmDNnjt/r2LFjR7Xyh+QPO+QP+cPaH8BzJfvprEdEfW6Rbsjj6Nu3r4/5
Pn78eLVzT+UPO+QP+SOEP9gL4fmSOeLnn3/OxL0uKoZcIXI5ioqK3KpVq2r8
u5A/7JA/5I8Q/gD2RYcPH+7zQpRbmG1451iwYIHr0aOHd0g+9W7kDzvkD/kj
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
hBBCCCGEEOni/wHzC/y5
     "], {{0, 180}, {400, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{400, 180},
   PlotRange->{{0, 400}, {0, 180}}]], "Input"],
 "\n\nHowever, if (5, 12, 13) triangles were used then the hole would measure \
7 by 7 and these could not be used to tile the 13 by 13 square.\n\nGiven that \
the perimeter of the right triangle is less than one-hundred million, how \
many Pythagorean triangles would allow such a tiling to take place?"
}], "Text",
 CellChangeTimes->{{3.642657875516717*^9, 3.64265790149108*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "m", 
   RowBox[{"(", 
    RowBox[{"m", "+", "n"}], ")"}]}], "/.", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"m", "^", "2"}], "-", 
      RowBox[{"2", "m", "*", "n"}], "-", 
      RowBox[{"n", "^", "2"}]}], "\[Equal]", "1"}], ",", "n"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.642660457393116*^9, 3.642660471433857*^9}, {
   3.642660598744461*^9, 3.642660614864214*^9}, 3.642660648100985*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", "m", " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["m", "2"]}]}]]}], ",", 
   RowBox[{"2", " ", "m", " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["m", "2"]}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.642660593939433*^9, 3.642660615819241*^9}, 
   3.642660648497884*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "m", 
   RowBox[{"(", 
    RowBox[{"m", "+", "n"}], ")"}]}], "/.", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"m", "^", "2"}], "-", 
      RowBox[{"2", "m", "*", "n"}], "-", 
      RowBox[{"n", "^", "2"}]}], "\[Equal]", 
     RowBox[{"-", "1"}]}], ",", "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.642660633501313*^9, 3.642660645748144*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", "m", " ", 
    SqrtBox[
     RowBox[{"1", "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["m", "2"]}]}]]}], ",", 
   RowBox[{"2", " ", "m", " ", 
    SqrtBox[
     RowBox[{"1", "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["m", "2"]}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.64266063429221*^9, 3.642660646317928*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"Total", "@", 
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"2", 
         RowBox[{"m", "^", "2"}]}], "+", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{"n_Integer", "/;", 
        RowBox[{"n", ">", "m"}]}], "\[RuleDelayed]", 
       RowBox[{"Floor", "[", 
        RowBox[{"100*^6", "/", 
         RowBox[{"(", 
          RowBox[{"2", "m", "*", "n"}], ")"}]}], "]"}]}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", 
     RowBox[{"Sqrt", "[", "100*^6", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.642660673540994*^9, 3.642660681519893*^9}, {
  3.642660735950186*^9, 3.64266074023801*^9}, {3.642660805002192*^9, 
  3.642660810699864*^9}, {3.642661300710067*^9, 3.642661323625018*^9}}],

Cell[BoxData["10057761"], "Output",
 CellChangeTimes->{
  3.642660742341435*^9, 3.642660778502425*^9, 3.642660812381569*^9, {
   3.642661303675202*^9, 3.642661324503129*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 140 - Modified Fibonacci golden nuggets", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.642232653803073*^9, 3.64223266472953*^9}, {3.642240114310365*^9, 
   3.642240119566286*^9}, {3.642297696960777*^9, 3.642297702195479*^9}, {
   3.642579647361602*^9, 3.642579650903694*^9}, {3.642657856434099*^9, 
   3.642657860994543*^9}, {3.643603247850394*^9, 3.643603252901667*^9}}],

Cell[TextData[{
 "Consider the infinite polynomial series ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["A", "G"], "(", "x", ")"}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["xG", "1"], " ", "+", " ", 
      RowBox[{
       SuperscriptBox["x", "2"], 
       SubscriptBox["G", "2"]}], " ", "+", " ", 
      RowBox[{
       SuperscriptBox["x", "3"], 
       SubscriptBox["G", "3"]}], " ", "+"}], " ", "..."}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["G", "k"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the kth term of the second order recurrence relation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["G", "k"], " ", "=", " ", 
    RowBox[{
     SubscriptBox["G", 
      RowBox[{"k", "\[Minus]", "1"}]], " ", "+", " ", 
     SubscriptBox["G", 
      RowBox[{"k", "\[Minus]", "2"}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["G", "2"], " ", "=", " ", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["G", "2"], " ", "=", " ", "4"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "; that is, 1, 4, 5, 9, 14, 23, ... .\n\nFor this problem we shall be \
concerned with values of x for which ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["A", "G"], "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is a positive integer.\n\nThe corresponding values of x for the first five \
natural numbers are shown below.\nx\t\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["A", "G"], "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Sqrt]", "5"}], "\[Minus]", "1"}], ")"}], "/", "4"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\t\t1\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "/", "5"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\t\t\t2\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Sqrt]", "22"}], "\[Minus]", "2"}], ")"}], "/", "6"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\t\t3\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Sqrt]", "137"}], "\[Minus]", "5"}], ")"}], "/", "14"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\t4\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", "2"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\t\t\t5\n\nWe shall call ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["A", "G"], "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " a golden nugget if x is rational, because they become increasingly rarer; \
for example, the 20th golden nugget is 211345365.\n\nFind the sum of the \
first thirty golden nuggets."
}], "Text",
 CellChangeTimes->{{3.643603259421501*^9, 3.643603388259697*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"3", "x"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", "x", "-", 
        RowBox[{"x", "^", "2"}]}], ")"}]}]}], "\[Equal]", "n"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.643602936830984*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "-", "n", "-", 
       SqrtBox[
        RowBox[{"1", "+", 
         RowBox[{"14", " ", "n"}], "+", 
         RowBox[{"5", " ", 
          SuperscriptBox["n", "2"]}]}]]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", "n"}], ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "-", "n", "+", 
       SqrtBox[
        RowBox[{"1", "+", 
         RowBox[{"14", " ", "n"}], "+", 
         RowBox[{"5", " ", 
          SuperscriptBox["n", "2"]}]}]]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", "n"}], ")"}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.643602937918444*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"n", "/.", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "+", 
             RowBox[{"14", "n"}], "+", 
             RowBox[{"5", 
              RowBox[{"n", "^", "2"}]}]}], "\[Equal]", 
            RowBox[{"m", "^", "2"}]}], ",", 
           RowBox[{"n", ">", "0"}], ",", 
           RowBox[{"m", ">", "0"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "n"}], "}"}], ",", "Integers"}], "]"}]}], "/.", 
      RowBox[{
       RowBox[{"ConditionalExpression", "[", 
        RowBox[{"expr_", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}], "&&", 
          RowBox[{
           RowBox[{"C", "[", "1", "]"}], "\[GreaterEqual]", "cmin_"}]}]}], 
        "]"}], "\[RuleDelayed]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"expr", "/.", 
          RowBox[{
           RowBox[{"C", "[", "1", "]"}], "\[Rule]", "c"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "cmin", ",", 
           RowBox[{"cmin", "+", "30", "-", "1"}]}], "}"}]}], "]"}]}]}], "//", 
     "Simplify"}], "//", "Catenate"}], "//", 
   RowBox[{"TakeSmallest", "@", "30"}]}], "//", "Total"}]], "Input",
 CellChangeTimes->{{3.643602963628352*^9, 3.643603020927721*^9}, {
  3.643603132433014*^9, 3.643603235192151*^9}}],

Cell[BoxData["5673835352990"], "Output",
 CellChangeTimes->{{3.643602983024043*^9, 3.643603022314691*^9}, {
  3.643603135432843*^9, 3.643603192457165*^9}, {3.643603228016112*^9, 
  3.643603236492645*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Problem 141 - Investigating progressive numbers, n, which are also square\
\>", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.642232653803073*^9, 3.64223266472953*^9}, {3.642240114310365*^9, 
   3.642240119566286*^9}, {3.642297696960777*^9, 3.642297702195479*^9}, {
   3.642579647361602*^9, 3.642579650903694*^9}, {3.642657856434099*^9, 
   3.642657860994543*^9}, {3.643603247850394*^9, 3.643603252901667*^9}, {
   3.64421637581875*^9, 3.644216381381777*^9}}],

Cell[TextData[{
 "A positive integer, n, is divided by d and the quotient and remainder are q \
and r respectively. In addition d, q, and r are consecutive positive integer \
terms in a geometric sequence, but not necessarily in that order.\n\nFor \
example, 58 divided by 6 has quotient 9 and remainder 4. It can also be seen \
that 4, 6, 9 are consecutive terms in a geometric sequence (common ratio \
3/2).\nWe will call such numbers, n, progressive.\n\nSome progressive \
numbers, such as 9 and 10404 = 1022, happen to also be perfect squares.\nThe \
sum of all progressive perfect squares below one hundred thousand is 124657.\n\
\nFind the sum of all progressive perfect squares below one trillion ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["10", "12"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ")."
}], "Text",
 CellChangeTimes->{{3.644216388688558*^9, 3.644216399859073*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParallelSum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FractionalPart", "@", 
         RowBox[{"Sqrt", "@", 
          RowBox[{"N", "@", "#"}]}]}], "\[Equal]", "0"}], ",", "#", ",", 
       "0"}], "]"}], "&"}], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"b", "^", "2"}], " ", "s"}], "+", 
     RowBox[{
      RowBox[{"a", "^", "3"}], " ", "b", " ", 
      RowBox[{"s", "^", "2"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"1*^12", "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "3"}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Range", "@", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"a", "-", "1"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"a", "^", "6"}], "+", "4.*^12"}], "]"}], "-", 
             RowBox[{"a", "^", "3"}]}], ")"}], "/", "2"}]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"CoprimeQ", "[", 
         RowBox[{"a", ",", "#"}], "]"}], "&"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"b", "^", "4"}], "+", 
          RowBox[{"4.*^12", 
           RowBox[{"a", "^", "3"}], "b"}]}], " ", "]"}], "-", 
        RowBox[{"b", "^", "2"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", 
        RowBox[{"a", "^", "3"}], "b"}], ")"}]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.644216406306657*^9, 3.644216408127324*^9}, {
   3.644216472089242*^9, 3.644216479156844*^9}, 3.644220803780768*^9, {
   3.644225385842113*^9, 3.644225418138506*^9}, 3.644225622013426*^9}],

Cell[BoxData["878454337159"], "Output",
 CellChangeTimes->{3.644221304113655*^9, 3.644225465647708*^9, 
  3.644225693152067*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 142 - Perfect Square Collection", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.642232653803073*^9, 3.64223266472953*^9}, {3.642240114310365*^9, 
   3.642240119566286*^9}, {3.642297696960777*^9, 3.642297702195479*^9}, {
   3.642577128527789*^9, 3.642577135942328*^9}}],

Cell["\<\
Find the smallest x + y + z with integers x > y > z > 0 such that x + y, x \
\[Minus] y, x + z, x \[Minus] z, y + z, y \[Minus] z are all perfect squares.\
\
\>", "Text",
 CellChangeTimes->{{3.642577141770818*^9, 3.64257714578497*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a", "\[Function]", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b", "\[Function]", 
             RowBox[{"Intersection", "[", 
              RowBox[{"a", ",", "b"}], "]"}]}], ")"}], "/@", 
           RowBox[{"KeyTake", "[", 
            RowBox[{"#", ",", "a"}], "]"}]}], ",", 
          RowBox[{"{", "}"}]}], "]"}]}], ")"}], "/@", "#"}], ",", 
     RowBox[{"<|", "|>"}]}], "]"}], "&"}], "@", 
  RowBox[{"GroupBy", "[", 
   RowBox[{
    RowBox[{"Catenate", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"i", "^", "2"}], "-", 
            RowBox[{"j", "^", "2"}]}], ")"}], "/", "2"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"i", "^", "2"}], "+", 
            RowBox[{"j", "^", "2"}]}], ")"}], "/", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1000"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Mod", "[", 
          RowBox[{"i", ",", "2", ",", "1"}], "]"}], ",", 
         RowBox[{"i", "-", "1"}], ",", "2"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"First", "\[Rule]", "Last"}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.642577261148234*^9}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"150568", "\[Rule]", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"420968", "\[Rule]", 
     RowBox[{"{", "434657", "}"}]}], "\[RightAssociation]"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.642577268536825*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"150568", "+", "420968", "+", "434657"}]], "Input",
 CellChangeTimes->{{3.642577544184979*^9, 3.642577547968222*^9}}],

Cell[BoxData["1006193"], "Output",
 CellChangeTimes->{3.642577548773911*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Problem 144 - Investigating multiple reflections of a laser beam\
\>", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.642465639223371*^9, 3.642465652739459*^9}}],

Cell[TextData[{
 "In laser physics, a \[OpenCurlyDoubleQuote]white cell\
\[CloseCurlyDoubleQuote] is a mirror system that acts as a delay line for the \
laser beam. The beam enters the cell, bounces around on the mirrors, and \
eventually works its way back out.\n\nThe specific white cell we will be \
considering is an ellipse with the equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"4", 
      SuperscriptBox["x", "2"]}], " ", "+", " ", 
     SuperscriptBox["y", "2"]}], " ", "=", " ", "100"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nThe section corresponding to \[Minus]0.01 \[LessEqual] x \[LessEqual] \
+0.01 at the top is missing, allowing the light to enter and exit through the \
hole.\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3U2OI8cVRWFa0sADbcJLkbUDaQUSIE8FSAYk7doDzelmgVVgkfkTERmZ
eeK98wFldFezijeTl1dkkd3+18+//vCfry6Xy+///PI/P/z0x3e//fbTXz9+
8+U3//7rv7/8/PWXX/zvy8e3/7hcbp+UJEmSJEkawPXsAJKG4V5IKuVeSCrl
Xkgq5V5IKuVeSCo1tRfPn3NTJN24F5JKzW3BdeXPJeXjXkgqtbQHboWkR+6F
pFLuhaRSaz+/kKR37oKkUln24vr06+tl/djn3pvS8rVZzrNiy9Dj562Y+7Pn
z69dtuZrly4vjSJ6h1vu83PvPdnytUtfI40ien9bHyP0/tqSr5HoovfXvZD6
id5f90LqJ3p/3Qupn+j9rXlNtPTnmVtfO5FGlaG/pce497nIcK4VW0uHt7yP
6SwlufbMTj0vUo3aHm95LC5pbC0/70u3F9eAxyQ16PEz/oh78en51fXzVpKf
d0l7ul5e7wPPn6vdh1HvS7NbMPP4wu1QNj6+KLjPFzwfcTeUQea9KL6PV/z8
wt1QZFleT31UnbPh552jnAupRrZONx3vhtdHsp1fxZapz83HuvH11EznWLFl
6fKm4+zw/oss51mxZehxl2N0M6TwHe52fJ3e4xn9fCu2yP3temwd3xMe+Zwr
tqjd7X5cnf8OSdTzrtgi9naXY9rh75xFPPeKLVpndzuenf6OarTzr9gi9XXX
Y9nx77RHug0UW6SuuhfSvqJ0dffj2PnfzIlyOyi2CD095Bh23ov7VUhoETrq
XkjHGL2jh+U/YC/uVyNhjdzPQ7MftBf3q5KQRu6meyEda9RuHp77wL24X52E
M2ov3QvpeCP28rTMboaSG7GT7oV0jtE6eWreg/fifpUSxmh9dC+k84zUx9Oz
nrAX96uVEEbq4ulZ3QslN1IXT8/qXii5UbqIyHnSXtyvWjrdKD1E5HQvlNwI
PcRkPHEv7lcvnWqEDmIyuhdKboQOYjK6F0qO3kFUvpP34h5BOg29f6h87oWS
o/cPlc+9UHLk/uGyAfbihpBBOZG7h8vmXig5cveQ2QCbcfb1Ky9q96i5CHtx
Q8igfKi9o+ZyL5QZtXfUXO6FMqP2jprLvVBmxN4RM32A7MUNJYfyIHaOmOmD
e6HEiJ0jZvrgXigxYueImT64F0qM2Dlipg/uhRKjdY6W5wVoL25IWRQfrW+0
PC/cCyVG6xstzwv3QonR+kbL88K9UGK0vtHyvHAvlBipb6Qss2B7cUPLo7hI
XSNlmeVeKDFS10hZFsE2g5RFsZG6RsqyyL1QUqSukbIsci+UFKlrpCyL3Asl
RekaJUcR2F7c0PIoJkrPKDmKuBdKitIzSo4i7oWSovSMkqOIe6GkKD2j5Cji
XigpSs8oOYq4F0qK0jNKjiLuhZKi9IySo4h7oaQoPaPkKOJeKClCzwgZqgD3
4oaYSbEQOkbIUMW9UFKEjhEyVHEvlBShY4QM1YCbQcujeAgdI2So5l4oIULH
CBmquRdKiNAxQoZq7oUSInSMkKGae6GECB0jZKjmXiihlo5dHz7OynA690IJ
1Xbs+fI9Ojpkz90LJeReNHIvlJB70ci9UELXiY+1yy/9vjXDcNwLJeTji0bu
hRJyLxq5F0rI11MbuRdKiNAxQoZq7oUSInSMkKGae6GECB0jZKjmXighQscI
GZrANoOURTEROkbI0MS9UDKEjhEyNHEvlAyhY4QMTdwLJUPoGCFDE/dCyRA6
RsjQxL1QMoSOETI0cS+UDKVjlBxVQHtByaHYKD2j5KjiXigZSs8oOaq4F0qG
0jNKjiruhZKh9IySo4p7oWQoPaPkqOJeKBlKzyg5qrgXSobSM0qOKu6FkqH0
jJKjinuhZEg9I2UpBtiMs69feZC6RspSzL1QIqSukbIUcy+UCKlrpCzF3Asl
QuoaKUsx90KJkLpGylLMvVAitK7R8qw6eS+GO18aGq1vtDyr3AslQusbLc8q
90KJ0PpGy7PKvVAitL7R8qxyL5QIsW/ETLNO3IuhzpNCIHaOmGmWe6FEiJ0j
ZprlXigRYueImWa5F0qE2DliplnuhRKhdo6a68VJezHM+VEo1N5Rc006YTOG
Oj8Kg9o7aq5J7oWSoPaOmmuSe6EkyL0jZ/vk4L0Y5rwoHHL3yNk+cS+UBLl7
5GyfuBdKgt49er43B+7FEOdDYdH7R8/3xr1QEvT+0fO9cS+UxAj9w2c8aC/w
50HhjdBBfEb3QkmM0EF8RvdCSYzSQXTOA/YCffxKY5QeonO6F0pimB6e/O/q
Lto5G/a4lc5IXbxe7x9nB3nmXiiJkbp4ffgFKrd7oSRG6+KnzSDtxk5ZMMcn
Xcbr40teyma4F0pgxD5ObsbZu7HD9Y942yi2ETs5m/nMzXAvlMConVzcjDN2
o/N1jnq7KLZRe7ma++jNcC+UwMi9LNqMo3aj4/WMfJsotpG7WZz9iM1wL5TA
6N2s2ow9d6PT9x799lBsEfpZdQx7bUaH7xvhtlBsETpafQx7PNZwL5RAlI42
HUfPzdj4vaLcDootUk+bN6PHbmz4HpFuA8UWqaubjmXrZuy1F9//+ff19tH4
vaWeovVw832+9X7f+HWzX+NOCChiH7s8t6i9/zfsxeTl3QmBRe1ll+PacTNm
t6Lm+qSDRe5nt80o3YHCy71cxscUGkT0jh76emnBZT79uTuhwWToatfNWNqE
lb142YpeuaSDZOnsIe/lXNiLj8/7mEIDy9Tb7pvxvA8ze/H2OXdCAWTrb/fj
fdyIib24uhMKpMd7Bq4PHyPonvV9Jx724u063AkFU9PnqfvZ2u/Juu7Gw/MT
H1Moqtr3F0Xai3c9dsOdUAZbn49E2It3tc+rPi7vTiiJ66XufhJ5Lx49n5ep
jzcTO9F6TlqeG6693+P5MlFuH51j6f0CLT+vSNPHmccUU78v3eHWXZl9DXfm
92luI3Xn85FKC8895s7F2jkpvdza9ax9rubPpSkZX09tUvAzitX3dq78ee+9
WLpdQt9W2o29KVD4s8yWvWh9nlC7B+keB2oX9mZB5eserXtRct9fevzmXugo
9mZC4+ujrc9Htl7OvdBR7M2Dje+j2PLf/6nP1b5W+vw1/vxCvdmbvnqez71u
G29ztbI7/fU6p3vcNt7e2sL+SCrlXkgq5V5IKuVeSCrlXkgq5V5IKuVeSCrl
Xkgq5V5IKuVeSCrlXkgq5V5IKuVeSCrlXkgq5V5IKuVeSCrlXkgqRdqLtX8n
+yzETFOo509xkHpFyvJupH9Xm5xNMVA6RsnxjLoX1FyKjdIz6mNp6v1yKhfx
/CkWarcouWh7UfL/h3ZZ+PyRaOdO2511G47Q9xtq59dy0HJS8mgbyu04yv1y
lFyUnDekLNqGdFtSn39Tcz2j5qTlUTtvS+3J5yOxeDtqL+TnSGpDuQ0pOeaQ
85GzKRZK1yg55pDzkbMpFkrXKDnmkPORsymWqff/+OHHUR8ayP8BIJNweQ==

     "], {{0, 240}, {268, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{268, 240},
   PlotRange->{{0, 268}, {0, 240}}]], "Output",
  CellChangeTimes->{3.642465698200119*^9}],
 Cell[BoxData[
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`i3$$ = 1, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {
     "\"min\"" :> {$CellContext`i3$$ = 1}, 
      "\"max\"" :> {$CellContext`i3$$ = 10}}, Typeset`bookmarkMode$$ = "Menu",
      Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{{
        Hold[$CellContext`i3$$], 1, ""}, 1, 10, 1}}, Typeset`size$$ = 
     Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True, $CellContext`i3$46742$$ = 0}, 
     PaneBox[
      PanelBox[
       DynamicWrapperBox[GridBox[{
          {
           ItemBox[
            ItemBox[
             TagBox[
              StyleBox[GridBox[{
                 {"\<\"\"\>", 
                  AnimatorBox[Dynamic[$CellContext`i3$$], {1, 10, 1},
                   AnimationRate->Automatic,
                   AnimationRunTime->5.06679630279541,
                   AnimationRunning->False,
                   AnimationTimeIndex->0.06679630279541016,
                   AppearanceElements->{
                    "ProgressSlider", "PlayPauseButton", 
                    "FasterSlowerButtons", "DirectionButton"},
                   AutoAction->False,
                   DisplayAllSteps->True]}
                },
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "ListAnimateLabel",
               StripOnInput->False],
              {"ControlArea", Top}],
             Alignment->{Automatic, Inherited},
             StripOnInput->False],
            Background->None,
            StripOnInput->False]},
          {
           ItemBox[
            TagBox[
             StyleBox[
              PaneBox[
               TagBox[
                PaneSelectorBox[{1->
                 GraphicsBox[
                  TagBox[RasterBox[CompressedData["
1:eJzt3GtuHUUQhuHD5Qe7QCwFlhBWkEjwFykgoSyCNRu35YiJiX16eqq66/v6
fcR9zpmpar92ruKnD3+8+/3b2+325w+Pf3n3/u+fP358/+nX7x//5ZdPf/32
4bvHf/jxm9vtn8e/t/8IAAAAAAAAVPTw9AfQj2bwiofX/nx449qaUbFQ18f+
ztcZ+vE29DXixLdNfA3yMvwxvPD9GbrREvY5f/H7wHzt0RD+sQn8sRPd1JL2
uRz8422+5tSQ+jFI+jkaulmLZtBrytf5xJ8L5tupuaad9YRfP6CbXNM/Nyf9
mhNfc3IsOdPJv05JN3GWneWCX9umm+uWnuGi3w9BN+OWn93C30OzfHdRy8+N
ZmSU+XHE4t+rV+Yciit1RkV+f2eFGSordT40U17Js6GbssqeSZFmmipzVFD6
LAo101SaZaXS50Az5ZQ/g2LNNNXmma38/jRTisTuBZtpKs6UTWbnos00VefK
ILVr4WaayrNFktqTZpaT27F4M031+a6S249mlpLcTaCZRmHGs2R3EmmmUZmz
h/QuQs00SrO+RX4PoW5U5nyLww5KzTRKs36N+vxPaGYq9fmf0Mw0yrN/QayZ
Rm3ez1Tn/h+amUJx5lcJNtOozaw275toZgq1ed8k2kyjMrfKnN2Em2kUZleY
8RSaSVV9viHizTRV568612U0k6bqXJfRTIqKM4Wim3DV5glHM6EqzZLGoJmm
yg5V5khFM6GqzJGKZsJUmGEKk2aa1Xusfv40NGPz/GloRv7Z0xk106zaxekM
76IZ6ecuQTOSz1zKrJlm9j5u53cXzcg9bzmakXvecjQj97wSzLqZuYvTuZ1i
1kwzax+3c+tGM+WfUw7NlH1GWYbNNNk7OZ5ZN5opef/SaKbUvSWYNtNk7eV6
Xt1opsx9ZdDM8nvKMW6mid7N+ay60czS+0mimaX3k0QzS+8ny7ibyL1cz2iI
cTNN1G7OZ3QazUy9jwWamXofCzQz9T4WaGbKPayYN9Nc3c/9fE6jmfT326GZ
9PfboZn099vZoJnmyo47nM8pNJPyPms0k/I+azST8j5rNJPyPnsbdEMzwWgm
/H32NmimObvjDmcyjGZCXr8Vmgl5/VZoJuT1W6GZkNdvhWZCXr8Vmgl5/VZo
5tJrt7RJM03vnrucxzCaGX7dtmhm+HXbopnh122LZoZft7VNuqGZQDQz9Lqt
0czQ67ZGM0Ov2xrNDL1uazRz6jW4bdNMc2/PXc7hMprpvo5nNNN9Hc9opvs6
ntFM93U8o5nu63hGM93X8Yxmuq/jYJNuaCYQzXRdxwHNdF3HAc10XccBzXRd
xwHNdF3HAc10XccBzXRdxwHNdF3HAc10XccBzXRdxwHNdF3HAc10XccBzXRd
xwHNdF3HCxt0QzPBaMZ+/3A0Y79/OJqx3z8czdjvH45m7PcPRzP2+4ejGfv9
w9GM/f7haMZ+/3A0Y79/OJqx3z8czdjvH45m7PdPYd5Nz27O+6egGev9U9CM
9f4pjJvp3ct1/zQ0Y7t/Gpqx3T8Nzdjun4ZmbPdPQzO2+6ehGdv909CM7f5p
aMZ2/zQ0c/q12zNt5uxOjmeQhmaGXr89w25oJhnN2O2fjmbs9k9HM8Pv2RbN
DL9nWzQz/J5tmTUzuovTGaSjmUvv2xLNXHrflmgm5L1boZmQ926FZkLeuxWj
Zq7u4XIO6Wgm7P3boJmw92/FpBuamYhmQu+xBYNmouZXP4dpaCb8PvZoJvw+
9mgm7V62xJuJnl35LKahmdT7WaKZ1PtZopnU+1mimdT7WaKZKfe0ItxM1tyq
5zENzUy7rxXRbjJnVjyPqQSbyZ5X7Tymo5np95dHM8ueIUusmVmzKp3JdDRT
4llShJqZPafKuUxHM2WeJ4NmyjxPBs2UeZ4MminzPBk0U+6Z5Yk0s2pGhbOZ
jmZKPrc0min97LKKd7N6ttXPL4lm7qowQymFm6kyV5U5yqCZu6rMUQbNdKk0
y3JFm6k2U7V5lqKZLtXmWYpmulWcaYmCzVSb57Oqc01HM6dUnm2aYs1UmuU1
CjOmopnTFGZMVaiZKnP0UJo1XJFmKsxwhtq84Qp0s/r5IxRnDrO4GdWzV507
BM0MU579koXNqJ+5+vzDaGaY+vzDaOYShx1OW9SMy1m77HEKzVzmtEuXBc24
nbHbPnfRTAjHnV41uRnns3Xe7QsTm9nhTHfYcVYzW5zlbZM9aSac/a4TmrE/
wxe22De5my3O8AX7nRObsT+7N1jvntSM9Zl1sj2DhGZsz+ok23OgmVSWZxHc
jOUZXWB5HjSTzu5MApuxO5tAVmcT1IzVmSSxOaOAZmzOYgKLs7rYjMUZTCZ/
Zheakd99IemzG2xGeucCpM+PZpaRPcOBZmR3LUj2LE90I7tjYZJn2tmM5G4i
Hm5i53unGbl9hMmc8xvNyOxgROJz9CvNSMxtrvT5v2im9KybKfu5+/DfbCXn
Q72Py6L/PwTOqfI5XWUO9Fv1MaMVfTO+P8H3WXxFfmzpZD8PF/8EAAAAAAAA
AMDSvwLabCY=
                    "], {{0, 287}, {141, 0}}, {0, 255},
                    ColorFunction->RGBColor],
                   BoxForm`ImageTag[
                   "Byte", ColorSpace -> "RGB", Interleaving -> True],
                   Selectable->False],
                  BaseStyle->"ImageGraphics",
                  ImageSizeRaw->{141, 287},
                  PlotRange->{{0, 141}, {0, 287}}], 2->
                 GraphicsBox[
                  TagBox[RasterBox[CompressedData["
1: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
                    
                    "], {{0, 287}, {141, 0}}, {0., 1.},
                    ColorFunction->RGBColor],
                   BoxForm`ImageTag[
                   "Real", ColorSpace -> "RGB", Interleaving -> True],
                   Selectable->False],
                  BaseStyle->"ImageGraphics",
                  ImageSizeRaw->{141, 287},
                  PlotRange->{{0, 141}, {0, 287}}], 3->
                 GraphicsBox[
                  TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAiOm/8zPPgA==
                    "], {{0, 287}, {141, 0}}, {0., 
                    1.},
                    ColorFunction->RGBColor],
                   BoxForm`ImageTag[
                   "Real", ColorSpace -> "RGB", Interleaving -> True],
                   Selectable->False],
                  BaseStyle->"ImageGraphics",
                  ImageSizeRaw->{141, 287},
                  PlotRange->{{0, 141}, {0, 287}}], 4->
                 GraphicsBox[
                  TagBox[RasterBox[CompressedData["
1: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
                    "], {{0, 
                    287}, {141, 0}}, {0., 1.},
                    ColorFunction->RGBColor],
                   BoxForm`ImageTag[
                   "Real", ColorSpace -> "RGB", Interleaving -> True],
                   Selectable->False],
                  BaseStyle->"ImageGraphics",
                  ImageSizeRaw->{141, 287},
                  PlotRange->{{0, 141}, {0, 287}}], 5->
                 GraphicsBox[
                  TagBox[RasterBox[CompressedData["
1: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
                    
                    "], {{0, 287}, {141, 0}}, {0., 1.},
                    ColorFunction->RGBColor],
                   BoxForm`ImageTag[
                   "Real", ColorSpace -> "RGB", Interleaving -> True],
                   Selectable->False],
                  BaseStyle->"ImageGraphics",
                  ImageSizeRaw->{141, 287},
                  PlotRange->{{0, 141}, {0, 287}}], 6->
                 GraphicsBox[
                  TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAAAAAAAAAAB49H/FAYcP
                    "], {{0, 287}, {141, 
                    0}}, {0., 1.},
                    ColorFunction->RGBColor],
                   BoxForm`ImageTag[
                   "Real", ColorSpace -> "RGB", Interleaving -> True],
                   Selectable->False],
                  BaseStyle->"ImageGraphics",
                  ImageSizeRaw->{141, 287},
                  PlotRange->{{0, 141}, {0, 287}}], 7->
                 GraphicsBox[
                  TagBox[RasterBox[CompressedData["
1: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
/wDdzLXV
                    "], {{0, 287}, {141, 0}}, {0., 1.},
                    ColorFunction->RGBColor],
                   BoxForm`ImageTag[
                   "Real", ColorSpace -> "RGB", Interleaving -> True],
                   Selectable->False],
                  BaseStyle->"ImageGraphics",
                  ImageSizeRaw->{141, 287},
                  PlotRange->{{0, 141}, {0, 287}}], 8->
                 GraphicsBox[
                  TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjpP7iZ8/4=
                    "], {{0, 287}, {
                    141, 0}}, {0., 1.},
                    ColorFunction->RGBColor],
                   BoxForm`ImageTag[
                   "Real", ColorSpace -> "RGB", Interleaving -> True],
                   Selectable->False],
                  BaseStyle->"ImageGraphics",
                  ImageSizeRaw->{141, 287},
                  PlotRange->{{0, 141}, {0, 287}}], 9->
                 GraphicsBox[
                  TagBox[RasterBox[CompressedData["
1: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
                    "], {{0, 
                    287}, {141, 0}}, {0., 1.},
                    ColorFunction->RGBColor],
                   BoxForm`ImageTag[
                   "Real", ColorSpace -> "RGB", Interleaving -> True],
                   Selectable->False],
                  BaseStyle->"ImageGraphics",
                  ImageSizeRaw->{141, 287},
                  PlotRange->{{0, 141}, {0, 287}}], 10->
                 GraphicsBox[
                  TagBox[RasterBox[CompressedData["
1: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
                    
                    "], {{0, 287}, {141, 0}}, {0., 1.},
                    ColorFunction->RGBColor],
                   BoxForm`ImageTag[
                   "Real", ColorSpace -> "RGB", Interleaving -> True],
                   Selectable->False],
                  BaseStyle->"ImageGraphics",
                  ImageSizeRaw->{141, 287},
                  PlotRange->{{0, 141}, {0, 287}}]}, 
                 Dynamic[$CellContext`i3$$],
                 Alignment->Automatic,
                 ImageSize->All,
                 TransitionDirection->Horizontal,
                 TransitionDuration->0.5,
                 TransitionEffect->Automatic],
                Identity,
                Editable->True,
                Selectable->True],
               ImageMargins->10],
              Deployed->False,
              StripOnInput->False,
              ScriptLevel->0,
              GraphicsBoxOptions->{PreserveImageOptions->True},
              Graphics3DBoxOptions->{PreserveImageOptions->True}],
             Identity,
             Editable->False,
             Selectable->False],
            Alignment->{Left, Center},
            Background->GrayLevel[1],
            Frame->1,
            FrameStyle->GrayLevel[0, 0.2],
            ItemSize->Automatic,
            StripOnInput->False]}
         },
         AutoDelete->False,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Top}}, 
           "RowsIndexed" -> {}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}},
            "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.7], {
              Offset[0.5599999999999999]}, 
             Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.4], {
              Offset[0.8]}, 
             Offset[0.4]}, "RowsIndexed" -> {}}], If[
         CurrentValue["SelectionOver"], 
         Manipulate`Dump`ReadControllerState[
          Map[Manipulate`Dump`updateOneVar[#, 
            CurrentValue["PreviousFormatTime"], 
            CurrentValue["CurrentFormatTime"]]& , {
            
            Manipulate`Dump`controllerLink[{$CellContext`i3$$, \
$CellContext`i3$46742$$}, "X1", 
             If["DefaultAbsolute", True, "JB1"], False, {1, 10, 1}, 10, 1.]}], 
          
          CurrentValue[{
           "ControllerData", {
            "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
        ImageSizeCache->{309., {168.25, 175.25}}],
       DefaultBaseStyle->{},
       FrameMargins->{{5, 5}, {5, 5}}],
      BaselinePosition->Automatic,
      ImageMargins->0],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]]], "Output",
  CellChangeTimes->{{3.642465698200119*^9, 3.642465727760913*^9}}],
 "\n\nThe light beam in this problem starts at the point (0.0,10.1) just \
outside the white cell, and the beam first impacts the mirror at (1.4,-9.6).\n\
\nEach time the laser beam hits the surface of the ellipse, it follows the \
usual law of reflection \[OpenCurlyDoubleQuote]angle of incidence equals \
angle of reflection.\[CloseCurlyDoubleQuote] That is, both the incident and \
reflected beams make the same angle with the normal line at the point of \
incidence.\n\nIn the figure on the left, the red line shows the first two \
points of contact between the laser beam and the wall of the white cell; the \
blue line shows the line tangent to the ellipse at the point of incidence of \
the first bounce.\n\nThe slope m of the tangent line at any point (x,y) of \
the given ellipse is: m = \[Minus]4x/y\n\nThe normal line is perpendicular to \
this tangent line at the point of incidence.\n\nThe animation on the right \
shows the first 10 reflections of the beam.\n\nHow many times does the beam \
hit the internal surface of the white cell before exiting?"
}], "Text",
 CellChangeTimes->{{3.642465665783568*^9, 3.642465707215614*^9}, 
   3.642465738239876*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"NestWhile", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#1", "+", "1"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], ",", "#2"}], "}"}], "/.", 
        RowBox[{"First", "@", 
         RowBox[{"NSolve", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}], "\[Element]", 
              RowBox[{"TransformedRegion", "[", 
               RowBox[{
                RowBox[{"InfiniteLine", "@", 
                 RowBox[{"{", "##2", "}"}]}], ",", 
                RowBox[{"ReflectionTransform", "[", 
                 RowBox[{
                  RowBox[{"Reverse", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4"}], ",", "1"}], "}"}], "#2"}], "]"}], ",",
                   "#2"}], "]"}]}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}], "\[Element]", 
              RowBox[{"Circle", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"5", ",", "10"}], "}"}]}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}], "\[NotEqual]", "#2"}]}], "}"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}], "&"}], "@@", "#"}], 
     "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"1.4", ",", 
        RowBox[{"-", "9.6"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "10.1"}], "}"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "@", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ">", "0.01"}], "||", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "<", "0"}]}], "&"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.642465831215008*^9}],

Cell[BoxData["354"], "Output",
 CellChangeTimes->{3.642465766346532*^9, 3.642465835931737*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Problem 145 - How many reversible numbers are there below one-billion?\
\>", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}}],

Cell[TextData[{
 "Some positive integers n have the property that the sum [ n + reverse(n) ] \
consists entirely of odd (decimal) digits. For instance, 36 + 63 = 99 and 409 \
+ 904 = 1313. We will call such numbers reversible; so 36, 63, 409, and 904 \
are reversible. Leading zeroes are not allowed in either n or reverse(n).\n\n\
There are 120 reversible numbers below one-thousand.\n\nHow many reversible \
numbers are there below one-billion ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["10", "9"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ")?"
}], "Text",
 CellChangeTimes->{{3.641284325164533*^9, 3.64128433338486*^9}, {
  3.641284390426423*^9, 3.641284390426527*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{"1", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{"i", ",", "2"}], "]"}], "+", "1"}], ",", 
     RowBox[{"9", "-", "i"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641284453391926*^9, 3.641284455696169*^9}}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.641284456256563*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{"1", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", 
     RowBox[{"11", "-", "i"}], ",", "9", ",", "2"}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.641284972497763*^9, 3.641284983026916*^9}, {
   3.641285023247899*^9, 3.641285054796924*^9}, 3.641286666048389*^9}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{{3.64128497329607*^9, 3.641284983625545*^9}, {
   3.641285029032822*^9, 3.641285055534039*^9}, 3.641286668116013*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{"1", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", 
     RowBox[{"Mod", "[", 
      RowBox[{"i", ",", "2"}], "]"}], ",", 
     RowBox[{"9", "-", "i"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641284972497763*^9, 3.641284983026916*^9}, {
  3.641285546889932*^9, 3.641285550342191*^9}}],

Cell[BoxData["25"], "Output",
 CellChangeTimes->{{3.64128497329607*^9, 3.641284983625545*^9}, 
   3.641285581716106*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{"1", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", 
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], ",", 
     RowBox[{"9", "-", "i"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641283549218157*^9, 3.641283632942641*^9}, 
   3.641283705589173*^9, {3.641283751008856*^9, 3.641283789927898*^9}, {
   3.641284440203276*^9, 3.641284464593337*^9}}],

Cell[BoxData["30"], "Output",
 CellChangeTimes->{{3.641283617000662*^9, 3.641283633535512*^9}, 
   3.641283706383993*^9, {3.641283752304579*^9, 3.641283790316188*^9}, {
   3.641284445075675*^9, 3.641284464916857*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"20", "*", 
       RowBox[{"30", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"i", "/", "2"}], "-", "1"}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "2", ",", "#", ",", "2"}], "}"}]}], "]"}], "+", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"5", "*", "20", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"20", "*", "25"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "-", "3"}], ")"}], "/", "4"}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "3", ",", "#", ",", "4"}], "}"}]}], "]"}]}], "&"}], 
  "@", "9"}]], "Input",
 CellChangeTimes->{{3.64128412607986*^9, 3.641284188851754*^9}, 
   3.641285162666355*^9, {3.64128588102318*^9, 3.641285887671722*^9}, {
   3.641285922361682*^9, 3.641285967633393*^9}, {3.641286058236044*^9, 
   3.641286061789043*^9}, {3.6412866784778*^9, 3.641286680485462*^9}, {
   3.641286721102017*^9, 3.641286746451964*^9}}],

Cell[BoxData["608720"], "Output",
 CellChangeTimes->{{3.641284178247479*^9, 3.641284189360387*^9}, 
   3.641285163498326*^9, 3.641285888212699*^9, {3.641285922764389*^9, 
   3.641285968112203*^9}, {3.641286059545269*^9, 3.641286063295313*^9}, 
   3.641286222015081*^9, 3.641286681011736*^9, {3.641286743626602*^9, 
   3.641286747033033*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 146 - Investigating a Prime Pattern", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.64298881678896*^9, 3.642988822403553*^9}, 3.651982664764479*^9}],

Cell[TextData[{
 "The smallest positive integer n for which the numbers ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["n", "2"], "+", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["n", "2"], "+", "3"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["n", "2"], "+", "7"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["n", "2"], "+", "9"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["n", "2"], "+", "13"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["n", "2"], "+", "27"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " are consecutive primes is 10. The sum of all such integers n below \
one-million is 1242490.\n\nWhat is the sum of all such integers n below 150 \
million?"
}], "Text",
 CellChangeTimes->{{3.642988831833783*^9, 3.642988883622312*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Last", "@", 
     RowBox[{"Fold", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "p"}], "}"}], "\[Function]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "p"}], ",", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Total", "/@", 
             RowBox[{"Tuples", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], 
                 RowBox[{"Range", "[", 
                  RowBox[{"0", ",", 
                   RowBox[{"p", "-", "1"}]}], "]"}]}]}], "}"}]}]}], ",", 
            RowBox[{
             RowBox[{"FreeQ", "[", 
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{"p", "-", 
                  RowBox[{"{", 
                   RowBox[{
                   "1", ",", "3", ",", "7", ",", "9", ",", "13", ",", "27"}], 
                   "}"}]}], ",", "p"}], "]"}], ",", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{"#", "^", "2"}], ",", "p"}], "]"}]}], "]"}], "&"}]}],
            "]"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"{", "0", "}"}]}], "}"}], ",", 
       RowBox[{"Prime", "@", 
        RowBox[{"Range", "@", "9"}]}]}], "]"}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "<", "150*^6"}], "&&", 
      RowBox[{"AllTrue", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "^", "2"}], "+", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3", ",", "7", ",", "9", ",", "13", ",", "27"}], 
          "}"}]}], ",", "PrimeQ"}], "]"}], "&&", 
      RowBox[{
       RowBox[{"NestList", "[", 
        RowBox[{"NextPrime", ",", 
         RowBox[{"#", "^", "2"}], ",", "6"}], "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"#", "^", "2"}], "+", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "1", ",", "3", ",", "7", ",", "9", ",", "13", ",", "27"}], 
         "}"}]}]}]}], "&"}]}], "]"}], "//", "Total"}]], "Input"],

Cell[BoxData["676333270"], "Output",
 CellChangeTimes->{3.642995757426547*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 147 - Rectangles in cross-hatched grids", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.64298881678896*^9, 3.642988822403553*^9}, {3.651982653546438*^9, 
   3.651982660930961*^9}}],

Cell[TextData[{
 "In a 3x2 cross-hatched grid, a total of 37 different rectangles could be \
situated within that grid as indicated in the sketch.\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
     "], {{0, 176}, {361, 
     0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{361, 176},
   PlotRange->{{0, 361}, {0, 176}}]], "Output",
  CellChangeTimes->{3.651982701017287*^9}],
 "\n\nThere are 5 grids smaller than 3x2, vertical and horizontal dimensions \
being important, i.e. 1x1, 2x1, 3x1, 1x2 and 2x2. If each of them is \
cross-hatched, the following number of different rectangles could be situated \
within those smaller grids:\n\n1x1: 1\n2x1: 4\n3x1: 8\n1x2: 4\n2x2: 18\n\n\
Adding those to the 37 of the 3x2 grid, a total of 72 different rectangles \
could be situated within 3x2 and smaller grids.\n\nHow many different \
rectangles could be situated within 47x43 and smaller grids?"
}], "Text",
 CellChangeTimes->{{3.651982677633544*^9, 3.651982705530021*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"foo", "[", 
   RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"foo", "[", 
    RowBox[{"a", ",", "b", ",", "c"}], "]"}], "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Min", "[", 
      RowBox[{"b", ",", 
       RowBox[{"c", "-", "i"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Min", "[", 
        RowBox[{"a", ",", "c"}], "]"}]}], "}"}]}], "]"}]}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"m", 
     RowBox[{"(", 
      RowBox[{"m", "+", "1"}], ")"}], "n", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "+", "1"}], ")"}], "/", "4"}]}], "+", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"foo", "[", 
       RowBox[{"j", ",", 
        RowBox[{
         RowBox[{"2", "n"}], "-", "j"}], ",", 
        RowBox[{
         RowBox[{"2", "m"}], "-", "i"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{
         RowBox[{"2", "m"}], "-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"2", "n"}], ",", "2"}], "}"}]}], "]"}], "+", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"foo", "[", 
       RowBox[{"j", ",", 
        RowBox[{
         RowBox[{"2", "n"}], "-", "j"}], ",", 
        RowBox[{
         RowBox[{"2", "m"}], "-", "i"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{
         RowBox[{"2", "m"}], "-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "2", ",", 
        RowBox[{
         RowBox[{"2", "n"}], "-", "2"}], ",", "2"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "47"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "43"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData["846910284"], "Output",
 CellChangeTimes->{3.651982980060098*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 148 - Exploring Pascal\[CloseCurlyQuote]s triangle", \
"Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.642742566970826*^9, 3.64274257439657*^9}}],

Cell[TextData[{
 "We can easily verify that none of the entries in the first seven rows of \
Pascal\[CloseCurlyQuote]s triangle are divisible by 7:\n  \t  \t  \t  \t  \t  \
\t 1\n  \t  \t  \t  \t  \t 1 \t  \t 1\n  \t  \t  \t  \t 1 \t  \t 2 \t  \t 1\n \
 \t  \t  \t 1 \t  \t 3 \t  \t 3 \t  \t 1\n  \t  \t 1 \t  \t 4 \t  \t 6 \t  \t \
4 \t  \t 1\n  \t 1 \t  \t 5 \t  \t10 \t  \t10 \t  \t 5 \t  \t 1\n1 \t  \t 6 \t\
  \t15 \t  \t20 \t  \t15 \t  \t 6 \t  \t 1\n\nHowever, if we check the first \
one hundred rows, we will find that only 2361 of the 5050 entries are not \
divisible by 7.\n\nFind the number of entries which are not divisible by 7 in \
the first one billion ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["10", "9"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") rows of Pascal\[CloseCurlyQuote]s triangle."
}], "Text",
 CellChangeTimes->{{3.64274258125107*^9, 3.642742596353194*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"28", "^", 
       RowBox[{"(", 
        RowBox[{"#", "-", 
         RowBox[{"Range", "@", "#"}]}], ")"}]}], "&"}], "@", 
     RowBox[{"Length", "@", "#"}]}], ".", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Most", "@", 
       RowBox[{"FoldList", "[", 
        RowBox[{"Times", ",", "1", ",", 
         RowBox[{"#", "+", "1"}]}], "]"}]}], "*", "#", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#", "+", "1"}], ")"}], "/", "2"}]}], ")"}]}], "&"}], "@", 
  RowBox[{"IntegerDigits", "[", 
   RowBox[{"1*^9", ",", "7"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.642742309988021*^9, 3.642742312508344*^9}, {
  3.642742396030599*^9, 3.642742441266085*^9}, {3.642742504495707*^9, 
  3.642742536777212*^9}}],

Cell[BoxData["2129970655314432"], "Output",
 CellChangeTimes->{{3.642742409431804*^9, 3.64274244209078*^9}, {
  3.642742505515051*^9, 3.642742537480689*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 149 - Searching for a maximum-sum subsequence", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.642742566970826*^9, 3.64274257439657*^9}, {3.64299678846924*^9, 
   3.642996793321837*^9}}],

Cell[TextData[{
 "Looking at the table below, it is easy to verify that the maximum possible \
sum of adjacent numbers in any direction (horizontal, vertical, diagonal or \
anti-diagonal) is 16 (= 8 + 7 + 1).\n\n",
 Cell[BoxData[GridBox[{
    {
     StyleBox[
      RowBox[{"-", "2"}], "Text"], 
     StyleBox["5", "Text"], 
     StyleBox["3", "Text"], 
     StyleBox["2", "Text"]},
    {
     StyleBox["9", "Text"], 
     StyleBox[
      RowBox[{"-", "6"}], "Text"], 
     StyleBox["5", "Text"], 
     StyleBox["1", "Text"]},
    {
     StyleBox["3", "Text"], 
     StyleBox["2", "Text"], 
     StyleBox["7", "Text"], 
     StyleBox["3", "Text"]},
    {
     StyleBox[
      RowBox[{"-", "1"}], "Text"], 
     StyleBox["8", "Text"], 
     StyleBox[
      RowBox[{"-", "4"}], "Text"], 
     StyleBox["8", "Text"]}
   },
   GridBoxDividers->{
    "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
     "RowsIndexed" -> {}}]]],
 "\n\nNow, let us repeat the search, but on a much larger scale:\n\nFirst, \
generate four million pseudo-random numbers using a specific form of what is \
known as a \[OpenCurlyDoubleQuote]Lagged Fibonacci Generator\
\[CloseCurlyDoubleQuote]:\n\nFor 1 \[LessEqual] k \[LessEqual] 55, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "k"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"[", 
       RowBox[{"100003", "-", 
        RowBox[{"200003", "k"}], "+", 
        RowBox[{"300007", 
         SuperscriptBox["k", "3"]}]}], "]"}], 
      RowBox[{"(", 
       RowBox[{"modulo", " ", "1000000"}], ")"}]}], "-", " ", "500000"}]}], 
   TraditionalForm]]],
 ".\nFor 56 \[LessEqual] k \[LessEqual] 4000000, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "k"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"[", 
       RowBox[{
        SubscriptBox["s", 
         RowBox[{"k", "-", "24"}]], "+", 
        SubscriptBox["s", 
         RowBox[{"k", "-", "55"}]], "+", "1000000"}], "]"}], 
      RowBox[{"(", 
       RowBox[{"modulo", " ", "1000000"}], ")"}]}], "-", " ", "500000"}]}], 
   TraditionalForm]]],
 ".\n\nThus, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "10"], " ", "=", 
    RowBox[{"-", "393027"}]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "100"], " ", "=", "86613"}], TraditionalForm]]],
 ".\n\nThe terms of s are then arranged in a 2000\[Times]2000 table, using \
the first 2000 numbers to fill the first row (sequentially), the next 2000 \
numbers to fill the second row, and so on.\n\nFinally, find the greatest sum \
of (any number of) adjacent entries in any direction (horizontal, vertical, \
diagonal or anti-diagonal)."
}], "Text",
 CellChangeTimes->{{3.642996803486468*^9, 3.642996843055937*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"s", "[", "k_", "]"}], "/;", 
    RowBox[{"k", "\[LessEqual]", "55"}]}], ":=", 
   RowBox[{
    RowBox[{"s", "[", "k", "]"}], "=", 
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{"100003", "-", 
        RowBox[{"200003", "k"}], "+", 
        RowBox[{"300007", 
         RowBox[{"k", "^", "3"}]}]}], ",", "1000000"}], "]"}], "-", 
     "500000"}]}]}], ";", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"s", "[", "k_", "]"}], ":=", 
   RowBox[{
    RowBox[{"s", "[", "k", "]"}], "=", 
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"k", "-", "24"}], "]"}], "+", 
        RowBox[{"s", "[", 
         RowBox[{"k", "-", "55"}], "]"}], "+", "1000000"}], ",", "1000000"}], 
      "]"}], "-", "500000"}]}]}], ";", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Max", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"#", "-", 
          RowBox[{"Most", "@", 
           RowBox[{"FoldList", "[", 
            RowBox[{"Min", ",", "0", ",", "#"}], "]"}]}]}], "]"}], "&"}], "@*",
        "Accumulate"}], "/@", 
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"Transpose", "@", "#"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Diagonal", "[", 
           RowBox[{"#", ",", "i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "2000"}], ",", "2000"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Diagonal", "[", 
           RowBox[{
            RowBox[{"Reverse", "@", "#"}], ",", "i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"-", "2000"}], ",", "2000"}], "}"}]}], "]"}]}], "]"}]}], 
     "]"}], "&"}], "@", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{
        RowBox[{"2000", 
         RowBox[{"(", 
          RowBox[{"#1", "-", "1"}], ")"}]}], "+", "#2"}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"2000", ",", "2000"}], "}"}]}], "]"}]}]}]], "Input"],

Cell[BoxData["52852124"], "Output",
 CellChangeTimes->{3.643013579249684*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Problem 150 - Searching a triangular array for a sub-triangle having \
minimum-sum\
\>", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.642742566970826*^9, 3.64274257439657*^9}, {3.64299678846924*^9, 
   3.642996793321837*^9}, {3.643852411594843*^9, 3.643852418065772*^9}}],

Cell[TextData[{
 "In a triangular array of positive and negative integers, we wish to find a \
sub-triangle such that the sum of the numbers it contains is the smallest \
possible.\n\nIn the example below, it can be easily verified that the marked \
triangle satisfies this condition having a sum of \[Minus]42.\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3S2QJdUVAODJj1iJRBKHRCJJFJIiBglUJbUuFElVFrVyJXLkSuSYVFYi
kUgkEolEdub21nTefX99+73Xfc/t/r6qzv5mpjnbr0/3/TnnT1/+49O///7u
7u6fzx7/59Mv/v3nr7/+4pu//vHxF3/55l9/+/IPjz/57+Pxn9/d3aXfBAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKrrjvz61AEAUR3LZwDQilPvXfIZ
AC2SzwBYg5L5MwCIriRfhchp3W+/dd3z51333XchzgeAUEpzQ9Uc0v30U9e9
/373eBJvj5TXHvNbzXMCIJTw+Sy9j3XvvNN1z5513f3921yWctqHH3bdzz/L
aQAkYfPZML6Ycld6N3t8Rxv+7PXrt/kt5bmHBzkNgJL1jcvnssf3rv79K+Wy
zz7rul9/PTiHbAzyxQs5DWCbzq1jrLq+Mb1v7Y4vnv27j3muz3dP44+//CKv
AVBdes/qc9N773XdDz8U56Z+Xi3lv3ff7brvv5fTAKgivVcN44uffHJ0fHH0
azzmvz4Ppq/x8qWcBsCi0vtU/16V8tCrV1floX78MeXD9LU+/viivAgAU6X3
qD73pHw2YXxx9Os+5sU5vi4A7Orfo9L7U8o5H300yzqOfvwx5bM0r/btt3Ia
ADeVzXPNvM6+n5dL+fKKeTkA2Jfek4Z90G/eLJZbhnWTab/ajz/KaQBc5GCf
WIU6VSl/lu5rA4B96X1oqOPx1VdV6whndUc+/1xNYwCKZHUWg/R56etCprx6
pC4kAOzqc0Z6/0k544MPQuaMoW5/oFwLQBx9neCUwxoY08vOtfJYKABxZL3K
Xr9uIjdk75J6qgFs2sGcVINr4rO5vgX3EgAQQ0mvslZkazH1VAPYjGxP10pq
SmV75WaqxQVAHEMt4Ym9ylox1DLRUw1glbKaiCvvyZLVmryylw3AypTcE8Pe
N4ea9XXu792ZY75vutsLYOX5G2CCsXvh7PfnS2U9xWKNvy1yLsN//0rHVwEK
lbxLdHs/hpD1fI63PmLRcxl6aa9o/QvAhU7dA7uCv7O4JXuVXWj5Ov2784eN
708AuMKxe9/+74W4P6aeKsP+4oeHEOe0p+o56akGbFxJ7qp7nw7Qq6xQ9fNK
eb61+l4AJ5xbc1f6Lrb4mr1T+vq8T/Uxnj9fuj7vlFiGyR16qgEbFXa9fsRe
ZWeEOr++fmXK/4H74wDcWLh8lt2L2+hvGfb89FQDNiRUPuvHyhrpVbYj9Dlm
Y7Z6qgHrM2V+bJn9wbtrGe7vW7nnNnGeBz3VYu3ZA1iN1nuVtSLb86CnGsDN
9HuBn9bipZof9gLPLuup9vKleANcqa/VtLJeZa0IXjMMoBlDr7JUe1At3Wqy
nmr+HQCK9e8FG+lV1orKPXcAmpPdN83bhJL1VDOPCXBSP64Vs1cZO4ZxYD3V
ADLZugP7npqQ9VRrZx8gwGz6deGxe5VxQraPQk81YMMa6FVGgaynWvw6mgA3
k9VVSnUY4/Yqo5CeasDWVO5VxoyyOtH+bYEVG/qSpGd4fUlWSU81YM0a7FXG
lfpnF3OjwIr0Y1C7a+CMQW2GnmrAWjTaq4wb6t/N03OMvYVAo4Y13GlvmV5l
m5ftzVD7BWiAXmWcku2dV5sT1qDbOS7587CGGkjpfrVsr7Jj36u7aziWC9mP
0ezxOuip5nkHWrX/2Z3667Aq9yoriVszsVxQtZhktafVNIa16PZ+PPXnIWU9
RJZ/3p76PhE6lhVUjUfWG0jvcViDZvNZfz+KMR8in12mejyy3q3mW6F1Teaz
frwoznq1ku9f+xwjWmzebPREdnuqWQ8LLepO/PzU36muf56Ot59odWtrKqqX
09J6IvsVoUWlaz/CfK779dY79R7m/FYjx7G/X/I1t2ZqHHf/f1Uc9FRTUwSi
m3JPDvF5Tj1AAtfjM392W9Xj1NfHulPvE4KbmrfqrkFro1eZfHZbIeKU1UvT
jwGiGftMhtp/1teTbaOflf1nlwkfJz3VIKySeYwQaxiyXmVx+w2fi2WIdXsN
CB+ng55qMccIgGD6e4e5CwIKPocLBHLQq8zeVoLZ76lW+3yAeLo3b+z9oQlB
90ACAWS1GdSGpRF6qgFP+r2raufRsEA1RIFKstrmr165D9CsrKda6vXguQw2
I+Wv/rOv9xQr4rqG7TjoDWwenZUZxh3SvJqearBK5hnYCvPCsF7ZOrA3b3y2
2YRh3W7ar6anGjTNPh22zr5KaN9+HQV1XNmqrKda6hXhswDNUOcOcuqSQlsO
6pD7zEJm6KmWDj3VICR9oqBMQ339YHOyPr5xe5VBGNlYRppb01MNqsvmBKxJ
hknMNUN92ZotvcrgYuk5cFgL/OKFzxGtCN9bvkTqjTGML85b06f5WC3oXKxW
cd0tqCRWN42nvZo05tR9pikL9irb/9rNxWpB52K1iutuQWPX3azPBOn5sH9O
TDUg9VSjPU1cs/3z41NNuvl7Ypz62k3EKoixWIllubHng9t+M7VOaVf467VC
rzL57Hry2e10ez/O/w3T82N6btRTjXaEv0b78Y+nnk7Ljn8Yb7zO2NwP5Xbz
2aJzkUNPtfnH9+ESTczLB+lV1kSsAhpbE0K56nOR/forPdVY1rFnt7F7SMhr
s18//DR+X2/9sPezy5TEaauxnPoZLb0G589puz3V7I8hrlDXZZBeZU3l/0Cm
xEcsz5vyLrbcvNrj82Wf09QvIKYQ12Rffyf1srgLUX+n+n2jQVNjI5anTb3+
Fo1l1lNNfTnqCLsPKGivMuON5aau/RDL06auC60Sy77+t55q1LXo2qgSqWdF
4P4VoWIV2Nh8ULjrLrCSubUQscx6qunPxIbpVQbrEPyZFGZlrALWJeupFmfO
AGalVxmsU7A1XTAra31h/bKeavX23MAssl5lqeaHvZiwanqqsUZq5cA2BalZ
Bzcx9CpL+UwtU9gkPdVomV4TwK4KPZ/ganoBAsd4zqUlxhWAMcM8hJ5qBNQ/
d6UeEk/7Tsz7Amdk68Tu790vCMG6XOAS2T4ePdWoLNs3+fDgWgQmy+osqOPK
wtS1AW5JHTxqyOqOpvr46o4CN5DVKXdvYWb6QgBz0keKuWV9+4xxAzPLnp3N
zdeyurhX7lW2unjO5FRPY/E771R8xO/Q4tdYP7fxtHZaT7UaVhXv1OthmKNd
fo+I+0k5cbrMsbjt/57YvlUlDgdrz+xtXcLqnueGPfx1epV1ez9ynjhNc+rz
eu59beuqxiA9T+uptrjm49zvcUy9Her1KutO/JzTxOky8lm56jHIajeoDbuE
pmOc1cCu06vMWM9lzJtdxnhjuRDXmJ5qi2o2tqmHQ+VeZSX3FsqJ3TjrQa5T
LT597fO696staC6uB887840vnlsfNXZs3aXx2VrspsbJ+9n16uU0PdXm1lRM
G+hVFvGcWiJ+55k/u17ddSLpebzufP+aNRPLbL1Q3F5lUc+rFeJ3nnx2vRCx
0VNtFuHj2FivssjnFom5x8sYbywX/hrre6rV2y+7Jk3M+ezvt699PgVaOMco
wl9/gYx9XsXxuPDX2EFPNTVFVkmvMmAr1Jtdp4N61XqVARuQ9VTTD6R5fS1h
vcqAjXIPXAfPJgDGqFpn7Bgg1/dUs4agGdnaHofD4XCcPtpY471ZfU2ztK/Q
4XA4HOOH3jMAAAAAAAAAAAAAAAAAAAAAAACs17laW93OsVXdXXkcthynUq6p
y4ldubFYiWWZKfe/CI6dYyvnPrdTsZny9/m//fiIVzmxKzcWK7EsM/X+V9O5
nBv1nKM49nnwDHAZMRt37h2DMt3ej6f+nHGRY+VZZTqfidsRs3Gut+vJZ7cT
OVbn3jW8cxwy3nhbYjbOPfh63YmfH/s1p0WPVcm/bfT/hrlZDzIP8Srnc3m5
c2sExHBczVgde7+aMlfmWfA872e3IVbTGTuZ7pp7Hoeix0o+m06MriNOtyGO
5015pxXLcpFjJZ9NJ0aXE6PbEMfzpn5GxbNc5Fh5Hz/N/rPbEp/bMNZ43tR5
brE8rqU527GxeGP0b5XMV5jXKFM6p8sh8SpXcp2JZxmfVQAAAAAAAAAAAAAA
AAAAAAAAAJr0P8Y6np0=
     "], {{0, 182}, {436, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{436, 182},
   PlotRange->{{0, 436}, {0, 182}}]], "Output",
  CellChangeTimes->{3.643852581070574*^9}],
 "\nWe wish to make such a triangular array with one thousand rows, so we \
generate 500500 pseudo-random numbers sk in the range ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[PlusMinus]", 
    SuperscriptBox["2", "19"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", using a type of random number generator (known as a Linear Congruential \
Generator) as follows:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", " ", ":=", " ", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\nfor ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", " ", "=", " ", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " up to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", " ", "=", " ", "500500"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ":\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"615949", "*", "t"}], " ", "+", " ", "797807"}], ")"}], " ", 
     "modulo", " ", 
     SuperscriptBox["220", "20"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "k"], " ", ":=", " ", 
    RowBox[{"t", "\[Minus]", 
     SuperscriptBox["2", "19"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nThus: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "1"], " ", "=", " ", "273519"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "2"], " ", "=", " ", 
    RowBox[{"\[Minus]", "153582"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "3"], " ", "=", " ", "450905"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " etc\n\nOur triangular array is then formed using the pseudo-random numbers \
thus:\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "3"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "4"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "5"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "6"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "7"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "8"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "9"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "10"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n...\n\nSub-triangles can start at any element of the array and extend \
down as far as we like (taking-in the two elements directly below it from the \
next row, the three elements directly below from the row after that, and so \
on).\nThe \[OpenCurlyDoubleQuote]sum of a \
sub-triangle\[CloseCurlyDoubleQuote] is defined as the sum of all the \
elements it contains.\nFind the smallest possible sub-triangle sum."
}], "Text",
 CellChangeTimes->{{3.643852428065087*^9, 3.643852586866297*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Min", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Min", "@", 
       RowBox[{"Accumulate", "[", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"i", ";;"}], ",", 
            RowBox[{"j", "-", "i"}]}], "]"}], "]"}], "-", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"i", ";;"}], ",", "j"}], "]"}], "]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "@", "#"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", 
        RowBox[{"i", "-", "1"}]}], "}"}]}], "]"}]}], "&"}], "[", 
  RowBox[{"0", "@@@", 
   RowBox[{"Accumulate", "/@", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", "=", "0"}], "}"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"t", "=", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"615949", "t"}], "+", "797807"}], ",", 
            RowBox[{"2", "^", "20"}]}], "]"}]}], ";", 
         RowBox[{"t", "-", 
          RowBox[{"2", "^", "19"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1000"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "i"}], "}"}]}], "]"}]}], "]"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"-", "271248680"}]], "Output",
 CellChangeTimes->{3.643852659341633*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 151 - 175", "Subsection",
 CellChangeTimes->{{3.640509015355191*^9, 3.640509022245683*^9}, {
  3.640519338671053*^9, 3.640519341443173*^9}, {3.6405218351164*^9, 
  3.640521837410107*^9}, {3.640692001248666*^9, 3.64069200435303*^9}, {
  3.640938376129309*^9, 3.640938377765213*^9}, {3.641284295689656*^9, 
  3.641284299496535*^9}, {3.642294830816405*^9, 3.642294833537223*^9}}],

Cell[CellGroupData[{

Cell["\<\
Problem 151 - Paper sheets of standard sizes: an expected-value problem\
\>", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.641689815298222*^9, 3.64168982128623*^9}, {3.642469833207738*^9, 
   3.642469840014636*^9}, {3.642641186217036*^9, 3.642641192789218*^9}, {
   3.64266648188601*^9, 3.642666487289932*^9}}],

Cell[TextData[{
 "A printing shop runs 16 batches (jobs) every week and each batch requires a \
sheet of special colour-proofing paper of size A5.\n\nEvery Monday morning, \
the foreman opens a new envelope, containing a large sheet of the special \
paper with size A1.\n\nHe proceeds to cut it in half, thus getting two sheets \
of size A2. Then he cuts one of them in half to get two sheets of size A3 and \
so on until he obtains the A5-size sheet needed for the first batch of the \
week.\n\nAll the unused sheets are placed back in the envelope.\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3b2O3OYVxnHmo8gduE7rSzDUJL0ap3ZhAzHUGAGcAIGBvYS9AvkCBLhU
5WZbq1XjQqWcajvdAUPOGb46MyKH8/HwXfPh/wcw6/lYLc/RMwd8ZzZ6//rN
v7789o9N0/z7L93/fPn1f//2/fdf//CPP3c3/v7Df/75zZ+6//hfd3zxh6bp
7wQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDvWsvBwcFxxrFmT907Dg6O
dRxr5lADtMgEMoc8ONQALTKBzCEPDjVAi0wgc8iDQw3QIhPIHPLgUAO0yAQy
hzw41AAtMoHMIQ8ONUCLTCBzyINDDdAiE8gc8uBQA7TIBDKHPDjUAC0ygcwh
Dw41QItMIHPIg0MN0CITyBzy4FADtMgEMoc8ONQALTKBzCEPDjVAi0wgc8iD
Qw3QIhPIHPLgUAO0yAQyhzw41AAtMoHMIQ8ONUCLTCBzyINDDdAiE8gc8uBQ
A7TIBDKHPDjUAC0ygcwhDw41QItMIHPIg0MN0CITyBzy4FADtMgEMoc8ONQA
LTKBzCEPDjVAi0wgc8iDQw3QIhPIHPLgUAO0yAQyhzw41AAtMoHMIQ8ONUCL
TCBzyINDDdAiE8gc8uBQA7TIBDKHPDjUAC0ygcwhDw41QItMIHPIg0MN0CIT
yBzy4FADtMgEMoc8ONQALTKBzCEPDjVAi0wgc8iDQw3QIhPIHPLgUAO0yAQy
hzw41ACtTWaiff687Ypu+6+jj79927Z3d/Gc/njxom0fHrbQJ4c8ONQArc1l
YjfDhvnVH93tg8ffvDl8PB+vX7v3yiEPDjVAa3OZaF++jJn16lV87W4fPH5/
H/d3867c9/59mXX1z7gqhzw41ACtzWUir1eH9evs9wzXeN36dfkzfFIOeXCo
AVqbykRZs3bXcrvbwzXd0dq1PH+4ttvPxvbx0b1XDnlwqAFam8pEWbO+exdz
bliPHq1dy/OHzyuGOdc9v+4ZV+eQB4caoLWZTLQfPox+xrr7LLW/v3t88nuH
6767O/deOeTBoQZobSYTJz9HPfrcYfT7+RxiLRxqgNZmMnHw+3Bjx/5abfee
XL9GPbq+Y86thkMN0NpEJsqadeLz0vI+XP+84T289J7d1O+gGHLIg0MN0NpE
JsqadeL3fMsc65/3+NgefP7A561r41ADtDaRibJmnZhTu9mW16797eG6bn8d
t4EZ13PIg0MN0CITyBzy4FADtMgEMoc8ONQALTKBzCEPDjVAi0wgc8iDQw3Q
IhPIHPLgUAO0yAQyhzw41AAtMoHMIQ8ONUCLTCBzyINDDdAiE8gc8uBQA7TI
BDKHPDjUAC0ygcwhDw41QItMIHPIg0MN0CITyBzy4FADtMgEMoc8ONQALTKB
zCEPDjVAi0wgc8iDQw3QIhPIHPLgUAO0yAQyhzw41AAtMoHMIQ8ONUCLTCBz
yINDDdAiE8gc8uBQA7TIBDKHPDjUAC0ygcwhDw41QItMIHPIg0MN0CITyBzy
4FADtMgEMoc8ONQALTKBzCEPDjVAi0wgc8iDQw3QIhPIHPLgUAO0yAQyhzw4
1AAtMoHMIQ8ONUCLTCBzyINDDdAiE8gc8uBQA7TIBDKHPDjUAC0ygcwhDw41
QItMIJPkoX3+vO3+kLb/eu5zb/2Z+Y9sNpjp9rPPoufd19HHf/mlbb/6Kp7T
H8+ete3PP2+lT5vMBCbdnIf27duPr6X+6G5PPvfly/K8W37m8R/bbCzT7U8/
Hfa8u33weD/j8uMnnmtqc5nASbfPuWF2vXoVX7vbnzzn/fu2vbs7eL3d8jOP
//hmY5ku12nffRdfu9tTj5f77u/jvs8/30KvNpcJnHT7nEvr1ak1ab7WOzXn
rpyBm8t0Xq8O69eDx2f+Hmqd5xPaXCZw0k15KHOru5bb3R6u6Y7Wrrtrue6a
bv8DmXM3KGvW/bVauaabWY+WteyzZ1vo1aYygVm3zblhzfruXbzm+vXpxNo1
/UDWrTcoa9L9Zwplfh2tXT/5vv5ziO29P8fBkY+LtR8+jH7G2r54Efd3j49+
X8Ocu1b722+jn7H277nt7u8e/+R7fv21LY+n9+vMPfXrieP3eVysffNm+jO9
/ugeH/2+hjl3rfbHH0/3vHv84Pn9jBt+/2Q7M663mUzMoA/h+jl39PnpJ0f3
+MQPZM5dqaw9p4703tvBjJv4uzC2mUzMoA/hqj6UNWu3Rh19fPi94ZG1K3Pu
OmXNOvF7IWWm7deu5fbRNd5GbCITZ6AP4bo5N6xZX78ef80Nn7uOrF1Pzbkr
Z+Am/i7LmnXqOnn43LV/3vDfE0ftc38Cm8jEGehDuG7ODWvWx8fx11x3/9Rr
kjl3nbJm7dajo4/369T92rVcyzHnto4+BIc+ONQALTIR6ENw6INDDdAiE4E+
BIc+ONQALTIR6ENw6INDDdAiE4E+BIc+ONQALTIR6ENw6INDDdAiE4E+BIc+
ONQALTIR6ENw6INDDdAiE4E+BIc+ONQALTIR6ENw6INDDdAiE4E+BIc+ONQA
LTIR6ENw6INDDdAiE6F6H+b2OH2i/8+1Qx4caoAWmQhV+zC3x2nZV4E5dw2H
GqBFJkLdOTezx2mZgyf2j1nq1Jr158GhBmiRiVB3zqX16tjemu3DQ8y57mut
c/p4aqvPg0MN0CIToVofztnjtFzvDXtl9Ue/f/p+z9MlT69Zfx4caoAWmQj1
5twZe5ye3FNm2VnnkAeHGqBFJkKVPpy7x+nu2q1fz6b9FMp137J7NTnkwaEG
aJGJUGfOXbnHaTrJpT9zdciDQw3QIhOhzpw7c4/T3fVcur5LJ8mcm+dQA7TI
RFi8D5fscVrew8vv2U38Dor6NJv158GhBmiRibD8nLtgj9PdPoDD3MtHf9/I
Xs/K02zWnweHGqBFJsLyc+7CPU53t4f16/46bup7lafZrD8PDjVAi0wE+hAc
+uBQA7TIRKAPwaEPDjVAi0wE+hAc+uBQA7TIRKAPwaEPDjVAi0wE+hAc+uBQ
A7TIRKAPwaEPDjVAi0wE+hAc+uBQA7TIRKAPwaEPDjVAi0wE+hAc+uBQA7TI
RKAPwaEPDjVAi0wE+hAc+uBQA7TIRKAPwaEPDjVAq3om5vYtPXhu/28UjewT
s8RpNbw2eg59cKgBWlUzMbdv6SfPT/9ex9Kn1vDa6Dn0waEGaNWdczP7lh48
92gmLn1qDa+NnkMfHGqAVt05l9arc+vR3ePp35pc/tR4bTQefXCoAVrVMnHO
vqXluWnvP+ZcVQ59cKgBWvXm3Bn7lu7uH2bb/v7Kc45j/TPCoQZoVcnEufuW
7u7br1fTCTLnmHOXcKgBWnXm3Jn7lh5f8+1PkHVrPQ59cKgBWnXm3Ln7lp56
zrLnyWsjOPTBoQZoLZ6Ji/YtZc49NYc+ONQAreXn3AX7lk6cIOvWehz64FAD
tJafcxfuWzpygsy5ehz64FADtMhEoA/BoQ8ONUCLTAT6EBz64FADtMhEoA/B
oQ8ONUCLTAT6EBz64FADtMhEoA/BoQ8ONUCLTAT6EBz64FADtMhEoA/BoQ8O
NUCLTAT6EBz64FADtMhEoA/BoQ8ONUCLTAT6EBz64FADtMhEoA/BoQ8ONUCL
TAT6EBz64FADtMhEqN6HuX1sh3+/4PhY+rSa9efBoQZokYlQtQ9z+9iWvTOY
c9dwqAFaZCLUnXMz+9iWOXhif9ulTq1Zfx4caoAWmQh151xar47tY9s+PMSc
677WOqePp7b6PDjUAC0yEar14Zx9bMv13rAfWn/c37f9enbp02vWnweHGqBF
JkK9OXfGPrYn9w1adtY55MGhBmiRiVClD+fuY7u7duvXs2nPjHLdN/Hvy6tO
sVl/HhxqgBaZCHXm3Jn72J44SfY9m+dQA7TIRKgz587dx7a/nkvXd+kkmXPz
HGqAFpkIi/fhon1sh/fw8nt2E7+Doj7NZv15cKgBWmQiLD/nLtjHdrfX4zD3
8tHfd3SNpz7NZv15cKgBWmQiLD/nLtzHdnd7WL/ur+Omvld5ms368+BQA7TI
RKAPwaEPDjVAi0wE+hAc+uBQA7TIRKAPwaEPDjVAi0wE+hAc+uBQA7TIRKAP
waEPDjVAi0wE+hAc+uBQA7TIRKAPwaEPDjVAi0wE+hAc+uBQA7TIRKAPwaEP
DjVAi0wE+hAc+uBQA7TIRKAPwaEPDjVAi0wE+hAc+uBQA7TIRKAPwaEPDjVA
i0wE+hAc+uBQA7TIRKAPwaEPDjVAi0wE+hAc+uBQA7TIRKAPwaEPLQcHB8cZ
x5o9de84ODjWcQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADA
KvwfdMOibw==
     "], {{0, 227}, {314, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{314, 227},
   PlotRange->{{0, 314}, {0, 227}}]], "Output",
  CellChangeTimes->{3.642666514649723*^9}],
 "\n\nAt the beginning of each subsequent batch, he takes from the envelope \
one sheet of paper at random. If it is of size A5, he uses it. If it is \
larger, he repeats the \[OpenCurlyQuote]cut-in-half\[CloseCurlyQuote] \
procedure until he has what he needs and any remaining sheets are always \
placed back in the envelope.\n\nExcluding the first and last batch of the \
week, find the expected number of times (during each week) that the foreman \
finds a single sheet of paper in the envelope.\n\nGive your answer rounded to \
six decimal places using the format x.xxxxxx ."
}], "Text",
 CellChangeTimes->{{3.642666494248413*^9, 3.642666517142133*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"expectation", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], "]"}], "=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"expectation", "[", "a_", "]"}], "/;", 
    RowBox[{
     RowBox[{"Min", "@", "a"}], "<", "0"}]}], "=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"expectation", "[", "a_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Boole", "[", 
     RowBox[{
      RowBox[{"Total", "@", "a"}], "\[Equal]", "1"}], "]"}], "+", 
    RowBox[{
     RowBox[{"a", ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"expectation", "[", 
          RowBox[{"a", "+", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ")"}]}], "/", 
     RowBox[{"Total", "@", "a"}]}]}]}], ";", 
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"expectation", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], "]"}], ",", "6"}], 
   "]"}]}]}], "Input"],

Cell[BoxData["0.4643987816010870568`6."], "Output",
 CellChangeTimes->{3.642668221834411*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 155 - Counting Capacitor Circuits", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.641689815298222*^9, 3.64168982128623*^9}, {3.642469833207738*^9, 
   3.642469840014636*^9}, {3.642641186217036*^9, 3.642641192789218*^9}, {
   3.64266648188601*^9, 3.642666487289932*^9}, {3.644328306809613*^9, 
   3.644328309048937*^9}, 3.644328415397391*^9}],

Cell[TextData[{
 "\n\nAn electric circuit uses exclusively identical capacitors of the same \
value C.\nThe capacitors can be connected in series or in parallel to form \
sub-units, which can then be connected in series or in parallel with other \
capacitors or other sub-units to form larger sub-units, and so on up to a \
final circuit.\n\nUsing this simple procedure and up to n identical \
capacitors, we can make circuits having a range of different total \
capacitances. For example, using up to n=3 capacitors of 60 F each, we can \
obtain the following 7 distinct total capacitance values:\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
7M+Q2mpDbe2N1d7+2cacc/HquIALns8hCxhSW22orb2x2tv/pDlHb+LtJ91m
gSzoWuap86FRW22orb2x2tv/ZGoWDAn7euJzNmQBO1BbbaitvbHa27+ocHw+
1PPQZ6g9v+As8LrTqK021NbeWO3tX1Q4Rhzqedw/t6As0JeULiXUhjW3yxLa
22fpdVF6+3cp1P6wXyjU8lR/oYKyIDWfdSUz+Xu/4tbT6OVdYtpgHWza3lHr
5Gcf9lHaf1jNfqGuHAgKzgIOJGyLr06n/tow97FHN+H0kwk1tHdwXfQs59Hb
vytNDrR/WzRFFrADvbXhgGprb6z29mcTvgN8jUN0GVx34TZjzjUb81jfZAG5
1VYbamtvrPb2Z9HkwMfHL6PW2wJjUMgCcqutNtTW3ljt7X8y9fyCJgemjh00
NDZd3A91QGqZ7/sXE/vtZAFDaqsNtbU3Vnv7n7xy3vGYKXXfjGNWN7dv9724
Xxe1qapj+bysttpQW3tjtbf/KLxe5FZbbaitvbHa238UXi9yq6021NbeWO3t
PwqvF7nVVhtqa2+s9vYfhdeLrGo7R6i29sZqb/9BOP4LAAAAAAAAAAAAAJn8
P/sP/Sc=
     "], {{0, 557}, {387, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{387, 557},
   PlotRange->{{0, 387}, {0, 557}}]], "Output",
  CellChangeTimes->{{3.644328442734301*^9, 3.644328463043212*^9}},ImageCache->
  GraphicsData["CompressedBitmap", "\<\
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
K5gNyGDzb6z7H6SSbQw=\
\>"]],
 "\n\nIf we denote by D(n) the number of distinct total capacitance values we \
can obtain when using up to n equal-valued capacitors and the simple \
procedure described above, we have: D(1)=1, D(2)=3, D(3)=7 ...\n\nFind D(18).\
\n\nReminder : When connecting capacitors ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " etc in parallel, the total capacitance is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["C", "T"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["C", "1"], " ", "+", " ", 
      SubscriptBox["C", "2"], " ", "+"}], "..."}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ",\nwhereas when connecting them in series, the overall capacitance is given \
by: ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztmU0KwjAUhIu68BpuvIceQU9QQbdCFcSVR69xG7AktpmZmvkg/rXmzcyz
1cbN6Xq4LJqmua3DzaF97LqufR5X4cn+eT+fluHBNoxXGJ8XjTEmgZ4tIIKh
Ry0DBH2j5ZuhRy0DBH10z4ahRy0DNGq+fc7Hoebbvceh5tu9x6Hm273Hoebb
vceh5tu9x6Hm273HoebbvTfG5MA+ftn10fQDg6GFCbt+zbCzZ9ePGToucwdb
U+5cU9b/Za6h9wwxdnuNsDNh10fj73ud+jXDzp5d35hvsM/LMUw9almU4ps/
lmemHrUsSjPmmqMETD1qWZREzQ9Tj1oWpVHz697jUPPr3uNI9Ytan8mdd+r1
5Jx95/5ZYWY9dv4S/yXk7vfP/Y+3oa6zUrdNrSf3d/4/9D7Vl9o1doneK2WB
IvV/URRMPWpZKKDml7n2WBtqnlnrjjWs9RtjjJkhbzhv62Y=
     "], {{0, 38}, {127, 
     0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{127, 38},
   PlotRange->{{0, 127}, {0, 38}}]], "Output",
  CellChangeTimes->{3.644328442734301*^9},ImageCache->GraphicsData[
  "CompressedBitmap", "\<\
eJztVcFOAjEQLSwIihphoyGuJKsHRQJBEu/e9ORHbIgJHIwEuffT105n012a
12ITD4TYZHcm7828mZ203fdss/j4zDbLeZa+rbPVYjn/Tl+/1gqKakIIqZ77
VJCfK7d4yVwtRW6ZrjYRReTFErcAu6Z3g6DHsMQEYIVE22g2QVDfy8ZedsgF
jsjUiWmAoDrAroIzusEZ1eYsiiWaVYwJtfqB8bEzfneLDyyCRnsMsEuAtc1c
eoBtFe1UGy/3FqqrM/SXomqoqwtvVyN3KbSNbwD2vE8S7u0EDvIv4tCUUdy4
Ut55DBIv6z90Ey5QXhap8RLjPXGQZPMCZAZOjKfaIgbN15MYWEd/XWyOxLm5
vXRtPcEz45WYJYb2CsKivZ6FZHMKIpy/Hwub/kscrMSJRdEPzZYgzJYgbMZO
h4y+Ve6MV95Dsz9rVW4ZUfsBrRzwVA==\
\>"]]
}], "Text",
 CellChangeTimes->{{3.644328424083048*^9, 3.644328497927395*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"c", "[", "1", "]"}], "=", 
   RowBox[{"{", "1", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"c", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"c", "[", "n", "]"}], "=", 
    RowBox[{"DeleteDuplicates", "@", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Outer", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#1", ",", 
               RowBox[{"#2", "/", "#1"}]}], "}"}], "&"}], "[", 
            RowBox[{
             RowBox[{"+", "##"}], ",", 
             RowBox[{"1", "##"}]}], "]"}], "&"}], ",", 
          RowBox[{"c", "[", "i", "]"}], ",", 
          RowBox[{"c", "[", 
           RowBox[{"n", "-", "i"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"n", "/", "2"}]}], "}"}]}], "]"}]}]}]}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.644328827164963*^9, 3.644328828831989*^9}, 
   3.644329152556024*^9, {3.644329196643271*^9, 3.644329197868726*^9}, 
   3.644331677516112*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"DeleteDuplicates", "@", 
   RowBox[{"Catenate", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"c", "[", "n", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "18"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.644328752363148*^9, {3.64432883456388*^9, 3.644328860189818*^9}, 
   3.644331682773315*^9}],

Cell[BoxData["3857447"], "Output",
 CellChangeTimes->{3.644328324181969*^9, 3.644328941602985*^9, 
  3.644331742489359*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Problem 157 - Solving the diophantine equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "a"}], "+", 
     RowBox[{"1", "/", "b"}]}], "=", 
    RowBox[{"p", "/", 
     SuperscriptBox["10", "n"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.641689815298222*^9, 3.64168982128623*^9}, {3.642469833207738*^9, 
   3.642469840014636*^9}, {3.642641186217036*^9, 3.642641192789218*^9}, {
   3.64266648188601*^9, 3.642666487289932*^9}, {3.644206991313993*^9, 
   3.644206997023518*^9}, {3.653882502738783*^9, 3.653882539614009*^9}}],

Cell[TextData[{
 "Consider the diophantine equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "a"}], "+", 
     RowBox[{"1", "/", "b"}]}], "=", 
    RowBox[{"p", "/", 
     SuperscriptBox["10", "n"]}]}], TraditionalForm]]],
 " with a, b, p, n positive integers and a \[LessEqual] b.\nFor n=1 this \
equation has 20 solutions that are listed below:\n1/1+1/1=20/10 \t\
1/1+1/2=15/10 \t1/1+1/5=12/10 \t1/1+1/10=11/10 \t1/2+1/2=10/10\n1/2+1/5=7/10 \
\t\t1/2+1/10=6/10 \t1/3+1/6=5/10 \t\t1/3+1/15=4/10 \t1/4+1/4=5/10\n\
1/4+1/20=3/10 \t1/5+1/5=4/10 \t\t1/5+1/10=3/10 \t1/6+1/30=2/10 \t\
1/10+1/10=2/10\n1/11+1/110=1/10 \t1/12+1/60=1/10 \t1/14+1/35=1/10 \t\
1/15+1/30=1/10 \t1/20+1/20=1/10\n\nHow many solutions has this equation for 1 \
\[LessEqual] n \[LessEqual] 9?"
}], "Text",
 CellChangeTimes->{{3.653882557611673*^9, 3.653882590901849*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"DivisorSigma", "[", 
    RowBox[{"0", ",", 
     RowBox[{"GCD", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"10", "^", "n"}], "+", "d"}], ",", 
       RowBox[{
        RowBox[{"10", "^", "n"}], "+", 
        RowBox[{
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"2", "n"}], ")"}]}], "/", "d"}]}]}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", 
     RowBox[{"TakeWhile", "[", 
      RowBox[{
       RowBox[{"Divisors", "[", 
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"2", "n"}], ")"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "\[LessEqual]", 
         RowBox[{"10", "^", "n"}]}], "&"}]}], "]"}]}], "}"}]}], 
  "]"}]], "Input"],

Cell[BoxData["53490"], "Output",
 CellChangeTimes->{3.653886936767094*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Problem 158 - Exploring strings for which only one character comes \
lexicographically after its neighbour to the left\
\>", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.641689815298222*^9, 3.64168982128623*^9}, {3.642469833207738*^9, 
   3.642469840014636*^9}, {3.642641186217036*^9, 3.642641192789218*^9}, {
   3.64266648188601*^9, 3.642666487289932*^9}, {3.644206991313993*^9, 
   3.644206997023518*^9}}],

Cell["\<\
Taking three different letters from the 26 letters of the alphabet, character \
strings of length three can be formed.
Examples are \[OpenCurlyQuote]abc\[CloseCurlyQuote], \[OpenCurlyQuote]hat\
\[CloseCurlyQuote] and \[OpenCurlyQuote]zyx\[CloseCurlyQuote].
When we study these three examples we see that for \[OpenCurlyQuote]abc\
\[CloseCurlyQuote] two characters come lexicographically after its neighbour \
to the left.
For \[OpenCurlyQuote]hat\[CloseCurlyQuote] there is exactly one character \
that comes lexicographically after its neighbour to the left. For \
\[OpenCurlyQuote]zyx\[CloseCurlyQuote] there are zero characters that come \
lexicographically after its neighbour to the left.
In all there are 10400 strings of length 3 for which exactly one character \
comes lexicographically after its neighbour to the left.

We now consider strings of n \[LessEqual] 26 different characters from the \
alphabet.
For every n, p(n) is the number of strings of length n for which exactly one \
character comes lexicographically after its neighbour to the left.

What is the maximum value of p(n)?\
\>", "Text",
 CellChangeTimes->{{3.644207004901781*^9, 3.644207008687202*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "^", "n"}], "-", "n", "-", "1"}], ")"}], 
     RowBox[{"Binomial", "[", 
      RowBox[{"26", ",", "n"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "26"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData["409511334375"], "Output",
 CellChangeTimes->{3.644207014312496*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 159 - Digital root sums of factorisations", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.641689815298222*^9, 3.64168982128623*^9}, {3.642469833207738*^9, 
   3.642469840014636*^9}, {3.642641186217036*^9, 3.642641192789218*^9}, {
   3.64266648188601*^9, 3.642666487289932*^9}, {3.644206991313993*^9, 
   3.644206997023518*^9}, {3.644381361789483*^9, 3.644381366328953*^9}}],

Cell[TextData[{
 "A composite number can be factored many different ways. For instance, not \
including multiplication by one, 24 can be factored in 7 distinct ways:\n24 = \
2x2x2x3\n24 = 2x3x4\n24 = 2x2x6\n24 = 4x6\n24 = 3x8\n24 = 2x12\n24 = 24\n\n\
Recall that the digital root of a number, in base 10, is found by adding \
together the digits of that number, and repeating that process until a number \
is arrived at that is less than 10. Thus the digital root of 467 is 8.\n\nWe \
shall call a Digital Root Sum (DRS) the sum of the digital roots of the \
individual factors of our number.\nThe chart below demonstrates all of the \
DRS values for 24.\n\n",
 Cell[BoxData[GridBox[{
    {
     StyleBox["Factorisation",
      FontWeight->"Bold"], 
     StyleBox[
      RowBox[{"Digital", " ", "Root", " ", "Sum"}],
      FontWeight->"Bold"]},
    {
     RowBox[{"2", "\[Times]", "2", "\[Times]", "2", "\[Times]", "3"}], "9"},
    {
     RowBox[{"2", "\[Times]", "3", "\[Times]", "4"}], "9"},
    {
     RowBox[{"2", "\[Times]", "2", "\[Times]", "6"}], "10"},
    {
     RowBox[{"4", "\[Times]", "6"}], "10"},
    {
     RowBox[{"3", "\[Times]", "8"}], "11"},
    {
     RowBox[{"2", "\[Times]", "12"}], "5"},
    {"24", "6"}
   },
   GridBoxDividers->{
    "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
     "RowsIndexed" -> {}}]]],
 "\n\nThe maximum Digital Root Sum of 24 is 11.\nThe function mdrs(n) gives \
the maximum Digital Root Sum of n. So mdrs(24)=11.\nFind \[Sum]mdrs(n) for 1 \
< n < 1,000,000."
}], "Text",
 CellChangeTimes->{{3.644381376516301*^9, 3.644381511790121*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"mdrs", "[", "1", "]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mdrs", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{"mdrs", "[", "n", "]"}], "=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"FixedPoint", "[", 
      RowBox[{
       RowBox[{"Total", "@*", "IntegerDigits"}], ",", "n"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "+", 
        RowBox[{"Reverse", "@", "#"}]}], "&"}], "[", 
      RowBox[{
       RowBox[{
        RowBox[{"mdrs", "/@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;", 
            RowBox[{"-", "2"}]}], "]"}], "]"}]}], "&"}], "@", 
       RowBox[{"Divisors", "@", "n"}]}], "]"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.644380892265863*^9, 3.644380900532536*^9}, {
  3.644381187743816*^9, 3.644381191015001*^9}, {3.644381234733757*^9, 
  3.644381254300174*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"mdrs", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "2", ",", "999999"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData["14489159"], "Output",
 CellChangeTimes->{3.644381527557296*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 160 - Factorial trailing digits", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.641689815298222*^9, 3.64168982128623*^9}, {3.642469833207738*^9, 
   3.642469840014636*^9}, {3.642641186217036*^9, 3.642641192789218*^9}, {
   3.64266648188601*^9, 3.642666487289932*^9}, {3.644206991313993*^9, 
   3.644206997023518*^9}, {3.644379451388266*^9, 3.64437945539042*^9}}],

Cell["\<\
For any N, let f(N) be the last five digits before the trailing zeroes in N!.
For example,

9! = 362880 so f(9)=36288
10! = 3628800 so f(10)=36288
20! = 2432902008176640000 so f(20)=17664

Find f(1,000,000,000,000)\
\>", "Text",
 CellChangeTimes->{{3.644379462546407*^9, 3.644379466932178*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Mod", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Divisible", "[", 
          RowBox[{"i", ",", "5"}], "]"}], ",", "1", ",", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{"1*^12", "/", "#"}], "]"}], ",", "1*^5"}], "]"}], ",", 
         "2"}], "}"}]}], "]"}], ",", "1*^5"}], "]"}], "&"}], "@", 
  "1"}]], "Input",
 CellChangeTimes->{{3.644378239648592*^9, 3.644378245477369*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.644378242353123*^9, 3.644378245830922*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PowerMod", "[", 
     RowBox[{"2", ",", 
      RowBox[{"Subtract", "@@", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "1"}], ",", 
              RowBox[{"-", "1"}], ",", "1"}], "}"}], ".", 
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"1*^12", "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", "^", "i"}], "*", 
                 RowBox[{"5", "^", "j"}]}], ")"}]}], "/", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "5", ",", "10"}], "}"}]}], "]"}]}],
            ")"}], 
          RowBox[{"{", 
           RowBox[{"i", ",", "j"}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", 
           RowBox[{"Log2", "[", "1*^12", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", 
           RowBox[{"Log", "[", 
            RowBox[{"5", ",", 
             RowBox[{"1*^12", "/", 
              RowBox[{"2", "^", "i"}]}]}], "]"}]}], "}"}]}], "]"}]}], ",", 
      "1*^5"}], "]"}], "*", 
    RowBox[{"Product", "[", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"Product", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"Divisible", "[", 
             RowBox[{"i", ",", "5"}], "]"}], ",", "1", ",", "i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{"Floor", "[", 
               RowBox[{"1*^12", "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", "^", "i"}], "*", 
                  RowBox[{"5", "^", "j"}]}], ")"}]}], "]"}], ",", "1*^5"}], 
             "]"}], ",", "2"}], "}"}]}], "]"}], ",", "1*^5"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{"Log2", "[", "1*^12", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", 
        RowBox[{"Log", "[", 
         RowBox[{"5", ",", 
          RowBox[{"1*^12", "/", 
           RowBox[{"2", "^", "i"}]}]}], "]"}]}], "}"}]}], "]"}]}], ",", 
   "1*^5"}], "]"}]], "Input",
 CellChangeTimes->{{3.644378815940415*^9, 3.644378849865302*^9}, {
  3.644379316069305*^9, 3.644379331823738*^9}, {3.644379376507884*^9, 
  3.644379423239909*^9}}],

Cell[BoxData["16576"], "Output",
 CellChangeTimes->{{3.64437882276292*^9, 3.644378850483615*^9}, 
   3.644379332965353*^9, {3.644379377596004*^9, 3.644379431598732*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 162 - Hexadecimal numbers", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.641689815298222*^9, 3.64168982128623*^9}, {3.642469833207738*^9, 
   3.642469840014636*^9}, {3.642641186217036*^9, 3.642641192789218*^9}}],

Cell["\<\
In the hexadecimal number system numbers are represented using 16 different \
digits:

0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F

The hexadecimal number AF when written in the decimal number system equals \
10x16+15=175.

In the 3-digit hexadecimal numbers 10A, 1A0, A10, and A01 the digits 0,1 and \
A are all present.
Like numbers written in base ten we write hexadecimal numbers without leading \
zeroes.

How many hexadecimal numbers containing at most sixteen hexadecimal digits \
exist with all of the digits 0,1, and A present at least once?
Give your answer as a hexadecimal number.

(A,B,C,D,E and F in upper case, without any leading or trailing code that \
marks the number as hexadecimal and without leading zeroes , e.g. 1A3F and \
not: 1a3f and not 0x1a3f and not $1A3F and not #1A3F and not 0000001A3F)\
\>", "Text",
 CellChangeTimes->{{3.642641201225928*^9, 3.642641214993924*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IntegerString", "[", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"15", "*", 
        RowBox[{"16", "^", 
         RowBox[{"(", 
          RowBox[{"k", "-", "1"}], ")"}]}]}], "-", 
       RowBox[{"15", "^", "k"}], "-", 
       RowBox[{"2", "*", "14", "*", 
        RowBox[{"15", "^", 
         RowBox[{"(", 
          RowBox[{"k", "-", "1"}], ")"}]}]}], "+", 
       RowBox[{"2", "*", 
        RowBox[{"14", "^", "k"}]}], "+", 
       RowBox[{"13", "*", 
        RowBox[{"14", "^", 
         RowBox[{"(", 
          RowBox[{"k", "-", "1"}], ")"}]}]}], "-", 
       RowBox[{"13", "^", "k"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "16"}], "}"}]}], "]"}], ",", "16"}], "]"}],
   "//", "ToUpperCase"}]], "Input",
 CellChangeTimes->{{3.64264122365615*^9, 3.642641263277157*^9}}],

Cell[BoxData["\<\"3D58725572C62302\"\>"], "Output",
 CellChangeTimes->{{3.642641239461708*^9, 3.642641263762391*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Problem 164 - Numbers for which no three consecutive digits have a sum \
greater than a given value\
\>", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.641689815298222*^9, 3.64168982128623*^9}, {3.642469833207738*^9, 
   3.642469840014636*^9}}],

Cell["\<\
How many 20 digit numbers n (without any leading zero) exist such that no \
three consecutive digits of n have a sum greater than 9?\
\>", "Text",
 CellChangeTimes->{{3.642469851338858*^9, 3.642469856025524*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Nest", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Expand", "[", 
      RowBox[{"#", "/.", 
       RowBox[{
        RowBox[{"e", "[", 
         RowBox[{"i_", ",", "j_"}], "]"}], "\[RuleDelayed]", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"e", "[", 
           RowBox[{"j", ",", "k"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "0", ",", 
            RowBox[{"9", "-", "i", "-", "j"}]}], "}"}]}], "]"}]}]}], "]"}], 
     "&"}], ",", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"e", "[", 
       RowBox[{"0", ",", "i"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "9"}], "}"}]}], "]"}], ",", "19"}], "]"}], "/.", 
  RowBox[{"_e", "\[Rule]", "1"}]}]], "Input",
 CellChangeTimes->{{3.64246974543859*^9, 3.64246980707047*^9}}],

Cell[BoxData["378158756814587"], "Output",
 CellChangeTimes->{{3.642469754050194*^9, 3.64246980769936*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 166 - Criss Cross", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.641689815298222*^9, 3.64168982128623*^9}, {3.642469833207738*^9, 
   3.642469840014636*^9}, {3.643623969033765*^9, 3.643623974928979*^9}}],

Cell["\<\
A 4x4 grid is filled with digits d, 0 \[LessEqual] d \[LessEqual] 9.

It can be seen that in the grid

6 3 3 0
5 0 4 3
0 7 1 4
1 2 4 5

the sum of each row and each column has the value 12. Moreover the sum of \
each diagonal is also 12.

In how many ways can you fill a 4x4 grid with the digits d, 0 \[LessEqual] d \
\[LessEqual] 9 so that each row, each column, and both diagonals have the \
same sum?\
\>", "Text",
 CellChangeTimes->{{3.643623983356315*^9, 3.643623987458974*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"First", "@", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"Equal", "@@", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"#", ",", 
            RowBox[{"Transpose", "@", "#"}], ",", 
            RowBox[{"Diagonal", "/@", 
             RowBox[{"{", 
              RowBox[{"#", ",", 
               RowBox[{"Reverse", "@", "#"}]}], "}"}]}]}], "]"}], ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], ",", 
       RowBox[{"Catenate", "@", "#"}]}], "]"}]}], "&"}], "@", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Symbol", "[", 
       RowBox[{"\"\<a\>\"", "<>", 
        RowBox[{"ToString", "/@", 
         RowBox[{"{", "##", "}"}]}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.643623547778938*^9, 3.643623572794732*^9}, 
   3.643623603302585*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "svars"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Equations may not give solutions for all \\\"solve\\\" \
variables. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/svars\\\", \
ButtonNote -> \\\"Solve::svars\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.643623549392886*^9, 3.643623573809194*^9}, 
   3.643623604290189*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a24", "\[Rule]", 
    RowBox[{
    "a11", "+", "a12", "+", "a13", "+", "a14", "-", "a21", "-", "a22", "-", 
     "a23"}]}], ",", 
   RowBox[{"a32", "\[Rule]", 
    RowBox[{"a11", "-", "a14", "+", "a21", "-", "a23", "+", "a31"}]}], ",", 
   RowBox[{"a33", "\[Rule]", 
    RowBox[{"a12", "+", "a13", "+", 
     RowBox[{"2", " ", "a14"}], "-", "a21", "-", "a22", "-", "a31"}]}], ",", 
   RowBox[{"a34", "\[Rule]", 
    RowBox[{"a22", "+", "a23", "-", "a31"}]}], ",", 
   RowBox[{"a41", "\[Rule]", 
    RowBox[{"a12", "+", "a13", "+", "a14", "-", "a21", "-", "a31"}]}], ",", 
   RowBox[{"a42", "\[Rule]", 
    RowBox[{"a13", "+", 
     RowBox[{"2", " ", "a14"}], "-", "a21", "-", "a22", "+", "a23", "-", 
     "a31"}]}], ",", 
   RowBox[{"a43", "\[Rule]", 
    RowBox[{
    "a11", "-", "a13", "-", "a14", "+", "a21", "+", "a22", "-", "a23", "+", 
     "a31"}]}], ",", 
   RowBox[{"a44", "\[Rule]", 
    RowBox[{
     RowBox[{"-", "a14"}], "+", "a21", "+", "a31"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.643623549398534*^9, 3.643623573810679*^9}, 
   3.643623604291832*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"a31range", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"Min", "[", 
         RowBox[{"9", ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "+", "1"}]}], "]"}], 
     "&"}], "@", 
    RowBox[{"Transpose", "@", 
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Reduce", "[", 
          RowBox[{
           RowBox[{"0", "\[LessEqual]", "#", "\[LessEqual]", "9"}], ",", 
           "a31"}], "]"}], "&"}], "/@", 
        RowBox[{"sol", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"2", ";;"}], ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Inequality", "[", 
         RowBox[{
         "min_", ",", "LessEqual", ",", "a31", ",", "LessEqual", ",", 
          "max_"}], "]"}], "\[RuleDelayed]", 
        RowBox[{"{", 
         RowBox[{"min", ",", "max"}], "}"}]}], ",", 
       RowBox[{"{", "2", "}"}]}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.643623802770305*^9, 3.643623807910467*^9}, {
  3.643623853019472*^9, 3.64362386391296*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParallelSum", "[", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", "=", 
       RowBox[{"a11", "+", "a12", "+", "a13", "+", "a14"}]}], "}"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{"a31range", ",", 
       RowBox[{"{", 
        RowBox[{"a21", ",", 
         RowBox[{"Max", "[", 
          RowBox[{"0", ",", 
           RowBox[{"s", "-", "27"}]}], "]"}], ",", 
         RowBox[{"Min", "[", 
          RowBox[{"9", ",", "s"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"a22", ",", 
         RowBox[{"Max", "[", 
          RowBox[{"0", ",", 
           RowBox[{"s", "-", "a21", "-", "18"}]}], "]"}], ",", 
         RowBox[{"Min", "[", 
          RowBox[{"9", ",", 
           RowBox[{"s", "-", "a21"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"a23", ",", 
         RowBox[{"Max", "[", 
          RowBox[{"0", ",", 
           RowBox[{"s", "-", "a21", "-", "a22", "-", "9"}]}], "]"}], ",", 
         RowBox[{"Min", "[", 
          RowBox[{"9", ",", 
           RowBox[{"s", "-", "a21", "-", "a22"}]}], "]"}]}], "}"}]}], "]"}]}],
     "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a11", ",", "0", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a12", ",", "0", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a13", ",", "0", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a14", ",", "0", ",", "9"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData["7130034"], "Output",
 CellChangeTimes->{3.643624070539002*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 168 - Number Rotations", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.641689815298222*^9, 3.64168982128623*^9}, {3.642469833207738*^9, 
   3.642469840014636*^9}, {3.643623969033765*^9, 3.643623974928979*^9}, {
   3.65356048075769*^9, 3.653560485143506*^9}}],

Cell[TextData[{
 "Consider the number 142857. We can right-rotate this number by moving the \
last digit (7) to the front of it, giving us 714285.\nIt can be verified that \
714285=5\[Times]142857.\nThis demonstrates an unusual property of 142857: it \
is a divisor of its right-rotation.\n\nFind the last 5 digits of the sum of \
all integers n, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"10", " ", "<", " ", "n", " ", "<", " ", 
    SuperscriptBox["10", "100"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", that have this property."
}], "Text",
 CellChangeTimes->{{3.653560493040418*^9, 3.653560514867566*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"FromDigits", "@", 
          RowBox[{"Catenate", "@", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"#", ",", "n"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"Ceiling", "[", 
            RowBox[{"2", "/", 
             RowBox[{"Length", "@", "#"}]}], "]"}], ",", 
           RowBox[{"100", "/", 
            RowBox[{"Length", "@", "#"}]}]}], "}"}]}], "]"}], "&"}], "@", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"k", ",", "i"}], "}"}], "\[Equal]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "9"}], "}"}]}], ",", 
        RowBox[{"{", "9", "}"}], ",", 
        RowBox[{
         RowBox[{"RealDigits", "[", 
          RowBox[{"i", "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"10", "k"}], "-", "1"}], ")"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "k", ",", "9"}], "}"}]}], "]"}], ",", "1*^5"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.653560596337638*^9, 3.653560614371561*^9}, 
   3.653560666672952*^9}],

Cell[BoxData["59206"], "Output",
 CellChangeTimes->{3.653560533303537*^9, 3.653560667589613*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Problem 169 - Exploring the number of different ways a number can be \
expressed as a sum of powers of 2\
\>", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.641689815298222*^9, 3.64168982128623*^9}, {3.642469833207738*^9, 
   3.642469840014636*^9}, {3.642753479453653*^9, 3.642753484405342*^9}}],

Cell[TextData[{
 "Define f(0)=1 and f(n) to be the number of different ways n can be \
expressed as a sum of integer powers of 2 using each power no more than \
twice.\n\nFor example, f(10)=5 since there are five different ways to express \
10:\n\n1 + 1 + 8\n1 + 1 + 4 + 4\n1 + 1 + 2 + 2 + 4\n2 + 4 + 4\n2 + 8\n\nWhat \
is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    SuperscriptBox["10", "25"], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "?"
}], "Text",
 CellChangeTimes->{{3.642753493716877*^9, 3.642753507758224*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "0", "]"}], "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"n_", "?", "OddQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"f", "[", "n", "]"}], "=", 
    RowBox[{"f", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}], "/", "2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"n_", "?", "EvenQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"f", "[", "n", "]"}], "=", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"n", "/", "2"}], "]"}], "+", 
     RowBox[{"f", "[", 
      RowBox[{
       RowBox[{"n", "/", "2"}], "-", "1"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{"10", "^", "25"}], "]"}]}], "Input"],

Cell[BoxData["178653872807"], "Output",
 CellChangeTimes->{3.642753514902317*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Problem 171 - Finding numbers for which the sum of the squares of the digits \
is a square\
\>", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.641689815298222*^9, 3.64168982128623*^9}, {3.643858191392321*^9, 
   3.643858196418846*^9}, {3.652863787950455*^9, 3.652863793070171*^9}}],

Cell[TextData[{
 "For a positive integer n, let f(n) be the sum of the squares of the digits \
(in base 10) of n, e.g.\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", 
     RowBox[{"(", "3", ")"}]}], " ", "=", " ", 
    RowBox[{
     SuperscriptBox["3", "2"], "=", " ", "9"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ",\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", 
     RowBox[{"(", "25", ")"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["2", "2"], " ", "+", " ", 
      SuperscriptBox["5", "2"]}], " ", "=", " ", 
     RowBox[{
      RowBox[{"4", " ", "+", " ", "25"}], " ", "=", " ", "29"}]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ",\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", 
     RowBox[{"(", "442", ")"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["4", "2"], " ", "+", " ", 
      SuperscriptBox["4", "2"], " ", "+", " ", 
      SuperscriptBox["2", "2"]}], " ", "=", " ", 
     RowBox[{
      RowBox[{"16", " ", "+", " ", "16", " ", "+", " ", "4"}], " ", "=", " ", 
      "36"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nFind the last nine digits of the sum of all n, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", " ", "<", " ", "n", " ", "<", " ", 
    SuperscriptBox["10", "20"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", such that f(n) is a perfect square."
}], "Text",
 CellChangeTimes->{{3.652863805006931*^9, 3.652863858367075*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NestList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{"RotateRight", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"10", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "+", 
                RowBox[{"i", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
               RowBox[{"i", "^", "2"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "9"}], "}"}]}], "]"}], ",", 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{"RotateRight", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"i", "^", "2"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", "9"}], "}"}]}], "]"}]}], "}"}], 
         "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"SparseArray", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"i", "^", "2"}], "\[Rule]", "i"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "9"}], "}"}]}], "]"}], ",", 
            RowBox[{"20", "*", 
             RowBox[{"9", "^", "2"}]}]}], "]"}], ",", 
          RowBox[{"SparseArray", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"i", "^", "2"}], "\[Rule]", "1"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "9"}], "}"}]}], "]"}], ",", 
            RowBox[{"20", "*", 
             RowBox[{"9", "^", "2"}]}]}], "]"}]}], "}"}], ",", "19"}], "]"}], 
      "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "1", ",", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"20", "*", 
            RowBox[{"9", "^", "2"}]}], "]"}], "]"}], "^", "2"}]}], "]"}], 
      "]"}], ",", "2"}], "]"}], ",", "1*^9"}], "]"}]], "Input",
 CellChangeTimes->{{3.652863747445164*^9, 3.65286376389923*^9}}],

Cell[BoxData["142989277"], "Output",
 CellChangeTimes->{{3.652863757601046*^9, 3.652863764673928*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 172 - Investigating numbers with few repeated digits", \
"Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.641689815298222*^9, 3.64168982128623*^9}, {3.643858191392321*^9, 
   3.643858196418846*^9}}],

Cell["\<\
How many 18-digit numbers n (without leading zeros) are there such that no \
digit occurs more than three times in n?\
\>", "Text",
 CellChangeTimes->{{3.643858202030237*^9, 3.643858205971849*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"18", "!"}], 
   RowBox[{"SeriesCoefficient", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "x", "+", 
        RowBox[{
         RowBox[{"x", "^", "2"}], "/", "2"}], "+", 
        RowBox[{
         RowBox[{"x", "^", "3"}], "/", "6"}]}], ")"}], "^", "10"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "18"}], "}"}]}], "]"}]}], "-", 
  RowBox[{
   RowBox[{"17", "!"}], 
   RowBox[{"SeriesCoefficient", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "x", "+", 
        RowBox[{
         RowBox[{"x", "^", "2"}], "/", "2"}]}], ")"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "x", "+", 
         RowBox[{
          RowBox[{"x", "^", "2"}], "/", "2"}], "+", 
         RowBox[{
          RowBox[{"x", "^", "3"}], "/", "6"}]}], ")"}], "^", "9"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "17"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.643858135375511*^9, 3.643858158872393*^9}}],

Cell[BoxData["227485267000992000"], "Output",
 CellChangeTimes->{3.643858159915612*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Problem 173 - Using up to one million tiles how many different \
\[OpenCurlyDoubleQuote]hollow\[CloseCurlyDoubleQuote] square laminae can be \
formed?\
\>", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.641689815298222*^9, 3.64168982128623*^9}}],

Cell[TextData[{
 "We shall define a square lamina to be a square outline with a square \
\[OpenCurlyDoubleQuote]hole\[CloseCurlyDoubleQuote] so that the shape \
possesses vertical and horizontal symmetry. For example, using exactly \
thirty-two square tiles we can form two different square laminae:\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3EGqbFkRBdCbL4Xyw2v8GYjwBlBT0CGUI1DQrqCCOLuamaYtIcGjjRPE
3XHWAuXb2fx7asc2W/XrP/z5pz99XNf111++/uun3//9N3/5y+//8btfvP7H
b//xtz/+4fn6w68e1/XP13/+/ed/AgAAAAAAAAAAAAAAAAAAAAAAAHAPP/74
47Xbt2/fZN4/9vWPXvHGZBbFytyr9+jevP4+P+8mMyL2av13w6Y8fkpmUazM
7ZmNR/cm6NGOzSyKNf6TMotiZW7PbDy6N0GPdmxmUazxn5RZFCtze2bj0b0J
erRjM4tijf+kzKJYmdszG4/uTdCjHZtZFGv8J2UWxcrcntl4dG+CHu3YzKJY
4z8psyhW5vbMxqN7E/Rox2YWxRr/SZlFsTK3ZzYe3ZugRzs2syjW+E/KLIqV
uT2z8ejeBD3asZlFscZ/UmZRrMztmY1H9ybo0Y7NLIo1/pMyi2Jlbs9sPLo3
QY92bGZRrPGflFkUK3N7ZuPRvQl6tGMzi2KN/6TMoliZ2zMbj+5N0KMdm1kU
a/wnZRbFytye2Xh0b4Ie7djMoljjPymzKFbm9szGo3sT9GjHZhbFGv9JmUWx
MrdnNh7dm6BHOzazKNb4T8osipW5PbPx6N4EPdqxmUWxxn9SZlGszO2ZjUf3
JujRjs0sijX+kzKLYmVuz2w8ujdBj3ZsZlGs8Z+UWRQrc3tm49G9CXq0YzOL
Yo3/pMyiWJnbMxuP7k3Qox2bWRRr/CdlFsXK3J7ZeHRvgh7t2MyiWOM/KbMo
Vub2zMajexP0aMdmFsUa/0mZRbEyt2c2Ht2boEc7NrMo1vhPyiyKlbk9s/Ho
3gQ92rGZRbHGf1JmUazM7ZmNR/cm6NGOzSyKNf6TMotiZW7PbDy6N0GPdmxm
Uazxn5RZFCtze2bj0b35+Pi4ONLz+VS8/+nxeERkvnx+fh6bWfSk271q33h0
b66c/8c8NrMo9pr4y7/xixhmfEVTBvDkzKJY4w8L4yuaMoAnZxbFGn9YGF/R
lAE8ObMo1vjDwviKpgzgyZlFscYfFsZXNGUAT84sijX+sDC+oikDeHJmUazx
h4XxFU0ZwJMzi2KNPyyMr2jKAJ6cWRRr/GFhfEVTBvDkzKJY4w8L4yuaMoAn
ZxbFGn9YGF/RlAE8ObMo1vjDwviKpgzgyZlFscYfFsZXNGUAT84sijX+sDC+
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
AAAAAAAAAAAAAAAAAABi/AsnQrV6
     "], {{0, 287}, {511, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{511, 287},
   PlotRange->{{0, 511}, {0, 287}}]], "Input"],
 "\n\nWith one-hundred tiles, and not necessarily using all of the tiles at \
one time, it is possible to form forty-one different square laminae.\n\nUsing \
up to one million tiles how many different square laminae can be formed?"
}], "Text",
 CellChangeTimes->{{3.641689830987813*^9, 3.641689835883111*^9}, {
  3.641690025029376*^9, 3.641690027638302*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{"Floor", "[", 
   RowBox[{
    RowBox[{"DivisorSigma", "[", 
     RowBox[{"0", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"1*^6", "/", "4"}], "]"}]}], "]"}], "/", "2"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.641690200924875*^9, 3.641690294410921*^9}}],

Cell[BoxData["1572729"], "Output",
 CellChangeTimes->{
  3.641690225110212*^9, {3.641690260808492*^9, 3.641690295938551*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Problem 174 - Counting the number of \[OpenCurlyDoubleQuote]hollow\
\[CloseCurlyDoubleQuote] square laminae that can form one, two, three, ... \
distinct arrangements\
\>", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641284307988858*^9, 3.641284313575319*^9}, {
   3.641689815298222*^9, 3.64168982128623*^9}, {3.642295673252504*^9, 
   3.642295680656111*^9}}],

Cell[TextData[{
 "We shall define a square lamina to be a square outline with a square \
\[OpenCurlyDoubleQuote]hole\[CloseCurlyDoubleQuote] so that the shape \
possesses vertical and horizontal symmetry.\n\nGiven eight tiles it is \
possible to form a lamina in only one way: 3x3 square with a 1x1 hole in the \
middle. However, using thirty-two tiles it is possible to form two distinct \
laminae.\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3EGqbFkRBdCbL4Xyw2v8GYjwBlBT0CGUI1DQrqCCOLuamaYtIcGjjRPE
3XHWAuXb2fx7asc2W/XrP/z5pz99XNf111++/uun3//9N3/5y+//8btfvP7H
b//xtz/+4fn6w68e1/XP13/+/ed/AgAAAAAAAAAAAAAAAAAAAAAAAHAPP/74
47Xbt2/fZN4/9vWPXvHGZBbFytyr9+jevP4+P+8mMyL2av13w6Y8fkpmUazM
7ZmNR/cm6NGOzSyKNf6TMotiZW7PbDy6N0GPdmxmUazxn5RZFCtze2bj0b0J
erRjM4tijf+kzKJYmdszG4/uTdCjHZtZFGv8J2UWxcrcntl4dG+CHu3YzKJY
4z8psyhW5vbMxqN7E/Rox2YWxRr/SZlFsTK3ZzYe3ZugRzs2syjW+E/KLIqV
uT2z8ejeBD3asZlFscZ/UmZRrMztmY1H9ybo0Y7NLIo1/pMyi2Jlbs9sPLo3
QY92bGZRrPGflFkUK3N7ZuPRvQl6tGMzi2KN/6TMoliZ2zMbj+5N0KMdm1kU
a/wnZRbFytye2Xh0b4Ie7djMoljjPymzKFbm9szGo3sT9GjHZhbFGv9JmUWx
MrdnNh7dm6BHOzazKNb4T8osipW5PbPx6N4EPdqxmUWxxn9SZlGszO2ZjUf3
JujRjs0sijX+kzKLYmVuz2w8ujdBj3ZsZlGs8Z+UWRQrc3tm49G9CXq0YzOL
Yo3/pMyiWJnbMxuP7k3Qox2bWRRr/CdlFsXK3J7ZeHRvgh7t2MyiWOM/KbMo
Vub2zMajexP0aMdmFsUa/0mZRbEyt2c2Ht2boEc7NrMo1vhPyiyKlbk9s/Ho
3gQ92rGZRbHGf1JmUazM7ZmNR/cm6NGOzSyKNf6TMotiZW7PbDy6N0GPdmxm
Uazxn5RZFCtze2bj0b35+Pi4ONLz+VS8/+nxeERkvnx+fh6bWfSk271q33h0
b66c/8c8NrMo9pr4y7/xixhmfEVTBvDkzKJY4w8L4yuaMoAnZxbFGn9YGF/R
lAE8ObMo1vjDwviKpgzgyZlFscYfFsZXNGUAT84sijX+sDC+oikDeHJmUazx
h4XxFU0ZwJMzi2KNPyyMr2jKAJ6cWRRr/GFhfEVTBvDkzKJY4w8L4yuaMoAn
ZxbFGn9YGF/RlAE8ObMo1vjDwviKpgzgyZlFscYfFsZXNGUAT84sijX+sDC+
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
AAAAAAAAAAAAAAAAAABi/AsnQrV6
     "], {{0, 287}, {511, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{511, 287},
   PlotRange->{{0, 511}, {0, 287}}]], "Output",
  CellChangeTimes->{3.64229572702416*^9}],
 "\n\nIf t represents the number of tiles used, we shall say that t = 8 is \
type L(1) and t = 32 is type L(2).\n\nLet N(n) be the number of t \
\[LessEqual] 1000000 such that t is type L(n); for example, N(15) = 832.\n\n\
What is \[Sum] N(n) for 1 \[LessEqual] n \[LessEqual] 10?"
}], "Text",
 CellChangeTimes->{{3.641689830987813*^9, 3.641689835883111*^9}, {
  3.641690025029376*^9, 3.641690027638302*^9}, {3.642295697162629*^9, 
  3.642295730880033*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"Floor", "[", 
    RowBox[{
     RowBox[{"DivisorSigma", "[", 
      RowBox[{"0", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"1*^6", "/", "4"}], "]"}]}], "]"}], "/", "2"}], "]"}], ",", 
   RowBox[{"n_", "/;", 
    RowBox[{"1", "\[LessEqual]", "n", "\[LessEqual]", "10"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.642295585926484*^9, 3.642295660794177*^9}, {
  3.642295777075658*^9, 3.642295778598298*^9}}],

Cell[BoxData["209566"], "Output",
 CellChangeTimes->{{3.642295586569983*^9, 3.642295602970106*^9}, {
   3.642295645278837*^9, 3.642295662619624*^9}, 3.642295780252788*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 176 - 200", "Subsection",
 CellChangeTimes->{{3.640509015355191*^9, 3.640509022245683*^9}, {
  3.640519338671053*^9, 3.640519341443173*^9}, {3.6405218351164*^9, 
  3.640521837410107*^9}, {3.640692001248666*^9, 3.64069200435303*^9}, {
  3.640938376129309*^9, 3.640938377765213*^9}, {3.641284295689656*^9, 
  3.641284299496535*^9}, {3.641462677048394*^9, 3.641462680280947*^9}}],

Cell[CellGroupData[{

Cell["Problem 178 - Step Numbers", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.644237695608284*^9, 3.644237701314935*^9}}],

Cell[TextData[{
 "Consider the number 45656.\nIt can be seen that each pair of consecutive \
digits of 45656 has a difference of one.\nA number for which every pair of \
consecutive digits has a difference of one is called a step number.\nA \
pandigital number contains every decimal digit from 0 to 9 at least once.\n\
How many pandigital step numbers less than ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "40"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " are there? "
}], "Text",
 CellChangeTimes->{{3.644237711139791*^9, 3.644237721900977*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "1", ",", "1"}], "]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "_", ",", "_"}], "]"}], "=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"i_", ",", "j_", ",", "_"}], "]"}], "/;", 
    RowBox[{"i", ">", "j"}]}], "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"i_", ",", "j_", ",", "1"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"i", ",", "j", ",", "1"}], "]"}], "=", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{
       RowBox[{"i", "-", "1"}], ",", 
       RowBox[{"j", "-", "1"}], ",", "1"}], "]"}], "+", 
     RowBox[{"f", "[", 
      RowBox[{"i", ",", 
       RowBox[{"j", "-", "1"}], ",", "2"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"i_", ",", "j_", ",", "i_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"i", ",", "j", ",", "i"}], "]"}], "=", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{
       RowBox[{"i", "-", "1"}], ",", 
       RowBox[{"j", "-", "1"}], ",", 
       RowBox[{"i", "-", "1"}]}], "]"}], "+", 
     RowBox[{"f", "[", 
      RowBox[{"i", ",", 
       RowBox[{"j", "-", "1"}], ",", 
       RowBox[{"i", "-", "1"}]}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"i_", ",", "j_", ",", "k_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"i", ",", "j", ",", "k"}], "]"}], "=", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"i", ",", 
       RowBox[{"j", "-", "1"}], ",", 
       RowBox[{"k", "-", "1"}]}], "]"}], "+", 
     RowBox[{"f", "[", 
      RowBox[{"i", ",", 
       RowBox[{"j", "-", "1"}], ",", 
       RowBox[{"k", "+", "1"}]}], "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.644236817554342*^9, 3.644236817940386*^9}, {
  3.644237178193647*^9, 3.644237184657202*^9}, {3.644237255081118*^9, 
  3.644237334736411*^9}, {3.644237365122944*^9, 3.644237428459261*^9}, {
  3.644237470070634*^9, 3.644237499956485*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"10", ",", "j", ",", "k"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "40"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.644237655880926*^9, 3.644237677725025*^9}, 
   3.644237865749605*^9}],

Cell[BoxData["126461847755"], "Output",
 CellChangeTimes->{{3.644237661629983*^9, 3.644237679412423*^9}, 
   3.644237866862711*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 179 - Consecutive positive divisors", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}}],

Cell[TextData[{
 "Find the number of integers ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", " ", "<", " ", "n", " ", "<", " ", 
    SuperscriptBox["10", "7"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", for which n and n + 1 have the same number of positive divisors. For \
example, 14 has the positive divisors 1, 2, 7, 14 while 15 has 1, 3, 5, 15"
}], "Text",
 CellChangeTimes->{{3.641462721575424*^9, 3.641462754369687*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"Boole", "[", 
    RowBox[{"d", "\[Equal]", 
     RowBox[{"(", 
      RowBox[{"d", "=", 
       RowBox[{"DivisorSigma", "[", 
        RowBox[{"0", ",", "i"}], "]"}]}], ")"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1*^7"}], "}"}]}], "]"}]}], "Input"],

Cell[BoxData["986262"], "Output",
 CellChangeTimes->{3.64146408222122*^9, 3.641464142579457*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 182 - RSA encryption", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.642751153268927*^9, 3.642751159421622*^9}, {
   3.65407238247049*^9, 3.654072388331509*^9}}],

Cell[TextData[{
 "The RSA encryption is based on the following procedure:\n\nGenerate two \
distinct primes p and q.\nCompute n=pq and \[CurlyPhi]=(p-1)(q-1).\nFind an \
integer e, 1<e<\[CurlyPhi], such that gcd(e,\[CurlyPhi])=1.\n\nA message in \
this system is a number in the interval [0,n-1].\nA text to be encrypted is \
then somehow converted to messages (numbers in the interval [0,n-1]).\nTo \
encrypt the text, for each message, m, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "=", 
    RowBox[{
     SuperscriptBox["m", "e"], " ", "mod", " ", "n"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is calculated.\n\nTo decrypt the text, the following procedure is needed: \
calculate d such that ed=1 mod \[CurlyPhi], then for each encrypted message, \
c, calculate ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "=", 
    RowBox[{
     SuperscriptBox["c", "d"], " ", "mod", " ", "n"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nThere exist values of e and m such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["m", "e"], " ", "mod", " ", "n"}], "=", "m"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\nWe call messages m for which ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["m", "e"], " ", "mod", " ", "n"}], "=", "m"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " unconcealed messages.\n\nAn issue when choosing e is that there should not \
be too many unconcealed messages.\nFor instance, let p=19 and q=37.\nThen \
n=19*37=703 and \[CurlyPhi]=18*36=648.\nIf we choose e=181, then, although \
gcd(181,648)=1 it turns out that all possible messages\nm (0\[LessEqual]m\
\[LessEqual]n-1) are unconcealed when calculating ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["m", "e"], " ", "mod", " ", "n"}], TraditionalForm]]],
 ".\nFor any valid choice of e there exist some unconcealed messages.\nIt\
\[CloseCurlyQuote]s important that the number of unconcealed messages is at a \
minimum.\n\nChoose p=1009 and q=3643.\nFind the sum of all values of e, 1<e<\
\[CurlyPhi](1009,3643) and gcd(e,\[CurlyPhi])=1, so that the number of \
unconcealed messages for this value of e is at a minimum."
}], "Text",
 CellChangeTimes->{{3.654072400323135*^9, 3.654072474143939*^9}, {
  3.654072515922128*^9, 3.654072529617512*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CurlyPhi]", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1009", "-", "1"}], ")"}], 
   RowBox[{"(", 
    RowBox[{"3643", "-", "1"}], ")"}]}]}]], "Input"],

Cell[BoxData["3671136"], "Output",
 CellChangeTimes->{3.654073560440367*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Range", "@", "\[CurlyPhi]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"CoprimeQ", "[", 
       RowBox[{"#", ",", "\[CurlyPhi]"}], "]"}], "&&", 
      RowBox[{
       RowBox[{"GCD", "[", 
        RowBox[{
         RowBox[{"#", "-", "1"}], ",", "\[CurlyPhi]"}], "]"}], "\[Equal]", 
       "2"}]}], "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.654073573089989*^9}],

Cell[BoxData["399788195976"], "Output",
 CellChangeTimes->{{3.654073567711044*^9, 3.654073581118366*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 183 - Maximum product of parts", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.642751153268927*^9, 3.642751159421622*^9}}],

Cell[TextData[{
 "Let N be a positive integer and let N be split into k equal parts, r = N/k, \
so that N = r + r + ... + r.\nLet P be the product of these parts, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"r", " ", "\[Times]", " ", "r", " ", "\[Times]"}], " ", 
       "..."}], " ", "\[Times]", " ", "r"}], " ", "=", " ", 
     SuperscriptBox["r", "k"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nFor example, if 11 is split into five equal parts, 11 = 2.2 + 2.2 + \
2.2 + 2.2 + 2.2, then ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", " ", "=", " ", 
    RowBox[{
     SuperscriptBox["2.2", "5"], " ", "=", " ", "51.53632"}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nLet ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"M", 
     RowBox[{"(", "N", ")"}]}], " ", "=", " ", 
    SubscriptBox["P", "max"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for a given value of N.\n\nIt turns out that the maximum for N = 11 is \
found by splitting eleven into four equal parts which leads to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["P", "max"], " ", "=", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"11", "/", "4"}], ")"}], "4"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "; that is, M(11) = 14641/256 = 57.19140625, which is a terminating decimal.\
\n\nHowever, for N = 8 the maximum is achieved by splitting it into three \
equal parts, so M(8) = 512/27, which is a non-terminating decimal.\n\nLet \
D(N) = N if M(N) is a non-terminating decimal and D(N) = -N if M(N) is a \
terminating decimal.\n\nFor example, \[CapitalSigma]D(N) for 5 \[LessEqual] N \
\[LessEqual] 100 is 2438.\n\nFind \[CapitalSigma]D(N) for 5 \[LessEqual] N \
\[LessEqual] 10000."
}], "Text",
 CellChangeTimes->{{3.642751165046645*^9, 3.642751277193161*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"SubsetQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
       RowBox[{"First", "/@", 
        RowBox[{"FactorInteger", "@", 
         RowBox[{"Denominator", "@", 
          RowBox[{"Max", "@", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"n", "/", "k"}], ")"}], "^", "k"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Floor", "[", 
                  RowBox[{"n", "/", "E"}], "]"}], ",", 
                 RowBox[{"Ceiling", "[", 
                  RowBox[{"n", "/", "E"}], "]"}]}], "}"}]}], "}"}]}], 
            "]"}]}]}]}]}]}], "]"}], ",", 
     RowBox[{"-", "n"}], ",", "n"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "5", ",", "10000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.642751029326392*^9, 3.642751054959178*^9}}],

Cell[BoxData["48861552"], "Output",
 CellChangeTimes->{{3.642751030118326*^9, 3.642751072191342*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 185 - Number Mind", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.642751153268927*^9, 3.642751159421622*^9}, {
   3.645244411220694*^9, 3.645244415217453*^9}}],

Cell["\<\
The game Number Mind is a variant of the well known game Master Mind.

Instead of coloured pegs, you have to guess a secret sequence of digits. \
After each guess you\[CloseCurlyQuote]re only told in how many places you\
\[CloseCurlyQuote]ve guessed the correct digit. So, if the sequence was 1234 \
and you guessed 2036, you\[CloseCurlyQuote]d be told that you have one \
correct digit; however, you would NOT be told that you also have another \
digit in the wrong place.

For instance, given the following guesses for a 5-digit secret sequence,

90342 ;2 correct
70794 ;0 correct
39458 ;2 correct
34109 ;1 correct
51545 ;2 correct
12531 ;1 correct

The correct sequence 39542 is unique.

Based on the following guesses,

5616185650518293 ;2 correct
3847439647293047 ;1 correct
5855462940810587 ;3 correct
9742855507068353 ;3 correct
4296849643607543 ;3 correct
3174248439465858 ;1 correct
4513559094146117 ;2 correct
7890971548908067 ;3 correct
8157356344118483 ;1 correct
2615250744386899 ;2 correct
8690095851526254 ;3 correct
6375711915077050 ;1 correct
6913859173121360 ;1 correct
6442889055042768 ;2 correct
2321386104303845 ;0 correct
2326509471271448 ;2 correct
5251583379644322 ;2 correct
1748270476758276 ;3 correct
4895722652190306 ;1 correct
3041631117224635 ;3 correct
1841236454324589 ;3 correct
2659862637316867 ;2 correct

Find the unique 16-digit secret sequence.\
\>", "Text",
 CellChangeTimes->{{3.645244424048548*^9, 3.645244431689005*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"guesses", "=", 
   RowBox[{"StringCases", "[", 
    RowBox[{
    "\"\<5616185650518293 ;2 correct\n3847439647293047 ;1 correct\n\
5855462940810587 ;3 correct\n9742855507068353 ;3 correct\n4296849643607543 ;3 \
correct\n3174248439465858 ;1 correct\n4513559094146117 ;2 correct\n\
7890971548908067 ;3 correct\n8157356344118483 ;1 correct\n2615250744386899 ;2 \
correct\n8690095851526254 ;3 correct\n6375711915077050 ;1 correct\n\
6913859173121360 ;1 correct\n6442889055042768 ;2 correct\n2321386104303845 ;0 \
correct\n2326509471271448 ;2 correct\n5251583379644322 ;2 correct\n\
1748270476758276 ;3 correct\n4895722652190306 ;1 correct\n3041631117224635 ;3 \
correct\n1841236454324589 ;3 correct\n2659862637316867 ;2 correct\>\"", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"n", ":", "NumberString"}], "~~", "\"\< ;\>\"", "~~", 
       RowBox[{"d", ":", "DigitCharacter"}], "~~", "\"\< correct\>\""}], 
      "\[RuleDelayed]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"IntegerDigits", "@", 
         RowBox[{"FromDigits", "@", "n"}]}], ",", 
        RowBox[{"FromDigits", "@", "d"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.644637930093808*^9, 3.644637936453694*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"guesses", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.645252478430919*^9, 3.64525248638604*^9}}],

Cell[BoxData["16"], "Output",
 CellChangeTimes->{3.645252486838072*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FromDigits", "@", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Position", "[", "1", "]"}], "/@", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"LinearProgramming", "[", 
          RowBox[{
           RowBox[{"ConstantArray", "[", 
            RowBox[{"1", ",", "160"}], "]"}], ",", "##", ",", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", "160"}], "]"}], ",", 
           "Integers"}], "]"}], ",", "10"}], "]"}]}], "-", "1"}], "]"}]}], 
   "&"}], "@@", 
  RowBox[{"Transpose", "@", 
   RowBox[{"Normal", "@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Join", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"SparseArray", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "+", "1"}], "\[Rule]", "1"}], ",", "10"}], 
               "]"}], "&"}], "/@", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "0"}], "}"}]}], "}"}], 
        "&"}], "/@", "guesses"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"SparseArray", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"j_", "/;", 
              RowBox[{
               RowBox[{"10", 
                RowBox[{"(", 
                 RowBox[{"i", "-", "1"}], ")"}]}], "<", "j", "\[LessEqual]", 
               RowBox[{"10", "i"}]}]}], "\[Rule]", "1"}], ",", "160"}], "]"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "16"}], "}"}]}], "]"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.645250357916812*^9, 3.645250358212364*^9}, {
  3.645250408517469*^9, 3.645250474730547*^9}, {3.64525283652802*^9, 
  3.645252888364389*^9}, {3.645252945072458*^9, 3.645252952099839*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LinearProgramming", "::", "lpip"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: integer linear programming will use a \
machine-precision approximation of the inputs. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/LinearProgramming\\\", ButtonNote -> \
\\\"LinearProgramming::lpip\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.645250475943029*^9, {3.645252841016284*^9, 3.64525285838742*^9}, {
   3.645252889501451*^9, 3.645252892489295*^9}, {3.645252937098492*^9, 
   3.645252952996105*^9}}],

Cell[BoxData["4640261571849533"], "Output",
 CellChangeTimes->{
  3.645250358934422*^9, {3.645250408836709*^9, 3.645250475997554*^9}, {
   3.645252841070303*^9, 3.645252858560182*^9}, {3.645252889553247*^9, 
   3.645252892542508*^9}, {3.645252937151241*^9, 3.645252953048835*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 186 - Connectedness of a network", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.642751153268927*^9, 3.642751159421622*^9}, {
   3.645244411220694*^9, 3.645244415217453*^9}, {3.645585569888832*^9, 
   3.645585574294262*^9}}],

Cell[TextData[{
 "Here are the records from a busy telephone system with one million users:\n\
RecNr\tCaller\t\tCalled\n1\t200007\t100053\n2\t600183\t500439\n3\t600863\t\
701497\n...\t...\t\t...\n\nThe telephone number of the caller and the called \
number in record n are ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Caller", 
     RowBox[{"(", "n", ")"}]}], " ", "=", " ", 
    SubscriptBox["S", 
     RowBox[{
      RowBox[{"2", "n"}], "-", "1"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Called", 
     RowBox[{"(", "n", ")"}]}], " ", "=", " ", 
    SubscriptBox["S", 
     RowBox[{"2", "n"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", 
    RowBox[{"1", ",", "2", ",", "3", ",", "..."}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " come from the \[OpenCurlyDoubleQuote]Lagged Fibonacci Generator\
\[CloseCurlyDoubleQuote]:\n\nFor 1 \[LessEqual] k \[LessEqual] 55, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["S", "k"], " ", "=", " ", 
    RowBox[{
     RowBox[{"[", 
      RowBox[{"100003", " ", "-", " ", 
       RowBox[{"200003", "k"}], " ", "+", " ", 
       RowBox[{"300007", 
        SuperscriptBox["k", "3"]}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{"modulo", " ", "1000000"}], ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\nFor 56 \[LessEqual] k, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["S", "k"], " ", "=", " ", 
    RowBox[{
     RowBox[{"[", 
      RowBox[{
       SubscriptBox["S", 
        RowBox[{"k", "-", "24"}]], " ", "+", " ", 
       SubscriptBox["S", 
        RowBox[{"k", "-", "55"}]]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{"modulo", " ", "1000000"}], ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nIf Caller(n) = Called(n) then the user is assumed to have misdialled \
and the call fails; otherwise the call is successful.\n\nFrom the start of \
the records, we say that any pair of users X and Y are friends if X calls Y \
or vice-versa. Similarly, X is a friend of a friend of Z if X is a friend of \
Y and Y is a friend of Z; and so on for longer chains.\n\nThe Prime Minister\
\[CloseCurlyQuote]s phone number is 524287. After how many successful calls, \
not counting misdials, will 99% of the users (including the PM) be a friend, \
or a friend of a friend etc., of the Prime Minister?"
}], "Text",
 CellChangeTimes->{{3.64558558341683*^9, 3.645585681611781*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Slow", "!"}], "*)"}]], "Input",
 CellChangeTimes->{{3.645585766191517*^9, 3.645585778291487*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"s", "[", "k_", "]"}], "/;", 
    RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", "55"}]}], ":=", 
   RowBox[{
    RowBox[{"s", "[", "k", "]"}], "=", 
    RowBox[{"Mod", "[", 
     RowBox[{
      RowBox[{"100003", "-", 
       RowBox[{"200003", "k"}], "+", 
       RowBox[{"300007", 
        RowBox[{"k", "^", "3"}]}]}], ",", "1000000"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "[", "k_", "]"}], ":=", 
   RowBox[{
    RowBox[{"s", "[", "k", "]"}], "=", 
    RowBox[{"Mod", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"k", "-", "24"}], "]"}], "+", 
       RowBox[{"s", "[", 
        RowBox[{"k", "-", "55"}], "]"}]}], ",", "1000000"}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.645585766191517*^9, 3.645585780371093*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cc", "[", "g_", "]"}], ":=", 
  RowBox[{"Total", "[", 
   RowBox[{"Length", "/@", 
    RowBox[{"ConnectedComponents", "[", 
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{"UndirectedEdge", "@@@", "g"}], "]"}], ",", 
      RowBox[{"{", "524287", "}"}]}], "]"}]}], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MemberQ", "[", 
  RowBox[{
   RowBox[{"Array", "[", 
    RowBox[{"s", ",", "5000000"}], "]"}], ",", "524287"}], "]"}]], "Input"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.649202783305189*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gs", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Array", "[", 
      RowBox[{"s", ",", "5000000"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"cc", "[", "gs", "]"}]}], "Input",
 CellChangeTimes->{{3.645585697517494*^9, 3.645585713299141*^9}}],

Cell[BoxData["993006"], "Output",
 CellChangeTimes->{3.64920281325182*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"new", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"cc", "[", 
            RowBox[{"gs", "[", 
             RowBox[{"[", 
              RowBox[{";;", "#"}], "]"}], "]"}], "]"}]}], "}"}], "&"}], "@", 
        RowBox[{"Ceiling", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", "2"}], "]"}]}]}], 
      "}"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"new", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "<", "990000"}], ",", 
       RowBox[{"#0", "[", 
        RowBox[{"new", ",", "#2"}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#1", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], "<", 
          RowBox[{"new", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"#0", "[", 
          RowBox[{"#1", ",", "new"}], "]"}], ",", 
         RowBox[{"Length", "@", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{
            RowBox[{"gs", "[", 
             RowBox[{"[", 
              RowBox[{";;", 
               RowBox[{"new", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"s_", ",", "s_"}], "}"}]}], "]"}]}]}], "]"}]}], "]"}]}], 
    "]"}], "&"}], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2500000", ",", "993006"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.645585751867635*^9}],

Cell[BoxData["2325629"], "Output",
 CellChangeTimes->{3.649202973802437*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 187 - Semiprimes", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641548185796512*^9, 3.641548190884134*^9}}],

Cell[TextData[{
 "A composite is a number containing at least two prime factors. For example, \
15 = 3 \[Times] 5; 9 = 3 \[Times] 3; 12 = 2 \[Times] 2 \[Times] 3.\n\nThere \
are ten composites below thirty containing precisely two, not necessarily \
distinct, prime factors: 4, 6, 9, 10, 14, 15, 21, 22, 25, 26.\n\nHow many \
composite integers, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", " ", "<", " ", 
    SuperscriptBox["10", "8"]}], TraditionalForm]]],
 ", have precisely two, not necessarily distinct, prime factors?"
}], "Text",
 CellChangeTimes->{{3.641548197027161*^9, 3.641548206311467*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"#", " ", 
      RowBox[{"UnitStep", "@", "#"}]}], "&"}], "[", 
    RowBox[{
     RowBox[{"PrimePi", "[", 
      RowBox[{"1*^8", "/", 
       RowBox[{"Prime", "@", "i"}]}], "]"}], "-", "i", "+", "1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"PrimePi", "[", 
      RowBox[{"1*^8", "/", "2"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641548523134235*^9, 3.641548556944265*^9}}],

Cell[BoxData["17427258"], "Output",
 CellChangeTimes->{{3.641548551058885*^9, 3.641548576672745*^9}, 
   3.642562554736494*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 188 - The hyperexponentiation of a number", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641548185796512*^9, 3.641548190884134*^9}, {
   3.642240536367516*^9, 3.642240540227825*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["hyperexponentiation",
  FontSlant->"Italic"],
 " or tetration of a number a by a positive integer b, denoted by a\[UpArrow]\
\[UpArrow]b or ba, is recursively defined by:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "\[UpArrow]", "\[UpArrow]", "1"}], " ", "=", " ", "a"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ",\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "\[UpArrow]", "\[UpArrow]", 
     RowBox[{"(", 
      RowBox[{"k", "+", "1"}], ")"}]}], " ", "=", " ", 
    SuperscriptBox["a", 
     RowBox[{"(", 
      RowBox[{"a", "\[UpArrow]", "\[UpArrow]", "k"}], ")"}]]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nThus we have e.g. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"3", "\[UpArrow]", "\[UpArrow]", "2"}], " ", "=", " ", 
    RowBox[{
     SuperscriptBox["3", "3"], " ", "=", " ", "27"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", hence ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"3", "\[UpArrow]", "\[UpArrow]", "3"}], " ", "=", " ", 
    RowBox[{
     SuperscriptBox["3", "27"], " ", "=", " ", "7625597484987"}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and 3\[UpArrow]\[UpArrow]4 is roughly ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", 
    RowBox[{"3.6383346400240996", "*", 
     RowBox[{"10", "^", "12"}]}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nFind the last 8 digits of 1777\[UpArrow]\[UpArrow]1855."
}], "Text",
 CellChangeTimes->{{3.642240547638733*^9, 3.642240611792335*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a_", "\[UpArrow]", "1"}], ":=", "a"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a_", "\[UpArrow]", "k_"}], ":=", 
   RowBox[{"PowerMod", "[", 
    RowBox[{"a", ",", 
     RowBox[{"a", "\[UpArrow]", 
      RowBox[{"(", 
       RowBox[{"k", "-", "1"}], ")"}]}], ",", "1*^8"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.642240625073885*^9, 3.642240692667706*^9}, 
   3.642240773466218*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"$RecursionLimit", "=", "Infinity"}], "}"}], ",", 
   RowBox[{"1777", "\[UpArrow]", "1855"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.642240694138785*^9, 3.642240709451337*^9}, {
  3.642240781165807*^9, 3.642240822477023*^9}}],

Cell[BoxData["95962097"], "Output",
 CellChangeTimes->{{3.642240699996765*^9, 3.642240709755976*^9}, {
   3.642240783910969*^9, 3.642240792591163*^9}, 3.642240823217496*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 190 - Maximising a weighted product", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641548185796512*^9, 3.641548190884134*^9}, {
   3.642226184442365*^9, 3.642226189406101*^9}, {3.64317422287644*^9, 
   3.643174231225828*^9}}],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["S", "m"], " ", "=", " ", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["x", "1"], ",", " ", 
      SubscriptBox["x", "2"], ",", " ", "...", " ", ",", " ", 
      SubscriptBox["x", "m"]}], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " be the m-tuple of positive real numbers with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["x", "1"], " ", "+", " ", 
       SubscriptBox["x", "2"], " ", "+"}], " ", "..."}], " ", "+", " ", 
     SubscriptBox["x", "m"]}], " ", "=", " ", "m"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for which ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["P", "m"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["x", "1"], " ", "*", " ", 
       SuperscriptBox[
        SubscriptBox["x", "2"], "2"], " ", "*"}], " ", "..."}], " ", "*", " ", 
     SuperscriptBox[
      SubscriptBox["x", "m"], "m"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is maximised.\n\nFor example, it can be verified that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"[", 
     SubscriptBox["P", "10"], "]"}], " ", "=", " ", "4112"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ([ ] is the integer part function).\n\nFind ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalSigma]", "[", 
    SubscriptBox["P", "m"], "]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for 2 \[LessEqual] m \[LessEqual] 15."
}], "Text",
 CellChangeTimes->{{3.643174243384972*^9, 3.643174334557755*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"Floor", "[", 
    RowBox[{
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"i", "^", "i"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "m"}], "}"}]}], "]"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"m", "+", "1"}], ")"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"m", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"m", "+", "1"}], ")"}], "/", "2"}]}], ")"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "2", ",", "15"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.643175729900259*^9, 3.643175738358745*^9}}],

Cell[BoxData["371048281"], "Output",
 CellChangeTimes->{{3.643175709996187*^9, 3.643175738986452*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 191 - Prize Strings", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641548185796512*^9, 3.641548190884134*^9}, {
   3.642226184442365*^9, 3.642226189406101*^9}}],

Cell["\<\
A particular school offers cash rewards to children with good attendance and \
punctuality. If they are absent for three consecutive days or late on more \
than one occasion then they forfeit their prize.

During an n-day period a trinary string is formed for each child consisting \
of L\[CloseCurlyQuote]s (late), O\[CloseCurlyQuote]s (on time), and A\
\[CloseCurlyQuote]s (absent).

Although there are eighty-one trinary strings for a 4-day period that can be \
formed, exactly forty-three strings would lead to a prize:

OOOO OOOA OOOL OOAO OOAA OOAL OOLO OOLA OAOO OAOA
OAOL OAAO OAAL OALO OALA OLOO OLOA OLAO OLAA AOOO
AOOA AOOL AOAO AOAA AOAL AOLO AOLA AAOO AAOA AAOL
AALO AALA ALOO ALOA ALAO ALAA LOOO LOOA LOAO LOAA
LAOO LAOA LAAO

How many \[OpenCurlyDoubleQuote]prize\[CloseCurlyDoubleQuote] strings exist \
over a 30-day period?\
\>", "Text",
 CellChangeTimes->{{3.64222619973435*^9, 3.642226208978785*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SeriesCoefficient", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"#", "-", "1", "+", 
      RowBox[{"x", 
       RowBox[{"#", "^", "2"}]}]}], "&"}], "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "x", "+", 
       RowBox[{"x", "^", "2"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", "x", "-", 
       RowBox[{"x", "^", "2"}], "-", 
       RowBox[{"x", "^", "3"}]}], ")"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.642228537910774*^9, 3.642228577603308*^9}, {
  3.642228613553416*^9, 3.642228621389381*^9}, {3.642229093182476*^9, 
  3.642229102741534*^9}, {3.642229178671563*^9, 3.642229186649467*^9}}],

Cell[BoxData["1918080160"], "Output",
 CellChangeTimes->{
  3.642228542300211*^9, 3.642228578135655*^9, 3.642228621947639*^9, 
   3.642229103346017*^9, {3.642229182196652*^9, 3.642229187322314*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 193 - Squarefree Numbers", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641548185796512*^9, 3.641548190884134*^9}, {
   3.642226184442365*^9, 3.642226189406101*^9}, {3.644467881576106*^9, 
   3.644467885525871*^9}}],

Cell[TextData[{
 "A positive integer n is called squarefree, if no square of a prime divides \
n, thus 1, 2, 3, 5, 6, 7, 10, 11 are squarefree, but not 4, 8, 9, 12.\n\nHow \
many squarefree numbers are there below ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "50"], TraditionalForm]]],
 "?"
}], "Text",
 CellChangeTimes->{{3.644467891207419*^9, 3.644467898024395*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"$RecursionLimit", "=", "Infinity"}], ",", 
     RowBox[{"q", "=", 
      RowBox[{"PrimePi", "[", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"2.", "^", "50"}], "/", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Range", "@", "3*^6"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"MoebiusMu", "[", "#", "]"}], "^", "2"}], "\[Equal]", 
             "1"}], "&"}]}], "]"}]}], "]"}], "]"}]}], ",", "f"}], "}"}], ",", 
   
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"m_", ",", "0"}], "]"}], ":=", "m"}], ";", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"m", ",", "n"}], "]"}], "=", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"m", ",", 
         RowBox[{"n", "-", "1"}]}], "]"}], "-", 
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"Floor", "[", 
          RowBox[{"m", "/", 
           RowBox[{
            RowBox[{"Prime", "@", "n"}], "^", "2"}]}], "]"}], ",", 
         RowBox[{"n", "-", "1"}]}], "]"}]}]}]}], ";", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{
       RowBox[{"2", "^", "50"}], ",", 
       RowBox[{"Last", "@", "q"}]}], "]"}], "-", 
     RowBox[{"Total", "@", "q"}], "+", 
     RowBox[{
      RowBox[{"Length", "@", "q"}], "*", 
      RowBox[{"Last", "@", "q"}]}]}]}]}], "]"}]], "Input"],

Cell[BoxData["684465067343069"], "Output",
 CellChangeTimes->{3.644490625866673*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Problem 197 - Investigating the behaviour of a recursively defined sequence\
\>", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641548185796512*^9, 3.641548190884134*^9}, {
   3.642226184442365*^9, 3.642226189406101*^9}, {3.642661810656529*^9, 
   3.642661815259194*^9}}],

Cell[TextData[{
 "Given is the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", 
     RowBox[{"(", "x", ")"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"\[LeftFloor]", 
      SuperscriptBox["2", 
       RowBox[{"30.403243784", "-", 
        SuperscriptBox["x", "2"]}]], "\[RightFloor]"}], " ", "\[Times]", " ", 
     
     SuperscriptBox["10", 
      RowBox[{"-", "9"}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ( \[LeftFloor] \[RightFloor] is the floor-function),\nthe sequence un is \
defined by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["u", "0"], " ", "=", " ", 
    RowBox[{"-", "1"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["u", 
     RowBox[{"n", "+", "1"}]], " ", "=", " ", 
    RowBox[{"f", "(", 
     SubscriptBox["u", "n"], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nFind ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["u", "n"], " ", "+", " ", 
    SubscriptBox["u", 
     RowBox[{"n", "+", "1"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", " ", "=", " ", 
    SuperscriptBox["10", "12"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\nGive your answer with 9 digits after the decimal point."
}], "Text",
 CellChangeTimes->{{3.642661819799072*^9, 3.642661889794724*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"\[LeftFloor]", 
     SuperscriptBox["2", 
      RowBox[{"30.403243784", "-", 
       SuperscriptBox["x", "2"]}]], "\[RightFloor]"}], "\[Times]", 
    SuperscriptBox["10", 
     RowBox[{"-", "9"}]]}]}], ";"}]], "Input",
 CellChangeTimes->{3.642661909553741*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"#", "+", 
       RowBox[{"f", "@", "#"}]}], ")"}], "&"}], "@", 
    RowBox[{"FixedPoint", "[", 
     RowBox[{
      RowBox[{"f", "@*", "f"}], ",", 
      RowBox[{"-", "1"}]}], "]"}]}], ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.642661922009609*^9, 3.642661932112917*^9}}],

Cell[BoxData["1.710637717`10."], "Output",
 CellChangeTimes->{{3.642661926351877*^9, 3.64266193273163*^9}}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 201 - 225", "Subsection",
 CellChangeTimes->{{3.640509015355191*^9, 3.640509022245683*^9}, {
  3.640519338671053*^9, 3.640519341443173*^9}, {3.6405218351164*^9, 
  3.640521837410107*^9}, {3.640692001248666*^9, 3.64069200435303*^9}, {
  3.640938376129309*^9, 3.640938377765213*^9}, {3.641036451653161*^9, 
  3.641036453169998*^9}, {3.641690359275677*^9, 3.641690362272438*^9}, {
  3.642232614147354*^9, 3.642232617962533*^9}}],

Cell[CellGroupData[{

Cell["Problem 202 - Laserbeam", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.641644703210892*^9, 
   3.64164470675659*^9}, {3.641809766980974*^9, 3.641809770837598*^9}, {
   3.642232589005501*^9, 3.642232595331832*^9}, {3.654129689955401*^9, 
   3.654129694002473*^9}}],

Cell[TextData[{
 "Three mirrors are arranged in the shape of an equilateral triangle, with \
their reflective surfaces pointing inwards. There is an infinitesimal gap at \
each vertex of the triangle through which a laser beam may pass.\n\nLabel the \
vertices A, B and C. There are 2 ways in which a laser beam may enter vertex \
C, bounce off 11 surfaces, then exit through the same vertex: one way is \
shown below; the other is the reverse of that.\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztXT2IHEmWntOJ5hCijUaMIYRghRhjEGMMoo1BLNzSyBjEGLpmjEEIdumT
cRR7MFfouEassQgZTbPGIcYYxBpiLDGscYg1hmYM0awxCBlLs8bRyFjEGUcj
Y2nOEInq8kVkREZGRkRGZkZkRlZ9H4SqVF0/+RcvX3zvfe/97Ff/evvemQ8+
+ODf/iH/5/Yv//0fv/76l//xT2fz//ziP+b//Ku/z5/87O8++OBSPuhFAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAKeD6p9cXZ8+cZWN/
b38x9vYAABAHYp7bxtUrVxc793YWx6+Po9gB+l7198j2xPgdAADGhzrPt25u
1Yb4+/n184uXr14GtwXz+3P2/WTT6DfoedPvnL7LFjTE89Db1AVim6zjfbm9
le1/3237a9/b8XuGhr7dzvdoY8jtbAufcw+U9ubghwPjMTl5e7IQ6x3ydUL/
Pn2n+H2yOfScbJDt/cf/c7p4/qfjxfOf3iy+++NRUo9su4ptMz1W3hfi97Tv
ncpj03Ybj18C2+11/hvO/ao9vvnf08pcbrI3bI4ra56QPg79pmrHvn/2faNd
O3p9Up3XDed5jMem69Hn+vT+nUT2udWjans1m2I9filsd4Bzv1KP+Tj5W9ba
3rR5XxuY/JkLGxfYa2R7TJ+R/k3C9wzXvdk5pzr+xtj728m/adh22/FL/XGK
flnMY9HXvwnJG5v4GmGD6NFmb5K/Z+jHvrCPpv+H+I0k9rnL/d9yT6zZoUS2
Pdg+rspjC/9G8HMqf0P8cShb8+TbJ8Z4lFhTkS2y2RvjeU3w0WgbAm/7lPwb
0zVp9X2UMfZ2993PsbcnRf+mKT5Fz8n2hLI3219uW/NthN9DNkn/W42/Sfyx
co/T51Wg+2gK+2l91J772ORJ+gdN+9n3O6f46PBvmgbZm1DcTdP6TKypyCbV
PjsB/sZ0n6u8FmDbpc2dwHFoPC7KvpjG2NubzDma2PGgbe3C35Cf4fI52oJ8
Gl87p/tUFf9mAsNnPq3iwHFZjdE1PiX4Foof9bU3gg+yreFoiDiVvt5S/Zsp
DtO9L4XvSnEsw/4twz70GW/etvdvCCf550LExCkW5RPrEmsqnU9+/M3B4tLF
WT7mxWOqg2/fbGNrcf3DHW2bu247/9x83fSdKQ99v6vbvLVxZ/HduWvs0f3+
vsdvuP2l87O/vhPsnIvjdGfj1oSOw2xx+OK4k71p+14bhH6hSScl4lS6XXr4
6HlxnFMfs8XD9RuL03z7j9YuaNdPv++l73x+7moC++i/zdXHncVOPm8en7u+
eHPmPNsf9ZFeJztd/Yz+POUxy/djZ5GduRpgm/nntz68I48R3W+mcizIv+ti
Q9T53ydO1YYHEmsqkQ9IOpSpjCz3z07XLyxOc3+OnmdXrrLnvb87t710zWU/
vzH6PrYadBwePVxk+Vo5o+3Pj0e2+2Bxml9X4j3ke9P/5fGi9325zT7H9nvs
fWhz/s8dsO2nuRLi2NG1xK4pOo75vDjN58/Y++g7XPZG1cWJ5+RfCM7Flofn
g7Y2S6ypSN8w9jFrda0ptsb1WqeRX2fZx9fYtTz2fjYO3XbktubNo33mr3p9
Pj9W9P5s8zr/PNmo/N6j2qgkx+vT3Kbm5/zipf7bKmzNr2e110739sffV8+h
2xsXd6u+57SHb+OKc5ugcj1kD8c+Zj7DZVfYNdPT5rD5S3OOvufHxI5JbkeY
D5OfX2kf6Hjkc475Lj2+m32ebK04vjQHb2+z17zt11DXwNeHi2ztDT9Xuw+6
f5fq17T5W4JDtzdNNXBoTXOicc1DgWJStBbc/lXa9tzHnvT1c5ivQH5DPteY
3Rl7v2lb8u3IPip8mPyeRD5JkLWja9C6YvcB+z3xu+x4JGCDs83c3nx8yO0j
bV/X/cvXTc5zPBGbc+v2g8X1zYcLymUZw3744vT/sgXZmmufiFjMzuLor29G
P37Ga6yFHelqc44L7obWomyukR8x9L7SNnzzmP+28DNof/K51deH6ToYR0Jz
W92mwvfpyp+wz9FaqIP9ys4dLbK7h5Xz1eo7xHrJh6MxrbcSGjRfBbd94xdz
Np/HtismsDybIm/hyR9eSr6btlnUMEplML85v4+1ua462RyaU5vF/ZLmAX1+
iH3Mf4v5MORDCF9i90F8H6bP9u4afB/X9pJtKNZrkm/KH5mv1ua3C+7m9AW/
L7LvasMFkL/Ylg9O2M+h+Spikk+eHcp8pBTsDtkRykc8eFXXY1z/bCZ9HHpt
7OMorlEWP8ltQKd7O11TLWyO5G7Ea8QZR5jzzG6SD0O/t1H4C19yfyFV/9I2
joUdKTglOS9/t89Gxb4IO9qDbxLcjfw/XR/0nT6fz48528YusacEbc7Bi9JP
oDUVm89K7iPNcz3/eEhb8/K/Tyo5mfqjzKX6bBzfUfjY7N75yTV+rz93vl/M
k+YCzWmPe6DgbuT/i3hPkP0jvsDkw0yEp/cexfk7WTvP9/PipUX21Z1gvI/k
bor/s/hafp58roPOtkY9h3TeErE5l64U+Y6Xd8w6wsL+0Lwfsl4saboqOd+q
HVQed75+LO3lw//8LvrxkvZFnYcUc7l7Z5Fdzq/TtbNh5rvPtVZwAep9tw+H
I/dN+DBFrgvtz9R8mK77z+4ZZG++uFWLp3W9h2Qb+Zz/vLQ3zO9oyl3o49eY
9isBm6POVXpe0cv9pGjoldeG8nXItvlqp6XNvBL3eLK5rF6DdC3kc16ez8L+
BFvPCJtD157l77VYR1sOx5RzN4V8lkiDbDethbOi1kqIXEPG3Tw9qr7uyl0I
4dc07dcIx5Z4D5qnVz/aqdsYi4Z+SB+npvs2+Tj52P/muVxXxYyP0znT8zqk
rSHO9ul34flax7VnzeVosnmWnLtV8GF8BjunmwZ/QOQa0lqIjttHHrZ5L7fn
Z+q8D8tdMJ27gH6Ncb+K++LQNqfkiGcs1lPxZQxzmsYY/HFTzRDx+rWPHwwe
H5fXZXH+2Borhs9q8XOYb2O41tl8UPNMcxvJ5kmEnLtlHcwfcKxBarmGhe/D
zpFyT2LczcXD+udNHE4L3q7Xfm022JzA8QbiYlSeVbcxtlpIQ9sagoiBy21R
h7LdPD5exvQHux7za+ykmLPMX4ilYdH9HLJvhW5Vfy+ze5s83it9mM2Bcu6W
aJz87dQ/vmPJNczWH1e5G/X9KofTMi7Za78a/Bzmq4daT+froTKOPLPX4dL8
irFiVITDP/vxOKXPNmdxt+jnS7kOad5nobR4tqHmYdBzVUMmYrzkp5/jmmHB
MY21Xl+K0SGmLH0f4nrOXGDnQ/g+6rkQvozk5we8F7j8nFqORY/x5NlBhesw
rZ/0tQrN97FsDYFsnbF2j2Hdp3JSsa4/uR5Rzx/5xx3y1Nm59YmNqr+/fp7z
u1/cknGySq6IiH/Alwl3ztucIzEEd/NDmWuYqb4PnUOKhw1sa8RQbU5lXa3f
y3oMGcvJbY5vndUU+qaaaqKbtjlqfNyRJ94qh0t8puV9Tebokw9D163gDAz6
xKB5OBidBuNuLlfXUoxbVHIN2Tmk2PuIfii7DpX8VGaH6H7VU/M63y3n4vy3
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
     "], {{0, 289}, {284, 0}}, {
     0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{284, 289},
   PlotRange->{{0, 284}, {0, 289}}]], "Output",
  CellChangeTimes->{3.654129721336457*^9}],
 "\n\nThere are 80840 ways in which a laser beam may enter vertex C, bounce \
off 1000001 surfaces, then exit through the same vertex.\n\nIn how many ways \
can a laser beam enter at vertex C, bounce off 12017639147 surfaces, then \
exit through the same vertex?"
}], "Text",
 CellChangeTimes->{{3.654129702017057*^9, 3.654129732251369*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{"12017639147", ",", "4"}], "]"}]], "Input"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.654129757350635*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"12017639147", "+", "3"}], ")"}], "/", "2"}]], "Input"],

Cell[BoxData["6008819575"], "Output",
 CellChangeTimes->{3.654129793626646*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2", 
    RowBox[{
     RowBox[{"Floor", "[", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"6008819575", "-", 
          RowBox[{"3", "#1"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"6", "#1"}], ")"}]}]}], "]"}], ".", "#2"}]}], "&"}], "@@", 
  RowBox[{"Transpose", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Times", "@@", "#"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", 
        RowBox[{"Length", "@", "#"}]}]}], "}"}], "&"}], "/@", 
    RowBox[{"Subsets", "[", 
     RowBox[{"First", "/@", 
      RowBox[{"FactorInteger", "@", "6008819575"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.654129778536171*^9, 3.654129785089594*^9}, 
   3.654129818603853*^9}],

Cell[BoxData["1209002624"], "Output",
 CellChangeTimes->{{3.654129795592376*^9, 3.654129819173843*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 203 - Squarefree Binomial Coefficients", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.641644703210892*^9, 
   3.64164470675659*^9}, {3.641809766980974*^9, 3.641809770837598*^9}, {
   3.642232589005501*^9, 3.642232595331832*^9}}],

Cell[TextData[{
 "The binomial coefficients ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["C", "k", "n"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " can be arranged in triangular form, Pascal\[CloseCurlyQuote]s triangle, \
like this:\n\t1\n\t1\t1\n\t1\t2\t1\n\t1\t3\t3\t1\n\t1\t4\t6\t4\t1\n\t1\t5\t10\
\t10\t5\t1\n\t1\t6\t15\t20\t15\t6\t1\n\t1\t7\t21\t35\t35\t21\t7\t1\n\t\
.........\n\nIt can be seen that the first eight rows of Pascal\
\[CloseCurlyQuote]s triangle contain twelve distinct numbers: 1, 2, 3, 4, 5, \
6, 7, 10, 15, 20, 21 and 35.\n\nA positive integer n is called squarefree if \
no square of a prime divides n. Of the twelve distinct numbers in the first \
eight rows of Pascal\[CloseCurlyQuote]s triangle, all except 4 and 20 are \
squarefree. The sum of the distinct squarefree numbers in the first eight \
rows is 105.\n\nFind the sum of the distinct squarefree numbers in the first \
51 rows of Pascal\[CloseCurlyQuote]s triangle."
}], "Text",
 CellChangeTimes->{{3.641644714654131*^9, 3.641644799396646*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Union", "@@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Binomial", "[", 
        RowBox[{"i", ",", "j"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "50"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "i"}], "}"}]}], "]"}]}], ",", 
    "SquareFreeQ"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.641644821435046*^9, 3.641644901085082*^9}}],

Cell[BoxData["34029210557338"], "Output",
 CellChangeTimes->{
  3.641644828406932*^9, {3.641644860921782*^9, 3.641644901890133*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 204 - Generalised Hamming Numbers", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.641644703210892*^9, 
   3.64164470675659*^9}, {3.641809766980974*^9, 3.641809770837598*^9}}],

Cell[TextData[{
 "A Hamming number is a positive number which has no prime factor larger than \
5.\nSo the first few Hamming numbers are 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 15.\n\
There are 1105 Hamming numbers not exceeding ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "8"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nWe will call a positive number a generalised Hamming number of type n, \
if it has no prime factor larger than n.\nHence the Hamming numbers are the \
generalised Hamming numbers of type 5.\n\nHow many generalised Hamming \
numbers of type 100 are there which don\[CloseCurlyQuote]t exceed ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "9"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "?"
}], "Text",
 CellChangeTimes->{{3.641809813648727*^9, 3.641809833436644*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Fold", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Catenate", "[", 
      RowBox[{
       RowBox[{"#2", "^", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Log", "[", 
           RowBox[{"#2", ",", 
            RowBox[{"1.*^9", "/", "#"}]}], "]"}]}], "]"}]}], "#"}], "]"}], 
     "&"}], ",", 
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"Reverse", "@", 
     RowBox[{"PrimeRange", "@", "100"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.642562687122816*^9, 3.642562731218633*^9}}],

Cell[BoxData["2944730"], "Output",
 CellChangeTimes->{{3.642562698040077*^9, 3.642562742339842*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 205 - Dice Game", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}}],

Cell["\<\
Peter has nine four-sided (pyramidal) dice, each with faces numbered 1, 2, 3, \
4.
Colin has six six-sided (cubic) dice, each with faces numbered 1, 2, 3, 4, 5, \
6.

Peter and Colin roll their dice and compare totals: the highest total wins. \
The result is a draw if the totals are equal.

What is the probability that Pyramidal Pete beats Cubic Colin? Give your \
answer rounded to seven decimal places in the form 0.abcdefg\
\>", "Text",
 CellChangeTimes->{{3.641301436376451*^9, 3.641301440338616*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdf", "[", 
   RowBox[{"s_", ",", "n_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "/", 
     RowBox[{"Total", "@", "#"}]}], "&"}], "@", 
   RowBox[{"Nest", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"RotateRight", "[", 
         RowBox[{"#", ",", "i"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "s"}], "}"}]}], "]"}], "&"}], ",", 
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Alternatives", "@@", 
         RowBox[{"Range", "@", "s"}]}], "\[Rule]", "1"}], ",", 
       RowBox[{"n", "*", "s"}]}], "]"}], ",", 
     RowBox[{"n", "-", "1"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.641302178932089*^9, 3.641302333204818*^9}, {
   3.641302401860712*^9, 3.641302448307458*^9}, {3.641302672872394*^9, 
   3.641302683573424*^9}, 3.641545497248884*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Rest", "@", 
     RowBox[{"pdf", "[", 
      RowBox[{"4", ",", "9"}], "]"}]}], ".", 
    RowBox[{"Most", "@", 
     RowBox[{"Accumulate", "@", 
      RowBox[{"pdf", "[", 
       RowBox[{"6", ",", "6"}], "]"}]}]}]}], ",", "7"}], "]"}]], "Input",
 CellChangeTimes->{{3.641302832928839*^9, 3.64130287342835*^9}, {
  3.641545499084172*^9, 3.641545500773355*^9}}],

Cell[BoxData["0.5731440767829800829`7."], "Output",
 CellChangeTimes->{{3.641302838298674*^9, 3.641302874321315*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 206 - Concealed Square", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}}],

Cell["\<\
Find the unique positive integer whose square has the form 1_2_3_4_5_6_7_8_9_0,
where each \[OpenCurlyDoubleQuote]_\[CloseCurlyDoubleQuote] is a single digit.\
\>", "Text",
 CellChangeTimes->{3.641036479806108*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Floor", "@", 
  RowBox[{"Sqrt", "[", "1929394959697989900", "]"}]}]], "Input",
 CellChangeTimes->{{3.64103648310763*^9, 3.641036543045459*^9}, {
   3.641036619242212*^9, 3.641036651946854*^9}, 3.641037525869487*^9, {
   3.641039135178214*^9, 3.641039135367482*^9}, {3.641039222102789*^9, 
   3.641039224485687*^9}}],

Cell[BoxData["1389026623"], "Output",
 CellChangeTimes->{{3.641036483459906*^9, 3.641036543450352*^9}, {
   3.641036625948904*^9, 3.641036652519881*^9}, 3.641037526308987*^9, 
   3.641039228449658*^9, 3.643867649217721*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "@", 
  RowBox[{"Fold", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"Outer", "[", 
        RowBox[{"Plus", ",", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "99"}], "]"}], 
          RowBox[{"10", "^", 
           RowBox[{"First", "@", "#2"}]}]}], ",", "#"}], "]"}], ",", 
       RowBox[{"n_", "/;", 
        RowBox[{
         RowBox[{"n", "\[LessEqual]", "1389026623"}], "&&", 
         RowBox[{
          RowBox[{"First", "@", 
           RowBox[{"IntegerDigits", "[", 
            RowBox[{
             RowBox[{"n", "^", "2"}], ",", "10", ",", 
             RowBox[{
              RowBox[{"First", "@", "#2"}], "+", "1"}]}], "]"}]}], "\[Equal]", 
          RowBox[{"Last", "@", "#2"}]}]}]}], ",", 
       RowBox[{"{", "2", "}"}]}], "]"}], "&"}], ",", 
    RowBox[{"{", "0", "}"}], ",", 
    RowBox[{"MapIndexed", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Tr", "[", 
         RowBox[{
          RowBox[{"2", "#2"}], "-", "2"}], "]"}], "\[Rule]", "#1"}], "&"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "9", ",", "8", ",", "7", ",", "6", ",", "5", ",", "4", ",", 
        "3", ",", "2", ",", "1"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.641036755495079*^9, 3.64103684899132*^9}, {
   3.641036881985814*^9, 3.641036896336013*^9}, {3.641036946678135*^9, 
   3.641036980486559*^9}, {3.641037028765264*^9, 3.64103704515842*^9}, {
   3.641037115551803*^9, 3.64103716149458*^9}, {3.641037196268988*^9, 
   3.641037196719124*^9}, {3.6410373182036*^9, 3.641037382110876*^9}, {
   3.641037456505628*^9, 3.641037534610868*^9}, {3.64103758176726*^9, 
   3.641037596790144*^9}, {3.64103773685611*^9, 3.641037808277448*^9}, 
   3.641037862647867*^9, {3.641037915485701*^9, 3.64103792544949*^9}, {
   3.641037989897669*^9, 3.64103811896117*^9}, {3.641038153359267*^9, 
   3.641038197627749*^9}, {3.64103852427309*^9, 3.641038542153261*^9}, {
   3.641038576865221*^9, 3.641038678007133*^9}, {3.641038733191496*^9, 
   3.641038755008367*^9}, {3.641038812068844*^9, 3.641038812474327*^9}, 
   3.641038957803338*^9, {3.64103901785659*^9, 3.641039067070361*^9}, {
   3.641039152813183*^9, 3.641039235066676*^9}}],

Cell[BoxData["1389019170"], "Output",
 CellChangeTimes->{
  3.641036849490648*^9, 3.641036898029325*^9, {3.641036952295464*^9, 
   3.641036981381041*^9}, {3.64103704029111*^9, 3.641037045611245*^9}, {
   3.641037118018924*^9, 3.641037161992457*^9}, 3.641037197372193*^9, {
   3.641037325525828*^9, 3.641037382655204*^9}, {3.641037461512813*^9, 
   3.641037535429976*^9}, 3.641037585066853*^9, {3.641037742011643*^9, 
   3.641037808932598*^9}, 3.641037863433754*^9, {3.641037917588144*^9, 
   3.641037925964752*^9}, {3.641037992979501*^9, 3.641038039092227*^9}, {
   3.641038092492794*^9, 3.641038119415495*^9}, 3.641038169421261*^9, 
   3.641038206149616*^9, {3.641038529952191*^9, 3.641038545122028*^9}, 
   3.641038582797766*^9, {3.64103861888191*^9, 3.641038662843784*^9}, {
   3.64103874211235*^9, 3.641038761294652*^9}, 3.641038818575585*^9, 
   3.641038958275466*^9, {3.64103915344439*^9, 3.64103920250312*^9}, 
   3.641039248543056*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 207 - Integer partition equations", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.642748913579522*^9, 3.642748918433413*^9}}],

Cell[TextData[{
 "For some positive integers k, there exists an integer partition of the form \
  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["4", "t"], " ", "=", " ", 
    RowBox[{
     SuperscriptBox["2", "t"], " ", "+", " ", "k"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ",\nwhere ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["4", "t"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "t"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and k are all positive integers and t is a real number.\n\nThe first two \
such partitions are ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["4", "1"], " ", "=", " ", 
    RowBox[{
     SuperscriptBox["2", "1"], " ", "+", " ", "2"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["4", 
     RowBox[{"1.5849625", "..."}]], " ", "=", " ", 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"1.5849625", "..."}]], " ", "+", " ", "6"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nPartitions where t is also an integer are called perfect.\nFor any m \
\[GreaterEqual] 1 let P(m) be the proportion of such partitions that are \
perfect with k \[LessEqual] m.\nThus P(6) = 1/2.\n\nIn the following table \
are listed some values of P(m)\n\n   P(5) = 1/1\n   P(10) = 1/2\n   P(15) = \
2/3\n   P(20) = 1/2\n   P(25) = 1/2\n   P(30) = 2/5\n   ...\n   P(180) = 1/4\n\
   P(185) = 3/13\n\nFind the smallest m for which P(m) < 1/12345"
}], "Text",
 CellChangeTimes->{{3.642748924711301*^9, 3.642748971766148*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"#", 
    RowBox[{"(", 
     RowBox[{"#", "+", "1"}], ")"}]}], "&"}], "@", 
  RowBox[{"IncreaseWhile", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Floor", "@", 
       RowBox[{"Log2", "[", 
        RowBox[{"1", "+", "#"}], "]"}]}], "/", "#"}], "\[GreaterEqual]", 
     RowBox[{"1", "/", "12345"}]}], "&"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.642748897713055*^9, 3.642748900975539*^9}, {
  3.642749035247185*^9, 3.642749044023577*^9}}],

Cell[BoxData["44043947822"], "Output",
 CellChangeTimes->{3.642748910903464*^9, 3.642749055291903*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 209 - Circular Logic", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.642748913579522*^9, 3.642748918433413*^9}, {3.652850894621331*^9, 
   3.652850898645403*^9}}],

Cell[TextData[{
 "A k-input ",
 StyleBox["binary truth table",
  FontSlant->"Italic"],
 " is a map from k input bits (binary digits, 0 [false] or 1 [true]) to 1 \
output bit. For example, the 2-input binary truth tables for the logical AND \
and XOR functions are:\n\n",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \t",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \t",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", " ", "AND", " ", "y"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n0\t0\t0\n0\t1\t0\n1\t0\t0\n1\t1\t1\n\n",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \t",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \t",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", " ", "XOR", " ", "y"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n0\t0\t0\n0\t1\t1\n1\t0\t1\n1\t1\t0\n\nHow many 6-input binary truth \
tables, \[Tau], satisfy the formula\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Tau]", 
     RowBox[{"(", 
      RowBox[{
      "a", ",", " ", "b", ",", " ", "c", ",", " ", "d", ",", " ", "e", ",", 
       " ", "f"}], ")"}], " ", "AND", " ", "\[Tau]", 
     RowBox[{"(", 
      RowBox[{
      "b", ",", " ", "c", ",", " ", "d", ",", " ", "e", ",", " ", "f", ",", 
       " ", 
       RowBox[{"a", " ", "XOR", " ", 
        RowBox[{"(", 
         RowBox[{"b", " ", "AND", " ", "c"}], ")"}]}]}], ")"}]}], " ", "=", 
    " ", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nfor all 6-bit inputs ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
    "a", ",", " ", "b", ",", " ", "c", ",", " ", "d", ",", " ", "e", ",", " ",
      "f"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "?"
}], "Text",
 CellChangeTimes->{{3.652850906431362*^9, 3.652850973304402*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"graph", "=", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[Tau]", "[", "##", "]"}], "\[UndirectedEdge]", 
      RowBox[{"\[Tau]", "[", 
       RowBox[{"##2", ",", 
        RowBox[{"Xor", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"And", "[", 
           RowBox[{"#2", ",", "#3"}], "]"}]}], "]"}]}], "]"}]}], "&"}], "@@@", 
    RowBox[{"Tuples", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], ",", "6"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.652057920586214*^9, 3.652057951539409*^9}, {
  3.652849227587924*^9, 3.65284922947828*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       $CellContext`\[Tau][True, True, True, True, True, True], 
       $CellContext`\[Tau][True, True, True, True, True, False], 
       $CellContext`\[Tau][True, True, True, True, False, False], 
       $CellContext`\[Tau][True, True, True, True, False, True], 
       $CellContext`\[Tau][True, True, True, False, True, False], 
       $CellContext`\[Tau][True, True, True, False, False, False], 
       $CellContext`\[Tau][True, True, True, False, True, True], 
       $CellContext`\[Tau][True, True, False, True, True, False], 
       $CellContext`\[Tau][True, True, False, True, False, False], 
       $CellContext`\[Tau][True, True, True, False, False, True], 
       $CellContext`\[Tau][True, True, False, False, True, False], 
       $CellContext`\[Tau][True, True, False, False, False, False], 
       $CellContext`\[Tau][True, True, False, True, True, True], 
       $CellContext`\[Tau][True, False, True, True, True, True], 
       $CellContext`\[Tau][True, False, True, True, False, True], 
       $CellContext`\[Tau][True, True, False, True, False, True], 
       $CellContext`\[Tau][True, False, True, False, True, True], 
       $CellContext`\[Tau][True, False, True, False, False, True], 
       $CellContext`\[Tau][True, True, False, False, True, True], 
       $CellContext`\[Tau][True, False, False, True, True, True], 
       $CellContext`\[Tau][True, False, False, True, False, True], 
       $CellContext`\[Tau][True, True, False, False, False, True], 
       $CellContext`\[Tau][True, False, False, False, True, True], 
       $CellContext`\[Tau][True, False, False, False, False, True], 
       $CellContext`\[Tau][False, True, True, True, True, True], 
       $CellContext`\[Tau][True, False, True, True, True, False], 
       $CellContext`\[Tau][False, True, True, True, False, True], 
       $CellContext`\[Tau][False, True, True, False, True, True], 
       $CellContext`\[Tau][True, False, True, True, False, False], 
       $CellContext`\[Tau][False, True, True, False, False, True], 
       $CellContext`\[Tau][False, True, False, True, True, True], 
       $CellContext`\[Tau][True, False, True, False, True, False], 
       $CellContext`\[Tau][False, True, False, True, False, True], 
       $CellContext`\[Tau][False, True, False, False, True, True], 
       $CellContext`\[Tau][True, False, True, False, False, False], 
       $CellContext`\[Tau][False, True, False, False, False, True], 
       $CellContext`\[Tau][False, False, True, True, True, True], 
       $CellContext`\[Tau][True, False, False, True, True, False], 
       $CellContext`\[Tau][False, False, True, True, False, True], 
       $CellContext`\[Tau][False, False, True, False, True, True], 
       $CellContext`\[Tau][True, False, False, True, False, False], 
       $CellContext`\[Tau][False, False, True, False, False, True], 
       $CellContext`\[Tau][False, False, False, True, True, True], 
       $CellContext`\[Tau][True, False, False, False, True, False], 
       $CellContext`\[Tau][False, False, False, True, False, True], 
       $CellContext`\[Tau][False, False, False, False, True, True], 
       $CellContext`\[Tau][True, False, False, False, False, False], 
       $CellContext`\[Tau][False, False, False, False, False, True], 
       $CellContext`\[Tau][False, True, True, True, True, False], 
       $CellContext`\[Tau][False, True, True, True, False, False], 
       $CellContext`\[Tau][False, True, True, False, True, False], 
       $CellContext`\[Tau][False, True, True, False, False, False], 
       $CellContext`\[Tau][False, True, False, True, True, False], 
       $CellContext`\[Tau][False, True, False, True, False, False], 
       $CellContext`\[Tau][False, True, False, False, True, False], 
       $CellContext`\[Tau][False, True, False, False, False, False], 
       $CellContext`\[Tau][False, False, True, True, True, False], 
       $CellContext`\[Tau][False, False, True, True, False, False], 
       $CellContext`\[Tau][False, False, True, False, True, False], 
       $CellContext`\[Tau][False, False, True, False, False, False], 
       $CellContext`\[Tau][False, False, False, True, True, False], 
       $CellContext`\[Tau][False, False, False, True, False, False], 
       $CellContext`\[Tau][False, False, False, False, True, False], 
       $CellContext`\[Tau][False, False, False, False, False, False]}, {
      Null, {{1, 2}, {2, 3}, {4, 5}, {3, 6}, {7, 8}, {5, 9}, {10, 11}, {6, 
       12}, {13, 14}, {8, 15}, {16, 17}, {9, 18}, {19, 20}, {11, 21}, {22, 
       23}, {12, 24}, {14, 25}, {26, 27}, {15, 28}, {29, 30}, {17, 31}, {32, 
       33}, {18, 34}, {35, 36}, {20, 37}, {38, 39}, {21, 40}, {41, 42}, {23, 
       43}, {44, 45}, {24, 46}, {47, 48}, {25, 1}, {49, 4}, {27, 7}, {50, 
       10}, {28, 13}, {51, 16}, {30, 19}, {52, 22}, {31, 26}, {53, 29}, {33, 
       32}, {54, 35}, {34, 38}, {55, 41}, {36, 44}, {56, 47}, {37, 49}, {57, 
       50}, {39, 51}, {58, 52}, {40, 53}, {59, 54}, {42, 55}, {60, 56}, {43, 
       57}, {61, 58}, {45, 59}, {62, 60}, {46, 61}, {63, 62}, {48, 63}, {64, 
       64}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxFkns4lHkUxzUtmkhyzSTMZMyg9x3veIqaak7bZa1mu6goqXWpLTa1rCYp
WoSSrNgisWVSlC7k0mSrObkkq2hbO113F+VSloZcsmh39nn2nfnjfd7n+/zO
75zv5/y+7MDdXtsYOjo6e9Xff/8L86+mlodMgtWy0z+GpuljIg/kqdlGIFdO
MrRJYGDlsoHMJrkJRB76O/Lm3THF4Z6Zro+MHGDLrTbLfScJXHYp9HXOLHtQ
TpHnNxIkCg94L4vbagH+Sva3a32HFKsPFOp/Be/EDVcHQiMSOWhn+1X5w6pu
cVX88TneaXa46eWODXf4HAhcWspQxKnvn00aXnSfhPwuE7O2hZZoYraDm7tY
AFGUW+EfljNw5vvgs5/PZQH/wT5j3xN9ip2l/kxPxpD4Z4fxbalJ5ng2eE7C
9QnjYg+7LX6Oo9PQP4BxMFHxl/hIl8SihJiJ30g2TrAqMYDwhZdjevWcscP1
4LOr7brQGHRnQ3KuI9qnuNmcc7ADVQFP+iqDRN+4Y93Nu2dD5QWPPTXNfNwn
Ge9YxnKG9wtrjZ6vd8KW02bzRyME4HQidvPIZFvcs6Kg88wlPvDjQ0ddwv9R
vCC73GxXOsHO6gifCQGfoKtOwMg41wZ0XGxuy8J7FMXlPqlyxkTIWuciLgyZ
goZLgw0SFSPiQYNFvSuWO6Bqpef3HunvxYY3nnxS/409qiIUK11YfWJZ/6ik
3cMKx6iik8EhJJxcl2F/zo+Lbi62E2pSCNhQmT2e6cjDT6/FlCi7daDfVcp4
o8vHtRtJp2sWAhBaSR0etlP/a0KjpdlOD4sk1sDpc+dV+JPYxLVOzuOagmqO
tLm4jcLre4NMpAJz8Hz6s3WeHoXJilObgzIcIX3i5qz7550xK/G4Q2DQdHgW
pVIWviVQWfGY9UBmBo1jOXyVK4GRenWtuwMEYNT8gbkkjo3zchyapIv48EXq
LaPWdUJs8zodxARHSH1U3JG3l8InU2/Nzql2hu+c7BuEHUxcw4r93FlgBbUf
LDuvMylUPDrlHc2dAdsOZcXWd1H4fE1CfaoJG/7PmYLOW/ZLXZL5lsLxzh+d
PYsGxVLvKBl7MoWcsrQCxzYefBeZfMXr9mwkMp/5ifRJmBtWWhl21BRNlvYa
S6ZPg7eH1zd9FM3GZPLBkG27A7SkHfQS9A8rsoSL4/v0BRBJfDncuXcWTg3/
1Y1hbQ6RI2dumFQJcfFguPtk4IFlvmDRTSmFeudtrWZYDYmjxmIr9tcKsS+W
ffvYRAK6Bp1FMRbGGLv9PtdClwv3AyQu6+P6FTE2cyN2WVsBy5ftMlIjxNGy
9NJWg4kgX15i6HNXiP9wAoN2TpsFOm420+KgV/Gc+mukSKUHsp7o9LutFCqj
c27kKxnwdk7ISRv1ez3q/TNsazBH896JUW2snBYSMu8dubbkHYV1IZPvPX5M
wq6hjSYxfRQa+URdUdaQwCzqHgh8T2FHeuf04goSBg7w3PsGKCzrIYO3F5Kw
/YxYxRuisKF6i6luNgnV0aJtesMUylnlp48fJeFY4VbTFLWuVPyQZh5NQsIv
PxTJ1bq3v67ao5jQaFVmgfxBHqGp/713HDZmEJp+AzVE99AhQjOvynaP6KqU
0Pg5tantQtIOQuO35TOv1KO+hIaH4x41r0pCaHhp/savA3O9X2r5h0Xp862f
a/n9knQ2uD3V8oeV15hdVGr5P6Zf9gv/TcsvKyvuzGjW8j89kjTPqFnL3+Lv
k9f6q5af1jQ/XU/z0/1ofnoezU/7oflpvzQ/zUPz07xv9ln7+anzcG3hxf2N
HRSKzh+0uxTEAbPQweqyDxSeazAe5a/jwIJYgxcWTCF236jwtFzAAcdVH73z
LYQY/nGJJGgmB0SzdHuW2wkx7clPe+L/ZoN47nC1O1eIl9/4vV6iZEPsinde
ZmpdV/+iO6WUDVW17okvbYVoWuAZyDvBhjoLz/gxcyGW7D8XHh/Nhib9XGPx
JCEqmYYpibvYsN/yzzV3hun8sjX5pc/fsKaMvlDvj75/wmnVgk3VlKZ/7gxZ
fW45pZkv21l673YRpfH3qmNsJOECpfHPHRs4HKDWNJ/j1M4v16rraX7Rq57B
wTLtfvglLWHxVdr9ra4dOtz+WLvf8oFPf2l4TeG/3z+Kqg==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], ArrowBox[{1, 2}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{1, 25}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{2, 3}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{3, 6}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{4, 5}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{4, 49}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{5, 9}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{6, 12}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{7, 8}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{7, 27}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{8, 15}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{9, 18}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{10, 11}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{10, 50}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{11, 21}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{12, 24}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{13, 14}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{13, 28}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{14, 25}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{15, 28}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{16, 17}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{16, 51}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{17, 31}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{18, 34}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{19, 20}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{19, 30}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{20, 37}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{21, 40}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{22, 23}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{22, 52}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{23, 43}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{24, 46}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{26, 27}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{26, 31}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{29, 30}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{29, 53}, 0.08671664947649677]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{
           32, {15.044305151136221`, -18.062102344109157`}, 33}], 
           0.08671664947649677]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{
           32, {15.044305151136221`, -17.733220845390004`}, 33}], 
           0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{34, 38}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{35, 36}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{35, 54}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{36, 44}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{37, 49}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{38, 39}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{39, 51}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{40, 53}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{41, 42}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{41, 55}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{42, 55}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{43, 57}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{44, 45}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{45, 59}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{46, 61}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{47, 48}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{47, 56}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{48, 63}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{50, 57}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{52, 58}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{54, 59}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{56, 60}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{58, 61}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{60, 62}, 0.08671664947649677]}, 
         {Arrowheads[0.], ArrowBox[{62, 63}, 0.08671664947649677]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{64, 100, 103, 105, 111, 113, 116, 64},
           SplineDegree->7], 0.08671664947649677]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.08671664947649677], DiskBox[2, 0.08671664947649677], 
         DiskBox[3, 0.08671664947649677], DiskBox[4, 0.08671664947649677], 
         DiskBox[5, 0.08671664947649677], DiskBox[6, 0.08671664947649677], 
         DiskBox[7, 0.08671664947649677], DiskBox[8, 0.08671664947649677], 
         DiskBox[9, 0.08671664947649677], DiskBox[10, 0.08671664947649677], 
         DiskBox[11, 0.08671664947649677], DiskBox[12, 0.08671664947649677], 
         DiskBox[13, 0.08671664947649677], DiskBox[14, 0.08671664947649677], 
         DiskBox[15, 0.08671664947649677], DiskBox[16, 0.08671664947649677], 
         DiskBox[17, 0.08671664947649677], DiskBox[18, 0.08671664947649677], 
         DiskBox[19, 0.08671664947649677], DiskBox[20, 0.08671664947649677], 
         DiskBox[21, 0.08671664947649677], DiskBox[22, 0.08671664947649677], 
         DiskBox[23, 0.08671664947649677], DiskBox[24, 0.08671664947649677], 
         DiskBox[25, 0.08671664947649677], DiskBox[26, 0.08671664947649677], 
         DiskBox[27, 0.08671664947649677], DiskBox[28, 0.08671664947649677], 
         DiskBox[29, 0.08671664947649677], DiskBox[30, 0.08671664947649677], 
         DiskBox[31, 0.08671664947649677], DiskBox[32, 0.08671664947649677], 
         DiskBox[33, 0.08671664947649677], DiskBox[34, 0.08671664947649677], 
         DiskBox[35, 0.08671664947649677], DiskBox[36, 0.08671664947649677], 
         DiskBox[37, 0.08671664947649677], DiskBox[38, 0.08671664947649677], 
         DiskBox[39, 0.08671664947649677], DiskBox[40, 0.08671664947649677], 
         DiskBox[41, 0.08671664947649677], DiskBox[42, 0.08671664947649677], 
         DiskBox[43, 0.08671664947649677], DiskBox[44, 0.08671664947649677], 
         DiskBox[45, 0.08671664947649677], DiskBox[46, 0.08671664947649677], 
         DiskBox[47, 0.08671664947649677], DiskBox[48, 0.08671664947649677], 
         DiskBox[49, 0.08671664947649677], DiskBox[50, 0.08671664947649677], 
         DiskBox[51, 0.08671664947649677], DiskBox[52, 0.08671664947649677], 
         DiskBox[53, 0.08671664947649677], DiskBox[54, 0.08671664947649677], 
         DiskBox[55, 0.08671664947649677], DiskBox[56, 0.08671664947649677], 
         DiskBox[57, 0.08671664947649677], DiskBox[58, 0.08671664947649677], 
         DiskBox[59, 0.08671664947649677], DiskBox[60, 0.08671664947649677], 
         DiskBox[61, 0.08671664947649677], DiskBox[62, 0.08671664947649677], 
         DiskBox[63, 0.08671664947649677], 
         DiskBox[64, 0.08671664947649677]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]]]], "Output",
 CellChangeTimes->{{3.652057931597071*^9, 3.652057952964767*^9}, 
   3.652849231324618*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Times", "@@", 
  RowBox[{"LucasL", "[", 
   RowBox[{"Length", "/@", 
    RowBox[{"ConnectedComponents", "@", "graph"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.652850803144495*^9, 3.652850857338361*^9}, {
  3.652851112795099*^9, 3.652851125383776*^9}}],

Cell[BoxData["15964587728784"], "Output",
 CellChangeTimes->{{3.652850830730862*^9, 3.652850857843418*^9}, {
  3.652851114735399*^9, 3.65285112594322*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 211 - Divisor Square Sum", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.642748913579522*^9, 3.642748918433413*^9}, {3.643597950892543*^9, 
   3.643597956040273*^9}}],

Cell[TextData[{
 "For a positive integer n, let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sigma]", "2"], "(", "n", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " be the sum of the squares of its divisors. For example,\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Sigma]", "2"], "(", "10", ")"}], " ", "=", " ", 
    RowBox[{
     RowBox[{
     "1", " ", "+", " ", "4", " ", "+", " ", "25", " ", "+", " ", "100"}], 
     " ", "=", " ", "130"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nFind the sum of all n, 0 < n < 64,000,000 such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sigma]", "2"], "(", "n", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is a perfect square."
}], "Text",
 CellChangeTimes->{{3.643597963617604*^9, 3.643598007896713*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Slow", "!"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ParallelSum", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"FractionalPart", "@", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"N", "@", " ", 
          RowBox[{"DivisorSigma", "[", 
           RowBox[{"2", ",", "n"}], "]"}]}], "]"}]}], "\[Equal]", "0"}], ",", 
      "n", ",", "0"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", 
      RowBox[{"64", "*", 
       RowBox[{"10", "^", "6"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.643598885989681*^9, 3.643598900998375*^9}}],

Cell[BoxData["1922364685"], "Output",
 CellChangeTimes->{3.643601168333508*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 214 - Totient Chains", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.642640103435746*^9, 3.642640114311508*^9}}],

Cell["\<\
Let \[CurlyPhi] be Euler\[CloseCurlyQuote]s totient function, i.e. for a \
natural number n, \[CurlyPhi](n) is the number of k, 1 \[LessEqual] k \
\[LessEqual] n, for which gcd(k,n) = 1.

By iterating \[CurlyPhi], each positive integer generates a decreasing chain \
of numbers ending in 1.
E.g. if we start with 5 the sequence 5,4,2,1 is generated.
Here is a listing of all chains with length 4:

5,4,2,1
7,6,2,1
8,4,2,1
9,6,2,1
10,4,2,1
12,4,2,1
14,6,2,1
18,6,2,1
Only two of these chains start with a prime, their sum is 12.

What is the sum of all primes less than 40000000 which generate a chain of \
length 25?\
\>", "Text",
 CellChangeTimes->{{3.642640127709007*^9, 3.642640138493092*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"chainLength", "[", "1", "]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"chainLength", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"chainLength", "[", "n", "]"}], "=", 
    RowBox[{
     RowBox[{"chainLength", "[", 
      RowBox[{"EulerPhi", "@", "n"}], "]"}], "+", "1"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Total", "@", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Prime", "@", 
     RowBox[{"Range", "@", 
      RowBox[{"PrimePi", "@", "4*^7"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"chainLength", "[", 
       RowBox[{"#", "-", "1"}], "]"}], "\[Equal]", 
      RowBox[{"25", "-", "1"}]}], "&"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.642640156055758*^9, 3.64264017262358*^9}}],

Cell[BoxData["1677366278943"], "Output",
 CellChangeTimes->{3.642640218404831*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 215 - Crack-free Walls", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.642640103435746*^9, 3.642640114311508*^9}, {3.64377806876727*^9, 
   3.643778072353164*^9}}],

Cell[TextData[{
 "Consider the problem of building a wall out of 2\[Times]1 and 3\[Times]1 \
bricks (horizontal\[Times]vertical dimensions) such that, for extra strength, \
the gaps between horizontally-adjacent bricks never line up in consecutive \
layers, i.e. never form a \[OpenCurlyDoubleQuote]running crack\
\[CloseCurlyDoubleQuote].\n\nFor example, the following 9\[Times]3 wall is \
not acceptable due to the running crack shown in red:\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt1E2KVEEQhdHnz8BtuBRdgroBBZ0KKog7cNdlC9I4MCMaqrLK23EOpKiD
4nEDvpcfPr/59PQ4jq8v7v548/77qy9f3v94+/zuH69/fPv44dndX37evXdP
juP3fwIAAAAAAAAAAAAAAAAAAAAAADDGyfM8z7t/57j1t3ued4V3+vNu/R0B
7xyX+A2ux73WbFP4q6f8m57O415rtinoaUtP53GvNdsU9LSlp/O415ptCnra
0tN53GvNNgU9benpPO61ZpuCnrb0dB73WrNNQU9bejqPe63ZpqCnLT2dx73W
bFPQ05aezuNea7Yp6GlLT+dxrzXbFPS0pafzuNeabQp62tLTedxrzTYFPW3p
6TzutWabgp629HQe91qzTUFPW3o6j3ut2aagpy09nce91mxT0NOWns7jXmu2
KehpS0/nca812xT0tKWn87jXmm0KetrS03nca802BT1t6ek87rVmm4KetvR0
Hvdas01BT1t6Oo97rdmmoKctPZ3HvdZsU9DTlp7O415rtinoaUtP53GvNdsU
9LSlp/O415ptCnra0tN53GvNNgU9benpPO61ZpuCnrb0dB73WrNNQU9bejqP
e63ZpqCnLT2dx73WbFPQ05aezuNea7Yp6Gnrkj31PO8Rv9Nx31Ovfue49bd7
nneFdzr09IHvHJf4jcfMPjX7hPirp/ybnu5nn5p9QuhpS0/3s0/NPiH0tKWn
+9mnZp8QetrS0/3sU7NPCD1t6el+9qnZJ4SetvR0P/vU7BNCT1t6up99avYJ
oactPd3PPjX7hNDTlp7uZ5+afULoaUtP97NPzT4h9LSlp/vZp2afEHra0tP9
7FOzTwg9benpfvap2SeEnrb0dD/71OwTQk9berqffWr2CaGnLT3dzz41+4TQ
05ae7mefmn1C6GlLT/ezT80+IfS0paf72admnxB62tLT/exTs08IPW3p6X72
qdknhJ629HQ/+9TsE0JPW3q6n31q9gmhpy093c8+NfuE0NOWnu5nn5p9Quhp
S0/3s0/NPiH0tKWn+9mnZp8QetrS0/3sU7NPCD1t6el+9qnZJ4SetvR0P/vU
7BNCT1t6up99avYJoactPd3PPjX7hNDTlp7uZ5+afULoaeuSPfU87xG/03Hf
U69+57j1t3ued4V3OvT0ge8cl/gNrse9crhVFj2dx71yuFUWPZ3HvXK4VRY9
nce9crhVFj2dx71yuFUWPZ3HvXK4VRY9nce9crhVFj2dx71yuFUWPZ3HvXK4
VRY9nce9crhVFj2dx71yuFUWPZ3HvXK4VRY9nce9crhVFj2dx71yuFUWPZ3H
vXK4VRY9nce9crhVFj2dx71yuFUWPZ3HvXK4VRY9nce9crhVFj2dx71yuFUW
PZ3HvXK4VRY9nce9crhVFj2dx71yuFUWPZ3HvXK4VRY9nce9crhVFj2dx71y
uFUWPZ3HvXK4VRY9nce9crhVFj2dx71yuFUWPZ3HvXK4VRY9nce9crhVFj2d
x71yuFUWPZ3HvXK4VRY9nce9crhVlkv21PM8zzvPrb/d8zzvf3oAAAAAAAAA
AAAAAAAAAADAFfwCezxs4g==
     "], {{0, 136}, {340, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{340, 136},
   PlotRange->{{0, 340}, {0, 136}}]], "Input"],
 "\nThere are eight ways of forming a crack-free 9\[Times]3 wall, written \
W(9,3) = 8."
}], "Text",
 CellChangeTimes->{{3.643778078694714*^9, 3.643778101909385*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rows", "=", 
   RowBox[{
    RowBox[{"Most", "@*", "Accumulate"}], "/@", 
    RowBox[{"Catenate", "[", 
     RowBox[{"Permutations", "/@", 
      RowBox[{"IntegerPartitions", "[", 
       RowBox[{"32", ",", "All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"length", "=", 
   RowBox[{"Length", "@", "rows"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cracks", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"First", "/@", 
      RowBox[{"Position", "[", 
       RowBox[{"rows", ",", "n"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "32"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Total", "[", 
  RowBox[{
   RowBox[{"MatrixPower", "[", 
    RowBox[{
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{"Flatten", "@", 
        RowBox[{"MapIndexed", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Outer", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"{", "##", "}"}], "\[Rule]", "1"}], "&"}], ",", "#2", 
             ",", 
             RowBox[{"Complement", "[", 
              RowBox[{
               RowBox[{"Range", "@", "length"}], ",", 
               RowBox[{"Sequence", "@@", 
                RowBox[{"cracks", "[", 
                 RowBox[{"[", "#1", "]"}], "]"}]}]}], "]"}]}], "]"}], "&"}], 
          ",", "rows"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"length", ",", "length"}], "}"}]}], "]"}], ",", 
     RowBox[{"10", "-", "1"}]}], "]"}], ".", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"1", ",", "length"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.64377617885378*^9, 3.643776181901629*^9}, {
   3.643776240812213*^9, 3.643776250811715*^9}, 3.643776739094287*^9, {
   3.643776806554113*^9, 3.643776807072521*^9}, {3.64377708283145*^9, 
   3.643777082933641*^9}, 3.643777197928955*^9, {3.643777758310051*^9, 
   3.643777758400981*^9}, 3.643777863673815*^9, {3.643778019859936*^9, 
   3.643778019991283*^9}, {3.643778109023664*^9, 3.643778118122928*^9}}],

Cell[BoxData["806844323190414"], "Output",
 CellChangeTimes->{3.643778134778126*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Problem 216 - Investigating the primality of numbers of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", 
     SuperscriptBox["n", "2"]}], "-", "1"}], TraditionalForm]]]
}], "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.642640103435746*^9, 3.642640114311508*^9}, {3.643176008282713*^9, 
   3.643176027786818*^9}}],

Cell[TextData[{
 "Consider numbers t(n) of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"t", 
     RowBox[{"(", "n", ")"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"2", 
      SuperscriptBox["n", "2"]}], "-", "1"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " with n > 1.\nThe first such numbers are 7, 17, 31, 49, 71, 97, 127 and \
161.\nIt turns out that only 49 = 7*7 and 161 = 7*23 are not prime.\nFor n \
\[LessEqual] 10000 there are 2202 numbers t(n) that are prime.\n\nHow many \
numbers t(n) are prime for n \[LessEqual] 50,000,000 ?"
}], "Text",
 CellChangeTimes->{{3.643176040602584*^9, 3.643176050852785*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Slow", "!"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ParallelSum", "[", 
   RowBox[{
    RowBox[{"Boole", "@", 
     RowBox[{"PrimeQ", "[", 
      RowBox[{
       RowBox[{"2", 
        RowBox[{"n", "^", "2"}]}], "-", "1"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "50000000"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.643194991420944*^9, 3.643195007732345*^9}, {
  3.643195444185567*^9, 3.643195448677423*^9}}],

Cell[BoxData["5437849"], "Output",
 CellChangeTimes->{3.64319651007175*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 218 - Perfect right-angled triangles", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.642640103435746*^9, 3.642640114311508*^9}, {3.643176008282713*^9, 
   3.643176027786818*^9}, {3.64446301746797*^9, 3.644463021824223*^9}}],

Cell[TextData[{
 "Consider the right angled triangle with sides a=7, b=24 and c=25. The area \
of this triangle is 84, which is divisible by the perfect numbers 6 and 28.\n\
Moreover it is a primitive right angled triangle as gcd(a,b)=1 and \
gcd(b,c)=1.\nAlso c is a perfect square.\n\nWe will call a right angled \
triangle perfect if\n-it is a primitive right angled triangle\n-its \
hypotenuse is a perfect square\n\nWe will call a right angled triangle \
super-perfect if\n-it is a perfect right angled triangle and\n-its area is a \
multiple of the perfect numbers 6 and 28.\n\nHow many perfect right-angled \
triangles with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "\[LessEqual]", 
    SuperscriptBox["10", "16"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " exist that are not super-perfect?"
}], "Text",
 CellChangeTimes->{{3.644463029994368*^9, 3.644463042824407*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"m0", "^", "2"}], "-", 
      RowBox[{"n0", "^", "2"}]}], ",", 
     RowBox[{"2", "m0", "*", "n0"}], ",", " ", 
     RowBox[{
      RowBox[{"m0", "^", "2"}], "+", 
      RowBox[{"n0", "^", "2"}]}]}], "}"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m0", "\[Rule]", 
      RowBox[{
       RowBox[{"m", "^", "2"}], "-", 
       RowBox[{"n", "^", "2"}]}]}], ",", 
     RowBox[{"n0", "\[Rule]", 
      RowBox[{"2", "m", "*", "n"}]}]}], "}"}]}], "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.644460677046774*^9, 3.644460702518054*^9}, {
  3.644461236100832*^9, 3.644461270691572*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["m", "4"], "-", 
    RowBox[{"6", " ", 
     SuperscriptBox["m", "2"], " ", 
     SuperscriptBox["n", "2"]}], "+", 
    SuperscriptBox["n", "4"]}], ",", 
   RowBox[{
    RowBox[{"4", " ", 
     SuperscriptBox["m", "3"], " ", "n"}], "-", 
    RowBox[{"4", " ", "m", " ", 
     SuperscriptBox["n", "3"]}]}], ",", 
   RowBox[{
    SuperscriptBox["m", "4"], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["m", "2"], " ", 
     SuperscriptBox["n", "2"]}], "+", 
    SuperscriptBox["n", "4"]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.644460704714913*^9, {3.644461266047594*^9, 3.644461271152351*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"Mod", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"m", "^", "4"}], "-", 
        RowBox[{"6", 
         RowBox[{"m", "^", "2"}], "*", 
         RowBox[{"n", "^", "2"}]}], "+", 
        RowBox[{"n", "^", "4"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", 
         RowBox[{"m", "^", "3"}], "*", "n"}], "-", 
        RowBox[{"4", "m", "*", 
         RowBox[{"n", "^", "3"}]}]}], ")"}]}], ",", 
     RowBox[{"LCM", "[", 
      RowBox[{"6", ",", "28"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", 
     RowBox[{"LCM", "[", 
      RowBox[{"6", ",", "28"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"LCM", "[", 
      RowBox[{"6", ",", "28"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.644462922742403*^9, 3.644462993773678*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.644462952611238*^9, 3.644462994775769*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["0"], "Input",
 CellChangeTimes->{3.644463097162841*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.644463097806621*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 225 - Tribonacci non-divisors", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.642640103435746*^9, 3.642640114311508*^9}, {3.643015598128261*^9, 
   3.643015604220773*^9}}],

Cell[TextData[{
 "The sequence 1, 1, 1, 3, 5, 9, 17, 31, 57, 105, 193, 355, 653, 1201 ...\nis \
defined by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", "1"], " ", "=", " ", 
    RowBox[{
     SubscriptBox["T", "2"], " ", "=", " ", 
     RowBox[{
      SubscriptBox["T", "3"], " ", "=", " ", "1"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", "n"], " ", "=", " ", 
    RowBox[{
     SubscriptBox["T", 
      RowBox[{"n", "-", "1"}]], " ", "+", " ", 
     SubscriptBox["T", 
      RowBox[{"n", "-", "2"}]], " ", "+", " ", 
     SubscriptBox["T", 
      RowBox[{"n", "-", "3"}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nIt can be shown that 27 does not divide any terms of this sequence.\n\
In fact, 27 is the first odd number with this property.\n\nFind the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["124", "th"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " odd number that does not divide any terms of the above sequence."
}], "Text",
 CellChangeTimes->{{3.643015610039675*^9, 3.643015651256789*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Nest", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"IncreaseWhile", "[", 
     RowBox[{
      RowBox[{"n", "\[Function]", 
       RowBox[{
        RowBox[{"Last", "@", 
         RowBox[{"NestWhile", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Rest", "@", 
             RowBox[{"Append", "[", 
              RowBox[{"#", ",", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{"Total", "@", "#"}], ",", "n"}], "]"}]}], "]"}]}], 
            "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", "3"}], "}"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Last", "@", "#"}], ">", "0"}], "&&", 
             RowBox[{"#", "\[NotEqual]", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]}], "&"}]}], "]"}]}],
         "\[Equal]", "0"}]}], ",", 
      RowBox[{"#", "+", "2"}], ",", "2"}], "]"}], "&"}], ",", "3", ",", 
   "124"}], "]"}]], "Input",
 CellChangeTimes->{{3.643015496103708*^9, 3.643015538788935*^9}, {
  3.643015575091634*^9, 3.643015577070029*^9}}],

Cell[BoxData["2009"], "Output",
 CellChangeTimes->{{3.643015497949338*^9, 3.643015522410684*^9}, 
   3.643015565634116*^9, 3.643015605243347*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 226 - 250", "Subsection",
 CellChangeTimes->{{3.640509015355191*^9, 3.640509022245683*^9}, {
  3.640519338671053*^9, 3.640519341443173*^9}, {3.6405218351164*^9, 
  3.640521837410107*^9}, {3.640692001248666*^9, 3.64069200435303*^9}, {
  3.640938376129309*^9, 3.640938377765213*^9}, {3.641036451653161*^9, 
  3.641036453169998*^9}, {3.641690359275677*^9, 3.641690362272438*^9}}],

Cell[CellGroupData[{

Cell["Problem 230 - Fibonacci Words", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641690378215371*^9, 3.641690382796176*^9}, {
   3.642561413126302*^9, 3.642561417934799*^9}, {3.6444670662003508`*^9, 
   3.644467071352609*^9}}],

Cell[TextData[{
 "For any two strings of digits, A and B, we define ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", 
    RowBox[{"A", ",", "B"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " to be the sequence (A,B,AB,BAB,ABBAB,...) in which each term is the \
concatenation of the previous two.\n\nFurther, we define ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["D", 
     RowBox[{"A", ",", "B"}]], "(", "n", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " to be the nth digit in the first term of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", 
    RowBox[{"A", ",", "B"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " that contains at least n digits.\n\nExample:\n\nLet A=1415926535, \
B=8979323846. We wish to find ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["D", 
     RowBox[{"A", ",", "B"}]], "(", "35", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", say.\n\nThe first few terms of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", 
    RowBox[{"A", ",", "B"}]], TraditionalForm]]],
 " are:\n1415926535\n8979323846\n14159265358979323846\n\
897932384614159265358979323846\n\
14159265358979323846897932384614159265358979323846\n\nThen ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["D", 
     RowBox[{"A", ",", "B"}]], "(", "35", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["35", "th"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " digit in the fifth term, which is 9.\n\nNow we use for A the first 100 \
digits of \[Pi] behind the decimal point:\n\n\
14159265358979323846264338327950288419716939937510\n\
58209749445923078164062862089986280348253421170679\n\nand for B the next \
hundred digits:\n\n82148086513282306647093844609550582231725359408128\n\
48111745028410270193852110555964462294895493038196 .\n\nFind ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sum]", 
     RowBox[{
      RowBox[{"n", " ", "=", " ", "0"}], ",", "1", ",", "...", ",", "17"}]], 
    "   ", 
    RowBox[{
     SuperscriptBox["10", "n"], "\[Times]", " ", 
     RowBox[{
      SubscriptBox["D", 
       RowBox[{"A", ",", "B"}]], "(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"127", "+", 
         RowBox[{"19", "n"}]}], ")"}], "\[Times]", 
       SuperscriptBox["7", "n"]}], ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ."
}], "Text",
 CellChangeTimes->{{3.644467078105188*^9, 3.644467167670568*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"d", "[", 
    RowBox[{"1", ",", "n_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
    "IntegerDigits", "[", 
     "141592653589793238462643383279502884197169399375105820974944592307816406\
2862089986280348253421170679", "]"}], "[", 
    RowBox[{"[", "n", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "[", 
    RowBox[{"2", ",", "n_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
    "IntegerDigits", "[", 
     "821480865132823066470938446095505822317253594081284811174502841027019385\
2110555964462294895493038196", "]"}], "[", 
    RowBox[{"[", "n", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"d", "[", 
     RowBox[{"m_", ",", "n_"}], "]"}], "/;", 
    RowBox[{"n", "\[LessEqual]", 
     RowBox[{"100", 
      RowBox[{"Fibonacci", "[", 
       RowBox[{"m", "-", "2"}], "]"}]}]}]}], ":=", 
   RowBox[{"d", "[", 
    RowBox[{
     RowBox[{"m", "-", "2"}], ",", "n"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "[", 
    RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"d", "[", 
    RowBox[{
     RowBox[{"m", "-", "1"}], ",", 
     RowBox[{"n", "-", 
      RowBox[{"100", 
       RowBox[{"Fibonacci", "[", 
        RowBox[{"m", "-", "2"}], "]"}]}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.644466612815284*^9, 3.64446663485252*^9}, {
  3.64446669729558*^9, 3.644466741847237*^9}, {3.644466891501305*^9, 
  3.644466995831588*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"10", "^", "n"}], "*", 
    RowBox[{"d", "[", 
     RowBox[{
      RowBox[{"Ceiling", "[", 
       RowBox[{
        RowBox[{"InverseFunction", "[", "Fibonacci", "]"}], "@", 
        RowBox[{"Ceiling", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"127", "+", 
            RowBox[{"19", "n"}]}], ")"}], "*", 
          RowBox[{
           RowBox[{"7", "^", "n"}], "/", "100"}]}], "]"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"127", "+", 
         RowBox[{"19", "n"}]}], ")"}], "*", 
       RowBox[{"7", "^", "n"}]}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "17"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.644467012290787*^9, 3.644467040881968*^9}}],

Cell[BoxData["850481152593119296"], "Output",
 CellChangeTimes->{3.644467042539037*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Problem 231 - The prime factorisation of binomial coefficients\
\>", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641690378215371*^9, 3.641690382796176*^9}, {
   3.642561413126302*^9, 3.642561417934799*^9}}],

Cell[TextData[{
 "The binomial coefficient ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["C", "3", "10"], " ", "=", " ", "120"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"120", " ", "=", " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["2", "3"], " ", "\[Times]", " ", "3", " ", "\[Times]", 
      " ", "5"}], " ", "=", " ", 
     RowBox[{
     "2", " ", "\[Times]", " ", "2", " ", "\[Times]", " ", "2", " ", 
      "\[Times]", " ", "3", " ", "\[Times]", " ", "5"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and 2 + 2 + 2 + 3 + 5 = 14.\nSo the sum of the terms in the prime \
factorisation of ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["C", "3", "10"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is 14.\n\nFind the sum of the terms in the prime factorisation of ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["C", "15000000", "20000000"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". "
}], "Text",
 CellChangeTimes->{{3.642561424179686*^9, 3.642561483257385*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"p", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{"#1", "/", 
          RowBox[{"p", "^", "n"}]}], "]"}], "-", 
        RowBox[{"Floor", "[", 
         RowBox[{"#2", "/", 
          RowBox[{"p", "^", "n"}]}], "]"}], "-", 
        RowBox[{"Ceiling", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#1", "-", "#2", "+", "1"}], ")"}], "/", 
          RowBox[{"p", "^", "n"}]}], "]"}], "+", "1"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"Log2", "@", "#1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", 
       RowBox[{"PrimeRange", "[", 
        RowBox[{"#1", "^", 
         RowBox[{"(", 
          RowBox[{"1", "/", "n"}], ")"}]}], "]"}]}], "}"}]}], "]"}], "&"}], 
  "[", 
  RowBox[{"20000000", ",", "15000000"}], "]"}]], "Input",
 CellChangeTimes->{3.642562778994741*^9}],

Cell[BoxData["7526965179680"], "Output",
 CellChangeTimes->{3.642562791529525*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 234 - Semidivisible numbers", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641690378215371*^9, 3.641690382796176*^9}, {
   3.642561413126302*^9, 3.642561417934799*^9}, {3.643859452684174*^9, 
   3.643859457998101*^9}}],

Cell[TextData[{
 "For an integer n \[GreaterEqual] 4, we define the ",
 StyleBox["lower prime square root",
  FontSlant->"Italic"],
 " of n, denoted by lps(n), as the largest prime \[LessEqual] ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Sqrt]", "n"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and the ",
 StyleBox["upper prime square root",
  FontSlant->"Italic"],
 " of n, ups(n), as the smallest prime \[GreaterEqual] ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Sqrt]", "n"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nSo, for example, lps(4) = 2 = ups(4), lps(1000) = 31, ups(1000) = 37.\n\
Let us call an integer n \[GreaterEqual] 4 semidivisible, if one of lps(n) \
and ups(n) divides n, but not both.\n\nThe sum of the semidivisible numbers \
not exceeding 15 is 30, the numbers are 8, 10 and 12.\n15 is not \
semidivisible because it is a multiple of both lps(15) = 3 and ups(15) = 5.\n\
As a further example, the sum of the 92 semidivisible numbers up to 1000 is \
34825.\n\nWhat is the sum of all semidivisible numbers not exceeding \
999966663333 ?"
}], "Text",
 CellChangeTimes->{{3.643859464357377*^9, 3.643859511906374*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#1", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{
              RowBox[{"#1", "+", "1"}], ",", 
              RowBox[{
               RowBox[{"#2", "^", "2"}], "/", "#1"}]}], "]"}], ",", "#2"}], 
           "]"}]}], ",", 
         RowBox[{"#2", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{
              RowBox[{"#2", "-", "1"}], ",", 
              RowBox[{
               RowBox[{"#1", "^", "2"}], "/", "#2"}], ",", 
              RowBox[{"-", "1"}]}], "]"}], ",", "#1"}], "]"}]}]}], "}"}], 
       "&"}], "@@@", 
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"PrimeRange", "@", 
         RowBox[{"NextPrime", "@", 
          RowBox[{"Sqrt", "@", "999966663333"}]}]}], ",", "2", ",", "1"}], 
       "]"}]}], "]"}], ",", 
    RowBox[{
     RowBox[{"#", "\[LessEqual]", "999966663333"}], "&"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.643859263383115*^9, 3.64385929321808*^9}, {
  3.643859348616932*^9, 3.643859438911658*^9}}],

Cell[BoxData["1259187438574927161"], "Output",
 CellChangeTimes->{{3.643859279201608*^9, 3.643859294106861*^9}, {
  3.643859351851235*^9, 3.64385944540298*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 235 - An Arithmetic Geometric sequence", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641690378215371*^9, 3.641690382796176*^9}, {
   3.642561413126302*^9, 3.642561417934799*^9}, {3.642580003799891*^9, 
   3.64258000981104*^9}}],

Cell[TextData[{
 "Given is the arithmetic-geometric sequence ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"u", 
     RowBox[{"(", "k", ")"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"900", "-", 
       RowBox[{"3", "k"}]}], ")"}], 
     SuperscriptBox["r", 
      RowBox[{"k", "-", "1"}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\nLet ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"s", 
     RowBox[{"(", "n", ")"}]}], " ", "=", " ", 
    RowBox[{
     SubscriptBox["\[CapitalSigma]", 
      RowBox[{"k", "=", 
       RowBox[{
        RowBox[{"1", "..."}], "n"}]}]], 
     RowBox[{"u", "(", "k", ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nFind the value of r for which s(5000) = -600,000,000,000.\n\nGive your \
answer rounded to 12 places behind the decimal point."
}], "Text",
 CellChangeTimes->{{3.642580016301136*^9, 3.642580044121627*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"900", "-", 
       RowBox[{"3", "k"}]}], ")"}], 
     RowBox[{"r", "^", 
      RowBox[{"(", 
       RowBox[{"k", "-", "1"}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}], "/.", 
  RowBox[{"n", "\[Rule]", "5000"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "299"}], "+", 
      RowBox[{"300", " ", "r"}], "-", 
      RowBox[{"4701", " ", 
       SuperscriptBox["r", "5000"]}], "+", 
      RowBox[{"4700", " ", 
       SuperscriptBox["r", "5001"]}]}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{3.642579932865991*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"3", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "299"}], "+", 
        RowBox[{"300", " ", "r"}], "-", 
        RowBox[{"4701", " ", 
         SuperscriptBox["r", "5000"]}], "+", 
        RowBox[{"4700", " ", 
         SuperscriptBox["r", "5001"]}]}], ")"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"]]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.642581024885081*^9, 3.642581033430853*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJw1lvk71AsbxhElW3LOKVpkKU2JVF6p8DwVOqVEIrtKnIqSqE6MypKlrEMY
I1nH0jDWJku+QscSKdnOZBu7GYyQROnt/eH94b7u63N9/oD7VrzodsZJSEBA
oPBX/tcTXn4U8g8+Ead+gkb2q8RQ9TnVa7845P2ceSXvKaaucvqaOsMn/Bu3
T4oeJOPL/vbqrlE+kWMudDFNnozvSg3DpXr4RM3WLw4WymQcorCs9Fv5xL5z
QVvXkci46ELa5lXHJwpqk4M6d5FR2oA6zazgE5cu7g9M2ENGna9eQRsz+QSp
baPVtkNkfGKjVzLjzSfsmkpdjY3JyNBkPiC584mbI5nVm8zIWC2pcNLemU9k
BGeWTZwj4xQhONhgwieyBjRioi6Q0XDrG+mUbXyib++AMN+TjPMTRq6nW6aI
TIOzCd9oZLS8Z6XMUJoi9mdOJpvxyChepV2bIDtF7BgaGhScJmOloKxTiNQU
Yfj9R07BHBm3PeygOy9OEhEiIfV/LJNx5rHZTsXWSULyVK35tLQPhlJP7Yn1
nSQ+ad86z9fywariw/Cgf4L4qdoXtiHAB0m8HTZnk3hE6n1OganyPXQxNnk4
MDhGGK1JOpEScx+tPU7rammNEF4PNDEt6gFGE2MmxItB4st0faSsvS+CUJeF
uiCHuNdpZWhn5odXu6pvZMx2E6BYFiR6xh91qL6yZX93EvqK6ye2BQXg5Z7P
n6zWtxK6cgf183of4un+Xbn1WxuJJ537mMdPBKEWQevkBlQS1mYib7iSIXhg
2s6x1zGdmAl/FSwx/whV/fliVbfSYGlOMCNYKQxtD/0mmquUDmfXPC19tSsM
Q2e1RBJa0oEunvf1m1YYTjne++mxgw61btekgo3CsFBfcm57TxbEqNmQlzzD
UHulak+Efh5ceZ2oZtgQhqn6RZ3MkGIQCvmbnXYnHJl1U9n3LQmYO/197sZk
BPbaS/rszibAMPLjNc5CBErNq5r0fSPgzgdRKTWhSNSiaHo/O1UF/wTIyRdK
RmJMlbviz6kqkNf7emRqaySabp64VrmnGuIdWMl7z0ZiY0f/Sl1WLUSt/bBJ
8kUkvjreqH2wugE6XS301IKjcOo/mjWzkw2QJ3GsJTMiCuWVkk7lyjXCGj/L
WlJcFN5bdL+o4N4IMouVS7r0KMTncqErFd7Cyy3dwS9qo7BW4kpfq08TLK7R
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
J+D/f/i/SjifEw==
     "]], 
    LineBox[{{0.9965265503408383, 7810.486744533896}, {0.9966096372852291, 
     4465.468071776141}, {0.9966537982278544, -3909.008691560362}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-2, 2}, {-3909.008691560362, 7810.486744533896}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.642581034000909*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r", "/.", 
  RowBox[{"First", "@", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "299"}], "+", 
            RowBox[{"300", " ", "r"}], "-", 
            RowBox[{"4701", " ", 
             SuperscriptBox["r", "5000"]}], "+", 
            RowBox[{"4700", " ", 
             SuperscriptBox["r", "5001"]}]}], ")"}]}], "-", 
         RowBox[{"600000000000", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "r"}], ")"}], "2"]}]}], "\[Equal]", 
        "0"}], ",", 
       RowBox[{"r", "\[NotEqual]", "1"}]}], "}"}], ",", "r", ",", "Reals", 
     ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "13"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.642580720747083*^9, 3.642580722401305*^9}, {
  3.642580784470984*^9, 3.642580788884025*^9}, {3.642580833707876*^9, 
  3.642580868808174*^9}, {3.642580945809521*^9, 3.642580974079959*^9}, {
  3.642581009125546*^9, 3.642581015336844*^9}}],

Cell[BoxData["1.00232210863287614285000658102`13."], "Output",
 CellChangeTimes->{
  3.64258072769404*^9, 3.642580793028035*^9, {3.642580839646051*^9, 
   3.642580873065391*^9}, {3.642580952086677*^9, 3.642580978120884*^9}, 
   3.642581039788041*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 243 - Resilience", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641690378215371*^9, 3.641690382796176*^9}}],

Cell[TextData[{
 "A positive fraction whose numerator is less than its denominator is called \
a proper fraction.\nFor any denominator, d, there will be d\[Minus]1 proper \
fractions; for example, with d\[ThinSpace]=\[ThinSpace]12:\n1/12 , 2/12 , \
3/12 , 4/12 , 5/12 , 6/12 , 7/12 , 8/12 , 9/12 , 10/12 , 11/12 .\n\nWe shall \
call a fraction that cannot be cancelled down a ",
 StyleBox["resilient fraction",
  FontSlant->"Italic"],
 ".\nFurthermore we shall define the ",
 StyleBox["resilience",
  FontSlant->"Italic"],
 " of a denominator, R(d), to be the ratio of its proper fractions that are \
resilient; for example, R(12) = 4/11 .\nIn fact, d\[ThinSpace]=\[ThinSpace]12 \
is the smallest denominator having a resilience R(d) < 4/10 .\n\nFind the \
smallest denominator d, having a resilience R(d) < 15499/94744 ."
}], "Text",
 CellChangeTimes->{{3.641690617972715*^9, 3.641690625187748*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IncreaseWhile", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"EulerPhi", "@", "#"}], "/", 
        RowBox[{"(", 
         RowBox[{"#", "-", "1"}], ")"}]}], "\[GreaterEqual]", 
       RowBox[{"15499", "/", "94744"}]}], "&"}], ",", "#", ",", "#"}], "]"}], 
   "&"}], "[", 
  RowBox[{"Times", "@@", 
   RowBox[{"NestWhile", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Append", "[", 
       RowBox[{"#", ",", 
        RowBox[{"NextPrime", "@", 
         RowBox[{"Last", "@", "#"}]}]}], "]"}], "&"}], ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Times", "@@", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"1", "/", "#"}]}], ")"}]}], "\[GreaterEqual]", 
       RowBox[{"15499", "/", "94744"}]}], "&"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641692259322094*^9, 3.641692277911152*^9}, {
  3.641692313528855*^9, 3.641692330048388*^9}}],

Cell[BoxData["892371480"], "Output",
 CellChangeTimes->{3.641692331075983*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 249 - Prime Subset Sums", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641690378215371*^9, 3.641690382796176*^9}, {
   3.645265411963103*^9, 3.645265415619027*^9}, {3.653818469679996*^9, 
   3.653818472332923*^9}, 3.653818517623953*^9}],

Cell["\<\
Let S = {2, 3, 5, ..., 4999} be the set of prime numbers less than 5000.

Find the number of subsets of S, the sum of whose elements is a prime number.
Enter the rightmost 16 digits as your answer.\
\>", "Text",
 CellChangeTimes->{{3.653818524952817*^9, 3.653818528853925*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Slow", "!"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Mod", "[", 
   RowBox[{
    RowBox[{"Total", "@", 
     RowBox[{
      RowBox[{"Fold", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"PadRight", "[", 
           RowBox[{"#", ",", 
            RowBox[{
             RowBox[{"Length", "@", "#"}], "+", "#2"}]}], "]"}], "+", 
          RowBox[{"PadLeft", "[", 
           RowBox[{"#", ",", 
            RowBox[{
             RowBox[{"Length", "@", "#"}], "+", "#2"}]}], "]"}]}], "&"}], ",", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{"1", "\[Rule]", "1"}], ",", "1"}], "]"}], ",", 
        RowBox[{"PrimeRange", "@", "5000"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", "+", 
        RowBox[{"PrimeRange", "@", 
         RowBox[{"Total", "@", 
          RowBox[{"PrimeRange", "@", "5000"}]}]}]}], "]"}], "]"}]}], ",", 
    "1*^16"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.653814680085365*^9, 3.653814689433406*^9}, {
   3.653818298768016*^9, 3.653818302094652*^9}, {3.65381866915746*^9, 
   3.653818676663016*^9}, 3.653875019603803*^9}],

Cell[BoxData["9275262564250418"], "Output",
 CellChangeTimes->{3.653875168683601*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 250 - 250250", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641690378215371*^9, 3.641690382796176*^9}, {
   3.645265411963103*^9, 3.645265415619027*^9}}],

Cell[TextData[{
 "Find the number of non-empty subsets of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["1", "1"], ",", " ", 
     SuperscriptBox["2", "2"], ",", " ", 
     SuperscriptBox["3", "3"], ",", "...", ",", " ", 
     SuperscriptBox["250250", "250250"]}], "}"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", the sum of whose elements is divisible by 250. Enter the rightmost 16 \
digits as your answer."
}], "Text",
 CellChangeTimes->{{3.645265422532193*^9, 3.645265458448772*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Last", "@", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"#", "+", 
         RowBox[{"RotateRight", "[", 
          RowBox[{"#", ",", "#2"}], "]"}]}], ",", "1*^16"}], "]"}], "&"}], 
     ",", 
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{"250", "\[Rule]", "1"}], ",", "250"}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"PowerMod", "[", 
        RowBox[{"i", ",", "i", ",", "250"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "250250"}], "}"}]}], "]"}]}], "]"}]}], "-", 
  "1"}]], "Input",
 CellChangeTimes->{{3.645266665852191*^9, 3.645266666057569*^9}, {
  3.645266714939208*^9, 3.645266717185359*^9}}],

Cell[BoxData["1425480602091519"], "Output",
 CellChangeTimes->{3.645265506433431*^9, 3.645266705693795*^9, 
  3.6452667555959272`*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 251 - 275", "Subsection",
 CellChangeTimes->{{3.640509015355191*^9, 3.640509022245683*^9}, {
  3.640519338671053*^9, 3.640519341443173*^9}, {3.6405218351164*^9, 
  3.640521837410107*^9}, {3.640692001248666*^9, 3.64069200435303*^9}, {
  3.640938376129309*^9, 3.640938377765213*^9}, {3.641036451653161*^9, 
  3.641036453169998*^9}, {3.641690359275677*^9, 3.641690362272438*^9}, {
  3.643022654887709*^9, 3.643022657635245*^9}, {3.644227845950737*^9, 
  3.644227848366685*^9}}],

Cell[CellGroupData[{

Cell["Problem 265 - Binary Circles", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641690378215371*^9, 3.641690382796176*^9}, {
   3.643022678013562*^9, 3.643022681482098*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "N"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " binary digits can be placed in a circle so that all the N-digit clockwise \
subsequences are distinct.\n\nFor N=3, two such circular arrangements are \
possible, ignoring rotations:\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnG9u1DAQxSPgA9fgJsARygUoEnxFKkiod+NuYemKVdjE9vz1jJ33k1q1
qjPz8vY5rZ1s3335/vDt1bIsP95ePj08/vrw9PT4/OnN5ZuPzz+/fnl9+eLz
5eP35ePv1ysAAAAAAAAAAAAAAAAAYM1SJVpdCmAR65RP6M8Ki/5BOan3LyiL
jAssukI/hZsVdU+4ZfMDi26wBN+ZQPFE0CUbsGgLV6TYEFm7DMCiG7JUKw0R
9w0BFt3QSNIbotfQAVi0RSnDyhATMU7AInMBrEVBk3BP7oBFTq2bmw8s8sQG
FoU3rXBnaQZ5GTRsibXorp1h/mUcXrpjXzJYtGXvRqwhlT8Ro2IDi7YcTp+0
hqwRsYFFlOKZDVn7xgYWESvrdww0t9XOkJlBLaqUFdwBKZlQ+RGx+6GYPrGB
RfSCREMEM4V4CGXLyzs2sIhVrWmI+KJKr0B5JEkjoAksYpXKo8T1cE3ls1kk
rqOfO7Y1AzNTOXA+ixK+QJriHqpSidEXj7pSdVinJNGWRIZtC4022bF9Frbi
RhkyM7FFgmO7uSFuF56ZiS1KPoM07WJXBxNblH8GiZsGZmZui7hHhbghax2V
mbktGmUGiVvr1cKizuPN6S8YFnUebw4yYy4g23gPWBpOmBmuBtcTzODGmjsz
01s04gxaqzIOHwPouds5vUWHIwMfZyJSklF63Mg2M/WnU6a3aCZDnN6mcXds
8ym46S06NCR/ZtZC2kvfWmUmzwPJFJwsYv1uyuPGmjUzZ7AImWE1QmZKI5GZ
UiNkpjRy0Mys/uum0TOz+qyb9tVklb2prCVd92dGWTetbhYNmpme+2wzbUeY
jJ9vk9NkfFQvQ/LcQhrRENxvsh3sXdwJZKZJnswIxnuQOTMmHfUgMxoBJ8xM
tgxMb0iGjko6CB7IkyipsCikiwnIjHnrPpkRN1ISqBMWxfaSEa4wXIBHu567
ncp2AsIVhgvwaNc5M8qOHRqFZ8Zcg3kjpby0nlTuzwqO8lDicZRJiw4WNYv0
fwKWdUO/eZSfnhtns6hep6JhecFEA6Vm4LPusIheqqmhj4y9JFcZrPqntag5
j5qH6/+sIlbIlpkr57SoUjD8H7M3xfRZp8AielmiIds6W4g/IhL7CDcsIlbm
GrIvq3GgKWbEzOzLjmvRYXGlIbYYviFFBizas2+RypAt/QNT6guLol4LFrEi
YZF3u/rmpIAML5m5hgkssmrafBMilwyBuWKoxHZaBVqkb0355y0s8gTmiuFK
Z5o5pRRgm5lwNw4xvyBrSGKRZt/AKjNWexdOmMgz2eRRarBFJkmfmYRWlFBK
nXhCscYrM5PZihJW12Tvdj3hplq2bko+d+qYXJOdugTCuj9CX0ga3nYJh3su
57HI5BQm8KECLCqx/I/h4GmARXWWKtHqUgCLAAAAAAAAAACA8/AHZUON5A==

     "], {{0, 96}, {188, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{188, 96},
   PlotRange->{{0, 188}, {0, 96}}]], "Output",
  CellChangeTimes->{3.643022709515829*^9}],
 "\n\nFor the first arrangement, the 3-digit subsequences, in clockwise \
order, are:\n000, 001, 010, 101, 011, 111, 110 and 100.\n\nEach circular \
arrangement can be encoded as a number by concatenating the binary digits \
starting with the subsequence of all zeros as the most significant bits and \
proceeding clockwise. The two arrangements for N=3 are thus represented as 23 \
and 29:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{"00010111", "\[ThinSpace]"}], "2"], " ", "=", " ", "23"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{"00011101", "\[ThinSpace]"}], "2"], " ", "=", " ", "29"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nCalling S(N) the sum of the unique numeric representations, we can see \
that S(3) = 23 + 29 = 52.\n\nFind S(5)."
}], "Text",
 CellChangeTimes->{{3.643022687324075*^9, 3.643022736817028*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FromDigits", "[", 
     RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", 
   RowBox[{
    RowBox[{"FindCycle", "[", 
     RowBox[{
      RowBox[{"Graph", "@", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"Tuples", "[", 
          RowBox[{
           RowBox[{"IntegerDigits", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"2", "^", "5"}], "]"}], "-", "1"}], ",", "2", ",", 
             "5"}], "]"}], ",", "2"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x1", ":", 
              RowBox[{"{", 
               RowBox[{"_", ",", "y1___"}], "}"}]}], ",", 
             RowBox[{"x2", ":", 
              RowBox[{"{", 
               RowBox[{"y2___", ",", "_"}], "}"}]}]}], "}"}], "/;", 
           RowBox[{
            RowBox[{"x1", "\[NotEqual]", "x2"}], "&&", 
            RowBox[{
             RowBox[{"{", "y1", "}"}], "\[Equal]", 
             RowBox[{"{", "y2", "}"}]}]}]}], "\[RuleDelayed]", 
          RowBox[{"x1", "\[Rule]", "x2"}]}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "^", "5"}], "}"}], ",", "All"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", ";;", ",", "1", ",", "1"}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.643022619663519*^9, 3.643022637859417*^9}}],

Cell[BoxData["209110240768"], "Output",
 CellChangeTimes->{{3.64302262343888*^9, 3.643022638614625*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 267 - Billionaire", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641690378215371*^9, 3.641690382796176*^9}, {
   3.643022678013562*^9, 3.643022681482098*^9}, {3.644227844699099*^9, 
   3.644227860686308*^9}}],

Cell["\<\
You are given a unique investment opportunity.

Starting with \[Sterling]1 of capital, you can choose a fixed proportion, f, \
of your capital to bet on a fair coin toss repeatedly for 1000 tosses.

Your return is double your bet for heads and you lose your bet for tails.

For example, if f\[ThinSpace]=\[ThinSpace]1/4, for the first toss you bet \
\[Sterling]0.25, and if heads comes up you win \[Sterling]0.5 and so then \
have \[Sterling]1.5. You then bet \[Sterling]0.375 and if the second toss is \
tails, you have \[Sterling]1.125.

Choosing f to maximize your chances of having at least \
\[Sterling]1,000,000,000 after 1,000 flips, what is the chance that you \
become a billionaire?

All computations are assumed to be exact (no rounding), but give your answer \
rounded to 12 digits behind the decimal point in the form 0.abcdefghijkl.\
\>", "Text",
 CellChangeTimes->{{3.64422786757002*^9, 3.644227871318583*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Binomial", "[", 
       RowBox[{"1000", ",", "i"}], "]"}], "/", 
      RowBox[{"2", "^", "1000"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       RowBox[{"Floor", "@", 
        RowBox[{"MaxValue", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"i", "/.", 
             RowBox[{"First", "@", 
              RowBox[{"Solve", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", "f"}]}], ")"}], "^", 
                   RowBox[{"(", 
                    RowBox[{"1000", "-", "i"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "f"}], ")"}], "^", "i"}]}], "\[Equal]", 
                 "1000000000"}], ",", "i"}], "]"}]}]}], ",", 
            RowBox[{"0", "<", "f", "<", "1"}]}], "}"}], ",", "f"}], "]"}]}]}],
       "}"}]}], "]"}], ",", "12"}], "]"}]], "Input",
 CellChangeTimes->{{3.644227357888658*^9, 3.644227362718774*^9}, {
  3.64422780186135*^9, 3.644227816602227*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(Solve\\)\[NoBreak], so some solutions may not be found; use \
Reduce for complete solution information. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", ButtonNote -> \
\\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.644227817402693*^9}],

Cell[BoxData["0.999992836186713594670702126`12."], "Output",
 CellChangeTimes->{{3.644227359154146*^9, 3.64422736896434*^9}, {
  3.644227802856283*^9, 3.644227818602066*^9}}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 276 - 300", "Subsection",
 CellChangeTimes->{{3.640509015355191*^9, 3.640509022245683*^9}, {
  3.640519338671053*^9, 3.640519341443173*^9}, {3.6405218351164*^9, 
  3.640521837410107*^9}, {3.640692001248666*^9, 3.64069200435303*^9}, {
  3.640938376129309*^9, 3.640938377765213*^9}, {3.641036451653161*^9, 
  3.641036453169998*^9}, {3.641690359275677*^9, 3.641690362272438*^9}, {
  3.643022654887709*^9, 3.643022657635245*^9}, {3.644227845950737*^9, 
  3.644227848366685*^9}, {3.644383937656747*^9, 3.644383940624453*^9}}],

Cell[CellGroupData[{

Cell["Problem 277 - A Modified Collatz sequence", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641690378215371*^9, 3.641690382796176*^9}, {
   3.643022678013562*^9, 3.643022681482098*^9}, {3.644383946461366*^9, 
   3.644383950370072*^9}}],

Cell[TextData[{
 "A modified Collatz sequence of integers is obtained from a starting value \
a1 in the following way:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", 
     RowBox[{"n", "+", "1"}]], " ", "=", " ", 
    RowBox[{
     SubscriptBox["a", "n"], "/", "3"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " if an is divisible by 3. We shall denote this as a large downward step, \
\[OpenCurlyDoubleQuote]D\[CloseCurlyDoubleQuote].\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", 
     RowBox[{"n", "+", "1"}]], " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", 
        SubscriptBox["a", "n"]}], " ", "+", " ", "2"}], ")"}], "/", "3"}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " if an divided by 3 gives a remainder of 1. We shall denote this as an \
upward step, \[OpenCurlyDoubleQuote]U\[CloseCurlyDoubleQuote].\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", 
     RowBox[{"n", "+", "1"}]], " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", 
        SubscriptBox["a", "n"]}], " ", "-", " ", "1"}], ")"}], "/", "3"}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " if an divided by 3 gives a remainder of 2. We shall denote this as a small \
downward step, \[OpenCurlyDoubleQuote]d\[CloseCurlyDoubleQuote].\n\nThe \
sequence terminates when some ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "n"], " ", "=", " ", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nGiven any integer, we can list out the sequence of steps.\nFor \
instance if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "1"], "=", "231"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", then the sequence ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     SubscriptBox["a", "n"], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
     "231", ",", "77", ",", "51", ",", "17", ",", "11", ",", "7", ",", "10", 
      ",", "14", ",", "9", ",", "3", ",", "1"}], "}"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " corresponds to the steps \[OpenCurlyDoubleQuote]DdDddUUdDD\
\[CloseCurlyDoubleQuote].\n\nOf course, there are other sequences that begin \
with that same sequence \[OpenCurlyDoubleQuote]DdDddUUdDD....\
\[CloseCurlyDoubleQuote].\nFor instance, if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "1"], "=", "1004064"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", then the sequence is DdDddUUdDDDdUDUUUdDdUUDDDUdDD.\nIn fact, 1004064 is \
the smallest possible ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "1"], " ", ">", " ", 
    SuperscriptBox["10", "6"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " that begins with the sequence DdDddUUdDD.\n\nWhat is the smallest ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "1"], " ", ">", " ", 
    SuperscriptBox["10", "15"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " that begins with the sequence \
\[OpenCurlyDoubleQuote]UDDDUdddDDUDDddDdDddDDUDDdUUDd\[CloseCurlyDoubleQuote]?"
}], "Text",
 CellChangeTimes->{{3.644383956368746*^9, 3.644384064564791*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Fold", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Switch", "[", 
      RowBox[{"#2", ",", "\"\<D\>\"", ",", 
       RowBox[{"3", "#"}], ",", "\"\<U\>\"", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", "#"}], "-", "2"}], ")"}], "/", "4"}], ",", "\"\<d\>\"",
        ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", "#"}], "+", "1"}], ")"}], "/", "2"}]}], "]"}], "&"}], 
    ",", "a", ",", 
    RowBox[{"Reverse", "@", 
     RowBox[{
     "Characters", "@", "\"\<UDDDUdddDDUDDddDdDddDDUDDdUUDd\>\""}]}]}], "]"}],
   "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.644383287186301*^9, 3.644383352371171*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["21110037246199", "4194304"], "+", 
  FractionBox[
   RowBox[{"205891132094649", " ", "a"}], "4194304"]}]], "Output",
 CellChangeTimes->{{3.644383332550475*^9, 3.644383352858799*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"21110037246199", "+", 
       RowBox[{"205891132094649", " ", "a"}]}], ")"}], "/", "4194304"}], "/.", 
    RowBox[{"a", "\[Rule]", 
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "21110037246199"}], 
        RowBox[{"PowerMod", "[", 
         RowBox[{"205891132094649", ",", 
          RowBox[{"-", "1"}], ",", "4194304"}], "]"}]}], ",", "4194304"}], 
      "]"}]}]}], ",", 
   RowBox[{"3", "^", 
    RowBox[{"StringLength", "@", "\"\<UDDDUdddDDUDDddDdDddDDUDDdUUDd\>\""}]}],
    ",", 
   RowBox[{"10", "^", "15"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.644383915040575*^9, 3.644383922579182*^9}, {
  3.644384074060304*^9, 3.644384077664609*^9}}],

Cell[BoxData["1125977393124310"], "Output",
 CellChangeTimes->{3.644383923183568*^9, 3.644384083189461*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 293 - Pseudo-Fortunate Numbers", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641690378215371*^9, 3.641690382796176*^9}, {
   3.643022678013562*^9, 3.643022681482098*^9}, {3.644383946461366*^9, 
   3.644383950370072*^9}, {3.645316942949837*^9, 3.645316946591008*^9}, {
   3.651996815320098*^9, 3.651996819947417*^9}}],

Cell[TextData[{
 "An even positive integer N will be called admissible, if it is a power of 2 \
or its distinct prime factors are consecutive primes.\nThe first twelve \
admissible numbers are 2,4,6,8,12,16,18,24,30,32,36,48.\n\nIf N is \
admissible, the smallest integer M > 1 such that N+M is prime, will be called \
the pseudo-Fortunate number for N.\n\nFor example, N=630 is admissible since \
it is even and its distinct prime factors are the consecutive primes 2,3,5 \
and 7.\nThe next prime number after 631 is 641; hence, the pseudo-Fortunate \
number for 630 is M=11.\nIt can also be seen that the pseudo-Fortunate number \
for 16 is 3.\n\nFind the sum of all distinct pseudo-Fortunate numbers for \
admissible numbers N less than ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "9"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.65199682718891*^9, 3.651996839558387*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Times", "@@", 
   RowBox[{"Prime", "@", 
    RowBox[{"Range", "@", "10"}]}]}], ">", "1.*^9"}]], "Input",
 CellChangeTimes->{{3.651996743665604*^9, 3.651996755674321*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.65199674629017*^9, 3.651996756305815*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{"DeleteDuplicates", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NextPrime", "[", 
       RowBox[{"n", "+", "1"}], "]"}], "-", "n"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"Catenate", "@", 
        RowBox[{"Rest", "@", 
         RowBox[{"FoldList", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Catenate", "[", 
             RowBox[{
              RowBox[{"#2", "^", 
               RowBox[{"Range", "@", 
                RowBox[{"Log", "[", 
                 RowBox[{"#2", ",", 
                  RowBox[{"1.*^9", "/", "#"}]}], "]"}]}]}], "#"}], "]"}], 
            "&"}], ",", 
           RowBox[{"{", "1", "}"}], ",", 
           RowBox[{"Prime", "@", 
            RowBox[{"Range", "@", "10"}]}]}], "]"}]}]}]}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.651996677604315*^9, 3.651996701832995*^9}, {
   3.651996770883166*^9, 3.651996798182661*^9}, 3.651997077249482*^9}],

Cell[BoxData["2209"], "Output",
 CellChangeTimes->{3.651996692165637*^9, 3.651996799369421*^9, 
  3.651997078664768*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 297 - Zeckendorf Representation", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641690378215371*^9, 3.641690382796176*^9}, {
   3.643022678013562*^9, 3.643022681482098*^9}, {3.644383946461366*^9, 
   3.644383950370072*^9}, {3.645316942949837*^9, 3.645316946591008*^9}}],

Cell[TextData[{
 "Each new term in the Fibonacci sequence is generated by adding the previous \
two terms.\nStarting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, \
13, 21, 34, 55, 89.\n\nEvery positive integer can be uniquely written as a \
sum of nonconsecutive terms of the Fibonacci sequence. For example, 100 = 3 + \
8 + 89.\nSuch a sum is called the ",
 StyleBox["Zeckendorf representation",
  FontWeight->"Bold"],
 " of the number.\n\nFor any integer n>0, let z(n) be the number of terms in \
the Zeckendorf representation of n.\nThus, z(5)\[ThinSpace]=\[ThinSpace]1, \
z(14)\[ThinSpace]=\[ThinSpace]2, z(100)\[ThinSpace]=\[ThinSpace]3 etc.\nAlso, \
for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "<", "n", "<", 
    SuperscriptBox["10", "6"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", \[Sum]\[ThinSpace]z(n)\[ThinSpace]=\[ThinSpace]7894453.\n\nFind \[Sum]\
\[ThinSpace]z(n) for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "<", "n", "<", 
    SuperscriptBox["10", "17"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{
  3.645316953509404*^9, {3.645316999080181*^9, 3.645317036845544*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"s", "[", "0", "]"}], "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "[", "1", "]"}], "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"s", "[", "n", "]"}], "=", 
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"n", "-", "1"}], "]"}], "+", 
     RowBox[{"s", "[", 
      RowBox[{"n", "-", "2"}], "]"}], "+", 
     RowBox[{"Fibonacci", "[", "n", "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.645270193307698*^9, 3.645270210831048*^9}, {
   3.645314489208985*^9, 3.645314495000205*^9}, 3.645316546088169*^9, {
   3.645316745642057*^9, 3.64531674586149*^9}, 3.645316800214636*^9, {
   3.645316854540653*^9, 3.645316869014968*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"#", ">", "0"}], ",", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"m", "=", 
         RowBox[{
          RowBox[{"IncreaseWhile", "[", 
           RowBox[{"n", "\[Function]", 
            RowBox[{
             RowBox[{"Fibonacci", "@", "n"}], "\[LessEqual]", "#"}]}], "]"}], 
          "-", "1"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"m", "-", "2"}], "]"}], "+", "#", "-", 
        RowBox[{"Fibonacci", "@", "m"}], "+", 
        RowBox[{"#0", "[", 
         RowBox[{"#", "-", 
          RowBox[{"Fibonacci", "@", "m"}]}], "]"}]}]}], "]"}], ",", "0"}], 
    "]"}], "&"}], "[", 
  RowBox[{"10", "^", "17"}], "]"}]], "Input",
 CellChangeTimes->{{3.645316873604675*^9, 3.645316875697322*^9}}],

Cell[BoxData["2252639041804718029"], "Output",
 CellChangeTimes->{3.645316876142165*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 301 - 325", "Subsection",
 CellChangeTimes->{{3.640509015355191*^9, 3.640509022245683*^9}, {
  3.640519338671053*^9, 3.640519341443173*^9}, {3.6405218351164*^9, 
  3.640521837410107*^9}, {3.640692001248666*^9, 3.64069200435303*^9}, {
  3.640938376129309*^9, 3.640938377765213*^9}, {3.641036451653161*^9, 
  3.641036453169998*^9}, {3.641690359275677*^9, 3.641690362272438*^9}, {
  3.642232614147354*^9, 3.642232617962533*^9}, {3.642720546491436*^9, 
  3.642720547528722*^9}}],

Cell[CellGroupData[{

Cell["Problem 301 - Nim", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641690378215371*^9, 3.641690382796176*^9}, {
   3.642720580554666*^9, 3.642720584503579*^9}}],

Cell[TextData[{
 StyleBox["Nim",
  FontSlant->"Italic"],
 " is a game played with heaps of stones, where two players take it in turn \
to remove any number of stones from any heap until no stones remain.\n\nWe\
\[CloseCurlyQuote]ll consider the three-heap normal-play version of Nim, \
which works as follows:\n- At the start of the game there are three heaps of \
stones.\n- On his turn the player removes any positive number of stones from \
any single heap.\n- The first player unable to move (because no stones \
remain) loses.\n\nIf ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["n", "1"], ",", 
     SubscriptBox["n", "2"], ",", 
     SubscriptBox["n", "3"]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " indicates a Nim position consisting of heaps of size ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "3"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " then there is a simple function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"X", "(", 
    RowBox[{
     SubscriptBox["n", "1"], ",", 
     SubscriptBox["n", "2"], ",", 
     SubscriptBox["n", "3"]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \[LongDash] that you may look up or attempt to deduce for yourself \
\[LongDash] that returns:\n\n    zero if, with perfect strategy, the player \
about to move will eventually lose; or\n    non-zero if, with perfect \
strategy, the player about to move will eventually win.\n\nFor example ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"X", 
     RowBox[{"(", 
      RowBox[{"1", ",", "2", ",", "3"}], ")"}]}], " ", "=", " ", "0"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " because, no matter what the current player does, his opponent can respond \
with a move that leaves two heaps of equal size, at which point every move by \
the current player can be mirrored by his opponent until no stones remain; so \
the current player loses. To illustrate:\n- current player moves to (1,2,1)\n\
- opponent moves to (1,0,1)\n- current player moves to (0,0,1)\n- opponent \
moves to (0,0,0), and so wins.\n\nFor how many positive integers ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "\[ThinSpace]", "\[LessEqual]", "\[ThinSpace]", 
    SuperscriptBox["2", "30"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " does ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"X", 
     RowBox[{"(", 
      RowBox[{"n", ",", 
       RowBox[{"2", "n"}], ",", 
       RowBox[{"3", "n"}]}], ")"}]}], " ", "=", " ", "0"}], TraditionalForm]],
  
  FormatType->"TraditionalForm"],
 " ?"
}], "Text",
 CellChangeTimes->{{3.642720593281538*^9, 3.642720686502482*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fibonacci", "[", 
  RowBox[{"30", "+", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.642720616594552*^9, 3.642720625280523*^9}}],

Cell[BoxData["2178309"], "Output",
 CellChangeTimes->{3.642720626710907*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 303 - Multiples with small digits", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641690378215371*^9, 3.641690382796176*^9}, {
   3.642720580554666*^9, 3.642720584503579*^9}, {3.644023916582781*^9, 
   3.644023923915225*^9}}],

Cell[TextData[{
 "For a positive integer n, define f(n) as the least positive multiple of n \
that, written in base 10, uses only digits \[LessEqual] 2.\n\nThus f(2)=2, \
f(3)=12, f(7)=21, f(42)=210, f(89)=1121222.\n\nAlso, ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztmj+OGjEUh1FCkWvkHKmyPc3mBLtSaCPtRoq2o+IMKbfICTgBt6CioqPj
BGRepJEIGo+f7WfG2N8nsbvM2M9e/NP7N3x+/vG4/DCbzV4/dT8en359fXl5
evs27948vP38/vyx++NL9/rdveQiAAAAAJTBfD4/j91LuQ/t0mvDpY/L60Nj
fPcBBJ92hq5p5wCgL8gJ+oKcoC/ICfqCnJSgL18tG2IfnZfF1PrS9DlCbaOx
cpi6/+Wba6FbmAZNjzVn/z6Xtqzmw31yqevQmHg9Z8wO+mqb2Hy+v5cjd4M6
iI2NQ9rSjIe2SNGXVluadaBOUv2X1hb6ahP01Qar1eq/Wi7kFbtmbC9+TFvU
j+XSa2y73arOox8fu561vsjty+f9/c+/c5LfvrH7/f4m+godazHPeg1Nfzok
Hoz1/1L71b5eYmoMC9HYLc+9tOePms83tH8c86xEa0O7X9d7y/ggMVLmSQwM
netCs9cQGxbjLEj1X9qxVv7eqmaK2dclu93OVGMWNUGJWJ5Bbm3FrJGzLpcc
a7FYnJfL5fl4PFalCyus9OU735j4FrNOiE0LXyG6EjuHw6FKfaX2XyzGaHJq
n73U/H4qfW02G3XPwrWHUl6pn4Xr/7MY04/TaMl33Sr/irkeguRgmjqyZXLn
99Z+pRR9SVxcr9fVa6uE+Dg2dkp95YyNUjeeTqfq9ZXKFPVjyrmHzM3lu8Rv
1ZrPW6Kt6Xy5uzYvd+VnqTZixoytM0ZIPi/+TfoXsWtBW4Tm86LDFnI0SCck
nxe/1T9DEn+Xe29w/0iPPqanJD5v6r1D2Yjfiu1ZUgfAvXJdx+TuxUN79Fq6
1tl0O4JaGNLW0HuAGEKe9wKEEvpMDOrG+uzRFwg56roxbaGxNrmFvtBWu3D2
0OPqXabaTN8Z1MJ1PuP7bpHvu0boCy4Z8mGp9tJ3BTVgrS0rG1AHmr448RFi
cGmL+AgWuPL4VJv0pwAAAAAAbsdfxg1/bg==
     "], {{0, 59}, {152, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{152, 59},
   PlotRange->{{0, 152}, {0, 59}}]], "Output",
  CellChangeTimes->{3.64402396597793*^9}],
 ".\n\nFind ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztmTFugzAUhlHL0Gv0HJ3aPaqUniCRwloprVRly5RzZOgJcoLcIhMTGxsn
oLxKSEBp7PewHWz/n0QSjHl+/Hm2n/Hj+n2Z3SVJ8vHQfCxXX8/b7Wr3ljYn
L7vPzfq++fHUHK/NQYUAAACAhDRN62vXbnl9rrR+/+d7t3ysju3rPqB6rrEy
29d9AdrJgXZyoJ0caCfHd+10cwWVDWnb3LK5aNfeY8LelPavlc81v5sab1Pu
08mP57quUNk1bTMEuv83p68O63PvDwlJfx2OjzFqJ+2vY7HHuT8EJNrp6Kay
HQJS7ST1prDf73tjM+cw5UMXlV2dfuhyvGv1O5/PWnbb+iZ9aNGxq4ox13Ps
8fj92x59q+rmeT4r7UzalsLRz5Qf0vWHizUZF+q31A71S9ttEVPGT9vvAiRc
Lhen+oUGjWmLxaLOsqwuyxIaMiHNKP6KooB2TE6nk3beIkGaV5o6bD0XjXk6
8y3oQ331cDhANwE0v1ZVBe2YULxhbuDDmRsoLimHse2TD3DnBtIYYyJvbqB4
a9dtFKe2fZs7tHaQ5EcUq7f2/ZZQvElzS8wpfjG2LxH6HoRJhu/UoZ0+unti
oA90k6O7lwj6cPYSfcKF/7p7ib7g4l1i6EA7OTFpZzo/j0k74lp+zt0niVE7
U3lmTNqZzs9j0051jj77Fxv5eczaTdUN+TEAwCU/EmPtEg==
     "], {{0, 59}, {79, 
     0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{79, 59},
   PlotRange->{{0, 79}, {0, 59}}]], "Output",
  CellChangeTimes->{3.64402396597793*^9}],
 "."
}], "Text",
 CellChangeTimes->{{3.644023932215582*^9, 3.64402393715665*^9}, {
  3.644023970333269*^9, 3.644023977389259*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "999", "]"}], "=", "111222222222222"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "9999", "]"}], "=", "11112222222222222222"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"f", "[", "n", "]"}], "=", 
    RowBox[{"FixedPoint", "[", 
     RowBox[{
      RowBox[{"a", "\[Function]", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"#", "\[Equal]", "0"}], ",", "a", ",", 
           RowBox[{"a", "+", 
            RowBox[{"Ceiling", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"10", "^", 
                RowBox[{"IntegerLength", "@", "#"}]}], "-", "#"}], ",", "n"}],
              "]"}]}]}], "]"}], "&"}], "@", 
        RowBox[{"FromDigits", "[", 
         RowBox[{
          RowBox[{"IntegerDigits", "@", "a"}], "//.", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"0", "|", "1", "|", "2"}], ",", "d___"}], "}"}], 
           "\[RuleDelayed]", 
           RowBox[{"{", "d", "}"}]}]}], "]"}]}]}], ",", 
      RowBox[{"Ceiling", "[", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{
          RowBox[{"Divisors", "[", "n", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"-", "2"}], "]"}], "]"}], "]"}], ",", "n"}], "]"}]}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "n", "]"}], "/", "n"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "10000"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.64402415333012*^9, 3.644024160872327*^9}, 
   3.644038053448202*^9}],

Cell[BoxData["1111981904675169"], "Output",
 CellChangeTimes->{3.644024150091722*^9, 3.644024495634645*^9, 
  3.644024988337361*^9, 3.644038055048678*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 315 - Digital root clocks", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641690378215371*^9, 3.641690382796176*^9}, {
   3.642720580554666*^9, 3.642720584503579*^9}, {3.644023916582781*^9, 
   3.644023923915225*^9}, {3.651995163213431*^9, 3.651995170396355*^9}}],

Cell[TextData[{
 Cell[BoxData[
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`i3$$ = 1, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {
     "\"min\"" :> {$CellContext`i3$$ = 1}, 
      "\"max\"" :> {$CellContext`i3$$ = 7}}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{{
        Hold[$CellContext`i3$$], 1, ""}, 1, 7, 1}}, Typeset`size$$ = 
     Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True, $CellContext`i3$10740$$ = 0}, 
     PaneBox[
      PanelBox[
       DynamicWrapperBox[GridBox[{
          {
           ItemBox[
            ItemBox[
             TagBox[
              StyleBox[GridBox[{
                 {"\<\"\"\>", 
                  AnimatorBox[Dynamic[$CellContext`i3$$], {1, 7, 1},
                   AnimationRate->Automatic,
                   AnimationRunTime->5.301671981811523,
                   AnimationRunning->False,
                   AnimationTimeIndex->0.30167198181152344`,
                   
                   AppearanceElements->{
                    "ProgressSlider", "PlayPauseButton", 
                    "FasterSlowerButtons", "DirectionButton"},
                   AutoAction->False,
                   DisplayAllSteps->True]}
                },
                AutoDelete->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "ListAnimateLabel",
               StripOnInput->False],
              {"ControlArea", Top}],
             Alignment->{Automatic, Inherited},
             StripOnInput->False],
            Background->None,
            StripOnInput->False]},
          {
           ItemBox[
            TagBox[
             StyleBox[
              PaneBox[
               TagBox[
                PaneSelectorBox[{1->
                 GraphicsBox[
                  TagBox[RasterBox[CompressedData["
1:eJztnX2wZkV951MrRoGZYS4wZGbEGkV3wHEY7rwJYzGUJLiolC4QUVBJzVAD
ggoDkxHUgAsqxlUT0fUtmKy6xkhMVrNasmthYsV1t3DLWuMfMaktrZQpU0WR
IimxqFKxfPZ8+znfM7+n7+k+3eec53Jv8/1Vfe/TfU6fPn1e+nP7/Tz7msOX
X/dvfuVXfuW3n179ufzgbRceOXLwrb95XOX59bcevfaap1SOhyotVmGwcSKT
yWQymUwmk8lkMplMJpPJZDKZTCaTZdgvfvGLyb889KPJP/7tdyb/7/98Y/J/
v/qFybfv/7PJg1/81OSv//SPJv/rz/5w8j///FNO8EP/+8//yPm/cd8fOD/3
+/6//tzHZ/318ZTdRvdf3Tfr/8vP3ut+v/75aXzc7/z1fmyDH6Ifx3/tTz7R
+HkchO3045d+/EKIB34cy33cj23c/8Afz+6HHwrth5vb/HPa43k91u/vt34/
DbwGuz+WTpuWrvT798c+D3vvfX/o+eP9ss/7m5+/17nx/mEf/HDTD9GP9xB+
/Now9Nv9oTAMZ8PHwsX2++kLHW/T47vbrm8e14/76u79Zz8y+atPf9Dt/9Zf
fMYx4LGfPDp5/PHHHRt++ctfNhJbxBaxRWxZKWx5+B9/4OL8228+4PTdv/yS
4wuE8/Ga+MyRLrwHcJMpbQzi/hBj6Lfbm/3VMXY73lP6+a77fruNTOJ+yxi+
+8w3PAfzDfNQ27Hc7zPG8q0tj7btt3Ey7/r7/fgsM3w/j+c2nzH2HH48bef3
02/T03Z/sI/buJ+M8Z+/fVZ8T8gVyxu7ry2P4f20eRB+hmnb74dhnmJetOH9
cH58Q/f76WljTNv1dflzrp9pA2O++on3TP7Hx989+cJ73zz5zFuvmXzq1qvd
tkcefmjy2GOPTX7605865qSyRmwRW8QWsWUebIGhDAS2UGQM6kdIB+TemT/+
mMvzYAmeNfxf+y8fmbKm2g43w7j3p95PVgT3o66D7SYcf5tjkPcr91c/9aHm
XbV+9z7XfoTnOw//Vz/zsZn9Lq/g3DUj/vsnPzz56qc/0uQjuLEPv9jH7ff/
5w+5bawrwY1tzIvcz3zt7+d57H63rUoft8ONbUyHjRPb4ScTQn7EwW1tx7vz
eWGwz6WpPj/cDM/tfa7PPQ8+i09Pn6d9Xo3fPH+48Y7Z96PZV5XfWVdHfoDw
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
5B7C2TQ29R9T/0u5fsYDNxkDvmxd/9TJloXjJ5+4996GM2jvRZ81xt2JLWKL
2CK2zIMttvyCtlyMocE8Jgh9VTiPKyOZOhDYcnhxXWudCXnab/8lS+hHXHw/
LGPwy/oS/HgvXD2pYofljXvH9mxoGEOGNG18FVt43JQnpziBDZZDN9Rl8Btq
RrhtYEHdvkgO4b1v2nvr9ki4WcZv2n1NHcq2/ZIlTV0MebKuMzGPujoCOML9
db5jXoWb52CdjPUsxufzoamnPG/9TBuu5U5zvOGSreuQQ2z7ZXtvqI3XbwNG
3Yp1uIZvps7IayF3WV86VD8Px5sqrOP6dvM8Hf+n/0P4LvD9sv+z8D7hfeP/
Queu2IK84vx1fmMeBEfY7sn8RT/rCbY9lm3Gfv3Dr68wHssQ1q9wTp7bMqHh
RM2Nhjc11xomVW4e28Rv0m6Z5ThUc6ntfEnXX23DfUf9CHx59rrjJs9ce9zk
zjvvdJx54IEHJt/73vdm2nrFFrFFbBFbxmZLM3a3YgzH22BcDfiC+hFZ4jOk
lSPnLA1r22zZRmv7tP0wbX4ew+NtH6Xtr/b7o/Fr23htGB7ftn+mHdhjiO1X
te2xM+3FJj/Zfmzb30s/220Zt+3Ptv3eLq+bPma/nTWW5yke6/dXt7Xxtvnb
3G194qH+dN8/00a91Wtf3xpok69ln5Vt07+mZZxEW7+138freFDXmdraQW14
csVvP7Vc8dtX/ePb+rjb+q1Dcfrna+ujbmvjZbg2TtptXdd/jWEM+ALddNNN
k3vuuWdy3333LakniS1ii9gitozNFlt+4VhkjnEGY8gO3H/WkVjO5D6XflOH
smPw3P7dp87UkaZ1pnVLeGI5wu2WS5Yx/jtEN/liGYRtPnfotv2iS/ymn9vW
kdjWaPlEP/uWGz6dOdsn6zOqjSc271kuzfQLV+Etb9gn7Y9ps3na9jP7fGlj
ih1XZ+NjPctvH7b7bdps2zHT7l+/5a7td2/ajc+a5bvPGP//Tdv/sJn/k3Xe
sX3YPjdsnmNdgf3Fdiya35/s9zezXmLzsu1D9vN/qF88lDbLJ1svs2Ps2jjY
NS4vdv2sI6Ftl4w5cOBAU09iXzXnPYotYovYIraMzRYa6khtjDlSlyGbMTw1
b9Amt2f7mZMzzjjD6fnPf36jnTt3Nr+SJK1OYdwc8rnPTbCgrY4Extx2220z
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
o850w46F6ZzpijHgDfwqv0hSeYquX1ePr6PbnyPQVX5pZcviKU355U27Nqhd
V5IKVKz8MpQtS/qPqnoS+qjx29ZHTYkzklSWYv1HbN+l2MaLuY2npfYfJbBF
XJGkstQ1/mUIW9rKL1xjCn3UljEYt3tQnJGkIpVSfkHdyDIGbbxgzGmJ5Zcu
togrklSWUssvfdgy03902flNGy/WaHj7K86btuvuWJj2Ue9YaNzijCSVpa71
X9jGi2+t2W+UpJRfUtkirkhSWUpZ/6UvW/zxL2jfRf/03Vdd1NSR+I0SW18S
ZySpLMXqSWCLrS/5bbyd5ZdEtogrklSWuuYfDWGL338EzrzzlRc0azQc/Lcn
OIEvaN9134tUO68kFaeudl7Ui2wb79b1T51szug/SmGLuCJJZSll/Ze+bPHL
L+CL66Ou6kpYI5P1IrTtsr6k9hdJKk9d679cdcbxS+pIOeNfUtgirkhSWQpx
hTwZwpYl/UdXXdSs0dDMn/b6qDV/WpLKU8r4F8if45jcf5TAFnFFkspSjCtD
2WLLLxhTB8a4b8TW3yjB+piuj3rxlGPzp6tt4owklaVYPzXXmoL8NTJTyi+p
bBFXJKksxdaVGsqWtvEvaN/FfAH2Uf8W1sWr+6edu9omzkhSWcod/wLGkC+p
41+62CKuSFJZ6jP+JZUtbfOP7DdiWUfCXMdrty84P9zijCSVpVj7S2iNzNT2
l1S2iCuSVJa62l+GsKVt/C7aecEazHE8WM8N4Bg7jLe7brvmOUpSacrpP8ot
v6SyRVyRpLIUG787lC22/II6EepJEPqrbzrvma5Nl31GdKudV5LKU2o7L35f
fPrTs9Z/SWWLuCJJZSmFK33ZsuT7AVfsn6kjkSto27X91eKMJJWl6PzpM9e0
znHcmDH+JYUt4ooklaUYV8CUIWyJrf/i2njrNaZev+PU5hslmucoSeWpa/yL
nS+QO386lS3iiiSVpRhXhrKlbf60XaMBbMHYujfu2dxwBvMdxRlJKktd67+Q
M33G76ayRVyRpLIU4sqBbesHs2VJ+cX7Rkmzxrdp41U7rySVp5Txu6Fv3CeV
XxLYIq5IUlnqan8ZwhZ//C44g/UZOMbudc853ol8gVuckaTylDrOzjImdfxL
KlvEFUkqSzlcyWXLkvXrKr6gnoS+6pkxdtsXjo3f1fp1klScUttf+n7/KIUt
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
Lrnkkslll13mhPNBGKcDHThwQJKkFSzmVeZd5GOUM7hGQ7NeQ8UYO8cxuf2l
gy34Fq24IkllyecKyi7gil3/pS9b2sov/hg7frPRjreD3JoNWL9h8bRjY/C8
sPjFfvoZHrLfn+X4Pfjtcdjmymj1GhHOXZ+P33+zbndcFdamgedjOMZHN+K1
35Gy50i5fow98sc3c00e/E7HJtXfqtsxDQ/Bf21dt3VprH6vxzFnr3X7b9oz
HdOE7Tefu2ly484Ftw/b4Yew7+i+zc1+7IMfOrJ3w+TGc9Y1/recv8n9Hjbb
Di+uc+HefO6pbv+t522Y3LJrGufbLjjd+bEf7rfsO21yZM/Jzg3hGB53x4Vb
3P7bXnCKc7/1hb82uXXPSe739v2b3e+b9y64MPBD8CMMtmE/j0EccN9RnQO/
Nk64cSz8d9Rpsu5mXyW43bHVPm73t9k08RzYZv3++Xk+3BsI96I5trofNh7E
jfsDP+4d7xd0ZPdJk5t3neTuL+LBPjwP3H/4XZi90+dBN8LbZ3nz7lNn3AjD
Z8d3wj5/uw3uN1Tn47uGbe6dq983+Kf55BTndu9xva9v+UVsEVvEFrEF5Re+
g0PYYssvqBOxnxpiHcmukcn+I7vmN7ngr+fAvm3GwfDcxj5vhvO/sWSPobst
Tntu7vPHG5Mlds1PyzSyj8dxW+r18zj/3G5bPT/MppvpcHXOOgy3uTiwrjK3
Vb9gz7V1PNfWfm4DdyBug5s8gh+cgfAOcjveRTKInHFcqvIBGIT3mu88/HDj
/XbuKu8wnDt2sd7mubnvKPIRjrXbdh/z31zvZxj6wRu3vdrm3MyTu6f7uA35
nu6j9T7kbfwerfeTW/jFNpf36zDYRs7gl8dwP9Jg3YwPaWFa3TXXaYUb22/c
WV9vvZ3PgdcIN57FG+r7AMHtnl8djmFseORzxuXc1TM9XB/HY7GN4ZEO/v+Z
+T9VvQ+MC/yw/8f4vxBu1I3oxv9NO8aOfOkqv4gtYovYIraMzRZbfmG9AHOY
pmvinbZkjQaO37U8aPu+Yyo/Ujlkw/txxtKD9KYc46cpdE2x60/hoc9kyxfH
EI8xBw1XeAzDWubYsIdq1hzydL3ZThZdX78zfDe5zfrb3L7/sMlDNj/Rf2Rx
qd/y5GjNB+bbo7uO+Q/XTLLHOH+970jNnRlmmWMbFthj6uN87vlscNe107gt
I3aua8LebPaTB9O8fuz8ljH2ftk0+mF4j63bPgM+O7KAop9MsOEOmWfOd8P6
8X5xG8fW0c1vrr18y/GTreufmlx+EVvEFrFFbBmbLTPll90bj5X56zoE84Vf
7vfX4/XrEH79wYa39Q8bnz3O9/vhbZysA4XS01aP8+tgbWzwxywnX7+f1npt
dPKD/XxNfa1+hvyOFeeRIQz5QTf2XV8fz20s09q6E8q6Pk/aGHJ9YP8SbtR1
Ile/Wjzmd/tQR6jqUGRAU7eq8y7qE6w3sO7j2otN3ma9g3Ul1lFYv2L7rz3e
hbfHmjoSw5NHrAsxDm470lInI19cfarO+0zb4bq+Rv/N9npqP+uTTf0JbeF7
F2b46N8j1/5bh3FMq/yot/IZWDfrtK7OWzMNdVrLHtZ/Z7hU15vs/5TrDYO4
71D9PrDPwYWv+6jxfqJ998WnP72ZH4D1GbYsHB8vv4gtYovYIraMzBZbfrn1
Zbvdt6uvOOOEpi7A/Mb+WeQJuK3fto+yf5futj7qpv/ZC+PHMeM3fdTsh2Yf
M4+3bbk8n62juLbZOv+zP5vHuPN5/eD0I7ztU0+9fp6DfdR4dgzr+qj5Pana
7/q2z1470+9NP/uj2d4Gv+s/tP3ZbP+r2/P4jth2X9euV7vde7hzYaYfE/td
nYR9mvDXfdp4j2+s23tde3Cd59jv6vJFJbjJFbadIs+7fH3ehqbfmmHoR78v
ecF+bPrZX930H9d9zG1hbfy2PZh94XTbYxgntttzsM3Xxoc4cI0Ix/bi5nrq
e2Gv7W0m7ex7Zh+/u191Pzb7od19M37eU/ZRMw4+E/jds6tZ48Khj9njDp4l
ueQ/f453wXuDdmb62baL7Xj3UD/i9+3BFtaPtm5YiJZfxBaxRWwRW8Zmiy2/
fP7373JlHyu05SBO247p5yl/PJyf//zxc5YBtj4W41gsTh7PepUdL8c83Iyx
q7lBTvEa2tLE4xtuWP6kXH/9bXCUL7GN9SNuY/sZWGC56+o9GFtHLlXb8Kyb
Pmn2H1Zhrrfj+M6elmWbMXh1nzTfOcsR9kmz3OzevyrMYfM+urK+YU4z3gv5
zvj5zts8w/ZUl+fQv4uxeqyb1Jxxfci7jvUXcxvrOE2+3HMsj9t9dhwf+5/t
eDn2OYMVd9Tj4Dj+jWFY17Jcstwgc8gbyzRchx0PyP2WP8211tdPznDMXVOH
qu8Tt7l7au5jM35g8dh4AtazON7A1ct2n7pkDJ71+89/2m+9rnln2Efd/J8y
7cCY1wgm+H3T0J7tZzaMueeee5aUX8QWsUVsEVv6sgXzl7rKLz/84Q8nFy1u
dX1PVogT8vnjsyi2f7ll00M3ftu258aX4s+Nry3NobRyn39dVvi/AFk36r7+
9q5j2o51/up9wzpDcOOXfroZjn67H7rSC39Fve0Ksw1tidbt77PHWT/cvlzf
6vPWu19/X8o54L7Si98/3xVeuv3rC12/DRfzt4n32He3xUXZZ2OfN/z+e8R3
DvkfLLBrSlFo38U8ZzIG5Zf7779/8r3vfa8pv4gtYovYIraMzRba4z//2eSR
hx9yZRu01yCujce3C/ug00889ou5Tr4bgpsKbbN+f5t/TMxv02XTkyocE/Lb
uNquv+3cOdeK5xcLF1LbvcC6y86/9riZtDXbu9JZh7NpiqXX99Pt/69aDtnz
+mmfucdru6+h7Zpi/uW4bj/+2PXyOqmZbcwzlfsZa5YeQ/dmL4/4fEFYrNeC
NVqw1sNtt902+cS9904eeOABx5hHHnlk8thPHhVbxBaxRWwZnS1N+eXxx109
6fvf/74LA86gDyrEGamf+D2q5ZD/PvjK4S+EdxFqmBUQw7Upeuza46S1xyXd
x+WU/x7YuhH4gvoR1pYDY+68807HjwcffNCxBIxB267YIraILStAhbHFll9Q
T0I7L/bfd999k5e+aL87xxOdL0vTauZMKmvEmbJYY58/0rbtWc+YWR/Xtu+C
HWAIWIJyC8ovYovYIrasIBXCFtovf/nLyWOPPeb6lNA2gzYalHVQ5nnZv3vx
ZMfW56jeJNYsYY3qS8vDmieaMcj74ArG0pEtPl9YP2L77sMPP+yY4upGYovY
IrasPK1yttjyC9t5WU9CfzU5gzjQhsPvoiBuiOeSJKl8Md/zW0RgguULxtb5
bS9iiyRJXerDFlt++cUvfuHKNOhXQv+S5cx73vMeN36GrGn7LpMkSeXK/2Yi
WAAmgA1gBFhh+6bBEjBFbJEkKaa+bLEGzrCtF+0z5AzKPeh3Qv8T4kN5CHGT
OZIkPTnEfA8GgAXsk2bdCMyw/UZgitgiSVKX+rLFll8cZ37+s4YzaKvBWjGW
NSgPQYgfwpoykiSVLeZ35n/LFjACrGj4UjGEPBFbJEmKaQhbWsswdV0JbTUY
d4eyD1kDYRwN4ofQtiNJUtlifkfeJwfABLCB69TZulGwfiS2SJJkNJQtIc64
uY+GNSgHIU6MAYZwDkmSnhxivgcDwAIwgf3RYEUXX8QWSZLaNJQtKaxBOQhC
vGjPwTkkSXpyCHkeIgfEFkmSxtBYbAmxhvMIEB/6oBC3JElPLiHvgwGcWyS2
SJI0hsZki0wmk8lkMplMJpPJZDKZTCaTyWQymUwmk8lkMplMJpPJZDKZTCaT
rWT7h396dPKsSz49WX/BvUF94LN/04S/+X3fCIbDvjs//q3kuBHvF7/+AxcW
bnuu3HT1vb5Lb/nKzLWlxGkNx/txLl75OXfeMdOAOBDvi679wkzcMtlKtXmx
4jt//88u7IG3f23JORHGZwPCQinpgpDH/vXRny6JO+f6oK9/+0fNtSHv5lgK
V8ZKA55DKk9lspVkyO/gQCwv++UX5IMQk/BLzsTiRv7k/2OYX37JTVff6/M5
x/SkGI5tuxfYhnsxVhrIHoRtY7ZMthJtXqxA+YX74LaGMCnll1C6mLaUOkIs
HltWINt4rV2WypUx0sCyC+6Pfy9lspVueK9z3t1QvQfGvGDbVGzc8LPOhfoN
yyHcZ7mTm64xrs/nXMw++aW/C9ZZeG28T0PSoLKLbLWaZQXeY+R9sqGLFdZ8
VsBY1vHrCf7/babD5qkYw/peX8x8tsUshytD06Cyi2y1W07egsX+x7cxycbN
uhHyYUr5ZYw2zZx4csovsXi7ri01DSq7yFaz2XeZZQvWX7pYYa2t/MI2GMTP
vp62thc/HW3+Ma4vZjn5P/c+9E2Dyi6yEmyllF/wv9r2Oz/Zyy8qu8hWu82z
/AJjGwzbddraXniuWH/SGNcXs5VWflHZRVaKrZTyy9B0hWy1ll94r1R2ka1W
m3f5xbbB2LJMTrqG2Gosv3BcsMoushIsd2xZbIyrH5fvt+WX3Lj6Wk48Of3i
jBf91aG4/PJLThpwjOYDyFaz2Tzgl1+6WBGLyxryCvOM7UtKTdcQS40nZ/xb
Dlf6pAHx4hmo7CIrwTjuPzR30f8fivFybXP72HaLfcwbiNsej/PY9l2E88fT
901X7PpSw+aUFxBvrK5nry03DaF5GLh3KXyWyVaC4f3n+8q2Ep8HlhWx/I59
baxAPyvixP/l0P/8tnTFGJaax+z1xQzXmFpeyOFKbhpYhhnCU5lspRnXU2h7
r5HPbX7p+v+K/Zx72JZv7bxE5LtYvslJV8hyyg6pLGDaYkyy1zZm+cXeX5ls
JZv/zvv5BeUNy4rY/1e2SfrWp/wCi+UxtGeklDdSeZGT/3O4kpOGvvdXJlvN
1tZeGepj4dy/lDmRMMTbtx03p900p+8mNT051zZWH5Z/f2WylWzLwYo+/Ucx
mwcvcuLMvQ9j9WENYbFMthItd7zYGGPy+qYrZKt1/G6b+fdXJlvJNm9W9B2/
G7OcPLYax++OzWKZbKWayi/94lX5RSabPyva5k8PbYNR+UUmK8NUfukXr8ov
Mtl8WZGzfl2Oqfwik5VhpZRfUucuzrP8MkYaVH6RrSabJytyvh+QY7nll7G/
H9Cn/DI0DSq/yFar4X9q6nfTYEPWf/EtFlduukKW++1ExB0ao+9/1y0UFtuQ
Pn9uaGoa5r0mjky2HDYvVuR+v7Ht3KnflYxZ7NuJttzmrx3ny/8WbSpX+qSh
D4tlspVqOd+thyG/hNjANe/Zntv13fiuuHLS1ff6wAoa13YKhbXfN4DBHfrO
vU1bThpy7q9MtpJtXqzA/2+EbWt3YBtMrPzCMkqo/JI6BjgWD/T1b//IhcM1
xtac8dObypWcNAxhsUwmk8lkMplMJpPJZDKZTCaTyWQymUwmk8lkMplMJpPJ
ZDKZTCaTyWQymUwmk8lkMplMJpPJZDKZTCaTyWQymUwmk8lkMplMJpPJZDKZ
TCaTyWQymUwmk8lkMplMJpPJZDKZTCaTyWQymUwmk8lkMplMJpPJZDKZTCaT
yWQymUwmk8lkMplMJpPJZDKZTCaTyWQymUwmk8lksna7+X3fmKy/4N6gvv7t
H82Ev/SWrywJs3jl5yb/8E+PJseLfXd+/FudaUOcz7rk09H0ffJLf9eE/87f
//OSdNi4kM5/ffSnSXHjOoemz8aRk7ace8djUw3Hf+Czf5McNufdyElDarxj
PKc2s+9NW/p4j1LeQXs/x7hnXXG86NovzOVa7L1MScOYeSnXxszruD9f/PoP
XFi4Q+EQRw7n7PPOSUPu/U+13DTErI35bTbG/wEYwo0RT1daU9g41vu+XPGk
Ptex4hnrmacY4sO72HYu//8i0t8WFtsQT2q8vL6ue4H9B97+tejzte9bWzps
2u05u+JOeY9z4shJW86984/tMryf/v+/kKW+G11lKJ8LOe/cGM/JN/y/x7Eh
/tp71HV+hOt7bSFD/g7FAWE/0z7mtaReB99DnnOMZ5T7Do2V18EQxJVyj3Av
czhnrycnDbn3P9Vy0xAyvnMpzzX0PyPn/8BY8SAOXCfKvm2WysaxmLQc8eQ8
17HiGeN/f6rhmSHNXRZ7Z1EPwD4bTyxelqVzrwHnjpXdcE4o5ZyIC2FD73Jq
elLjyElbzr0jq1Pf9Vg62sKmvBtMA99NPy0+F1LjZdxDn1MovbF3menNPX/O
taUY/kfhmYfyyryuZbmfUZ93qG9etxzJuUe5nPOvryvevnkk1XLTEIsnhzkh
6/t/oG88OXmlK54xmLQc8Yx1XTnxzON/f+xcKf/Pcp99Dl9SDfHjuFC7aS7T
hubBnDhyyy/zuo7c8kvOu2HL7kxP7rsRinsoK1PjbPt/Nq/7m2J4zjh/qNw+
r2tZ7mc05jvUlUcsR3Lu0ZB3eV7x5tiY/7+f7OWXMa5/OeIZ67pyyy9j/+/v
cy5rKr8sNZVfJkvSYMcPwK3yyzB7spVfxniHnmzll3mloU88Oabyi8ovQ03l
F5Vfhob10+D//1H5pb89Gcsv1t/nHVL5ZZw09Iknx1R+UfllqKWOWeK1heY6
tPVPh+JlXMtZfuH4nb7jXtssJ46ctOXcO/jnNT4j992w7z23cb5a6rsRinus
9z2UXmtIm///bB7jo1NsSPkF1vdalvsZ9XmH+uZ1nyP2WruuJYdzbdc3drw5
lpuGkGFO1Zj/d4fm7dR4GC40B9DmlTHOt1Limdc7GrJ5/O8PGcbLtc2Jhuwc
RJwvNnYW/z/t2PyueGPjwEPG8dEhQ7yxuQC4d/6cCdzrtvApeRNxpObhnLTl
3Dv85tzHHOakvhtdZSifC4jXlkHh5r2x8cLGeE6+4ZjYe4TzM97c86fesxyL
5RWcH/GG0oc82+dacq5jjGeU+w4hDbH3HmUYm9dtGpBWOzfIsqvrWrAvh3OW
n/OIN8e6eOUzvCuu1PlPoTktuf8HhsaD/XzPuvJK17WPwaQx4xnjuea+oyGb
x//+kJHloXPxHe36P2mZnxNvjuGYWLmt65w55ZeUOeo55ZectOVeR26ZJJV9
SAPrqrFniPN35Z9Y+YVzZxkvwvJdG+M5+Zab3+EPnR950YZNvWc51pXWGJOR
ntTyi38vY+/g2M9o6DvkG9ITK+Pb55BTXrX3k+dJed4p/zvbriHl/qfaE1F+
6fpflpMfxrgfsbzsP9u+8fhMCFnXu5YaT5f5/5uXIz1jv7shS+1PyK0fMd4u
LuVYSv9R6FpWQv9RatrmeR057dI57Y6570ZO/9jQ59R1Dt+G3KMnov8o9d7P
q716rLw0z3dorHuUk46260P+xbMcY655n/Unxnjvc/qP5tEP5ttY73Vq/1GX
LXd/TZeN1S82RnrG5vm8x5+xzDHGWgYav7s6xu9aG3vuyBg21ji15Zj3+kSN
343Zcueleb5Dyz1+l20ROWPWuq4v1cZ678fi3lg2xpjQnOsfK56xnsdqSs9q
m39k+waGlmFUflH5ZQxT+UXll1Dc8y6/4Jfp61uGUfll1lR+WT3pWW3lF9hY
ZRiVX1R+GcNUflH5JRT3cpRfbBr7lGFUfpk1lV9WT3pWY/kFNkYZZuzyy5A2
3Nw4Vmv5Jef7ATnvRs73EYY+p7b0huIco/wy5rrvY5dfxriX88pL83yHxrhH
Q553Wxr6lmGGlF/GeO9zyy9jfwfBt9Vcfhnjeaym9DxR67/A0HeL8Di/Fbb5
8xnb4h1ahuGY5lj5JXVMH8da+9dCpeTNnDhy0tZnfGtojD/i8dMReo6Q/S5c
7Dtctgzkp8k3/3pyvu+Ve49TymaxOP3vlOGdHuu7e33qoTh/Svkl5d7n3Eu4
5/GMQjbPd2ise8Rwds7M0DwSKsPk3P95vPcxy/l+4xjfM4Xl3I++lvq/MJcJ
IRvreYx1XWOlZzmeFS31m+EwlBva/k8irX56QvGyDIP7kLuGAc4R+6Z47Fp4
Xp5zjG+X58SRk7acsPiNzVH0OcP5D6Gw9rnEvoMOcR2oPt+fDsXpf1895x6n
cjznO/G535RPvWc5hmcSOi7n3ue+r/N4RiGb9zuUGjfLGaH/t22cG5pHmB/7
Xt883vsuS537PFZ+yLkffS31f+FY93HM57GSrms5npVMVpotR1+7TCaTyWQy
2Zim8otMJpPJZLLVZqnrf8tkMplMJpPJZDKZTCaTyWQymUwmk8lkMplMJpPJ
ZDKZTCaTyWQymUwmk8lkMplMJpPJZDKZTCaTyWQymUwmk8lkMplMJpPJZDKZ
TCaTyWQy2XLa/wcuA9u3
                    "], {{0, 232}, {560, 0}}, {0, 255},
                    ColorFunction->RGBColor],
                   BoxForm`ImageTag[
                   "Byte", ColorSpace -> "RGB", Interleaving -> True],
                   Selectable->False],
                  BaseStyle->"ImageGraphics",
                  ImageSizeRaw->{560, 232},
                  PlotRange->{{0, 560}, {0, 232}}], 2->
                 GraphicsBox[
                  TagBox[RasterBox[CompressedData["
1:eJztnX3QJVV951MrSQRmhnmGGcIg1ER0B8QB5h3GYijZ6GKc0gUiCYSQmqEG
BBUGxhHUgAtREtcYJFkTDSYbXWNCTFZjrLBrYWLFzW6RLWsT/4ixtkylTJkq
ihRJSYoqEyzv9vfc/vb87nn65Zzuvt33nuf7q/o9t0+/nD59Xj7P77y/9JZj
1932b77v+77v7S/O/lx35L6rjh8/8q4fOyVz/Lt3nbj1lhdlB09nujO7Bycn
EolEIpFIJBKJRCKRSCQSiUQikUgkEkmEfPe7353849PfmvzdX/3F5P/9ny9P
/u8XPjP5yhO/N3nqsx+f/Onv/sbkf/3er0/+5+9/3Cnc0P/9+7/h3F9+/Nec
m9d995/+zkdn3fnzVHuOx3/y+Kz7jz/1mPv90qen/vG6c+fXcQ5uKN14/ou/
/bHCzeegOE83funGLxT+wI1neY3XcY7Xn/yt2etwQ6uu45jn/Hfa5/k91u1f
t24/DPwGe70unDYsTeH348emh417312V/shfNr3/7NOPuWPkP1yDG8d0Q+lG
PoQbv/Yeuu31qnt4n72/7r666374qp634fGPy75vHt+PeHVx/6lfmfzJJ37J
Xf/zP/ikY8Dz//zc5IUXXnBs+N73vleo2CK2iC1iy6Kw5Zm/+xvn51/92ZNO
v/rHf+j4AsX7+E1Mc4QL+QDHZEoZg3i9ijF02/PF9ewZex75lG7mdd9tz5FJ
vG4Zw7zPcsN3sNywDJU9y+s+Yyzfyspo2XXrJ8uuf933zzLDd/N5nvMZY9/h
+1P2fj/8Njxl8YNrPMfrZIyf/jatmE/IFcsbe62sjCF/2jIIN+8pu+7fwzLF
smjv9+/z/et63Q9PGWPKvq/JHfP9DBsY84WPvX/yPz76c5PPfOAdk0++65bJ
x++92Z179pmnJ88///zkO9/5jmNOKGvEFrFFbBFb5sEWCGwgsIVKxqB+hHBA
XZ75rY+4Mg+WIK3h/uJ//ZUpa7LzOOY9Lv/k18mKyuuo6+C8uY+/xTMo+9nx
Fz7+y0VetW6Xn3M37meeh/sLn/zIzHVXVvDunBH//Tc/PPnCJ36lKEc4xjX8
4hrPP/FfftmdY10JxzjHssjrLNf+db7HXnfnsvDxPI5xjuGwfuI83GRClRt+
8FzZ8+593j245sKUvx/HvJ/n23yfSw+mxSem6WnTq3Cb9Mcx8pjNH8W1zH5n
XR3lAYr858oH7jNu3gO//Ov+PbgGN/Oyvb84n99XlMeK6354ap/P7+f/Z77f
hSt/3g+//37f3er78/OIX8sY8OVjb7tu8oEf2zd53xt3OS48++yzwawRW8QW
sUVsmQdbHF++/Y/uObIFv6wb4Z0uj2TvfeKj7598/pfeM/n8h983eeIjP+cU
7s9+6D9Or2XncfwHv/yz0+u/+j537K5nbh7zHtz/uQ/9zOR3P/iAc/Mc76N/
1k/8uvs//HBxnW4o3XyG9/Md+P3t//Qzxbn/9ktTP3gOfnz6kYecG9d4P8/D
jV9cs+dwzPt5nW7fX3sP3FD6g3P2mM/zfhs2Gz666R+fgX7y595Z3INfuqvu
oZ98F8/TXfV9dPNaU/zYtGE6++lvj20ec/krc//Rhx9yeRDlAeryZ6Y4j/xn
z/EYeQ7XoTiH+3CO91g/eYwyh/twTH9xjv6wTNr3+tf5fFnY/PDw2J63flj/
7ffTzWdivh/Ke8AW/D7+s3cWjAFf7t59xuSuvVsmf/aFz0+efvrpybe//W3H
mirOiC1ii9gitsyDLZAX/vVfHE+gtl4EewlhwDt+/Z4bnX746I9OPnDTj0we
vfmqyS8ePjTVG6+YPHz9QXeMaz//pldN3dl5uB++7sDkvdfsmzz841e58wgn
3A9dc6Bw339or/vlOfy6Z8zxe990pfMPv+6+G18z9T+7B4rjD9z8Once78Ix
FOFy5zLlMfx430+9zj3jwo3nEL78HlyjH7wfxzj/0LVXTN5z/VWFn/dnbiiO
cR7fAjfvg/ve1+9x597zxssn77h6p3ND6abyPl63x7jX+ZefwzHd9+fvQvhs
eNx35OHidT7D8zjH56zbv59+3R/4/Xwnwo3wPpTf574L92TqzmW/7776UveL
e5m+OPbzgkvjPI8x7ZjP/vOR17r8ibwJxfGvvvkNk4/c9vri2q/d8cbiHvzy
HO7DPVC4+Yw9j2M+S//o/tBPHnTHOI/wwM374P6FHz9Q3Id6BtxQuqm8zz7D
Y9wL/3iu7HsZbl6L/X64wRKeQ5mHGwp/fvZ1F07uuHj95OYL1k3uuvy8yVNP
PTX55je/WdSXwBLLGbFFbBFbxJZ5sIWCcXRo92F/Fdp7YBvBX3zLA1dtm9yz
e2VyfN+WyZ2XbnDvsHrbjvWToxetmzmG4ti/DuU1d/2SleJ61bkjF55eKP3G
N9KNX99NveXC9TPn3nzJ5sJ9646Vqe7e6n7pB46dn9tPL36dXjB97w0vP23y
k9vXOcV5uKE8vv7804pzVJz7aXNcPJP7Rz/tOd6HXyrvvfalp85c993+Mzee
P71+8ys2Fve48GfuIxdvcb+817/Hf7fvN36ve/nq6/abGD9Q9948Lm/Zsb44
Zhox/pmehy/aWBxX5S8e37lrw+QtO6eKY9jzx/ducr/Qdx44a/KOfVle3nPG
5N7Ltzh995Xnul+cg9p78Ivn4Bev47jw27h5zHfzHnud9/BZvsdef8dlm2fO
8Xnrn/0+ex3385z/Dv/bKr//iq0uDLgPZR8KtsAGwHXkjzdsO3Xy2nNfPHnw
7W91nPnGN74xeeaZZ2bqSmKL2CK2iC3zYgsEx2i7ZfsP2npQJ4LNiXehLYds
AF/IGHe8a8qdYzun508cOMed43U8O/N8dg1a5If8HuYT3ve23ebczjNn81Tm
xi/YQR7h2OZByxyqy8fbZ4+p5EjBjfy6PWbZt8+6vJ+VT/p5dOdZ7hyfO7Jj
k1M+j2ssvz/1slOn786usxySWTiH6yzv4APLKfywTLI8guI5yxyr9pw9tpzy
7yGbcGwZwvhAWBkWx6o8PEX85N/nrmfHRfzk8Y448/9H4Bz/DyB9bdoib5Az
03K2UuQVljv84pxlDY/9MlnGBp8LPiOKspuVQ5ZZKMoqmYRflFtc5zNw4xlb
9u31snMs+7zOawiPe2/uH8OHcz6TyjgY8/3FuzMe4B78PwFf9p31A5PX7Nw+
+fznP19whnUlziMQW8QWsUVs6Zst1n4BU6Dok4KiXQf2EJjh4g02276pLYVz
rC/hmFyB4tjVo/JjKllT3J/zCefuvmxrkU+Qf6A4h7yFc45BOL7k5P3MZzjm
vXC/de85U3fOIfqH87dedMa0npblX9rgcINPqDfxHI7v2HO2u++W3M+j+TPO
H9SnMr9QXnD+jpwrzrbPrrEcuWcyN/ziObhxHuWJ5c+5XzEtdzjHZwsm5uXW
lcHs2L0j+2WZ5vO8bv1z/MuVHOPxTD0tv5/H9hl+E87bd/v38X2OozlvXVyZ
OCncF045yu9hPQlxj3OIM8S3S6/8GIq0RLsi/y8hreG2+c/mQZRPuFE2WE+y
xydsvSGvl+AY+Zz1BNQP3vWqH3LncczyADfuIVfIGPqFY9YvcA5hKZ43/LH1
E+dnfo51lKK+gndmx84/nMvfx+ftO8k93GfDWNR/TP0v5PvpD47JGPBl+8bv
n2xbOXXyscceKziD9l70WWPcndgitogtYss82GLtF7TlYgwN5jFB0VeF9zgb
ydSBwJZjOzeU1plQpv32X7KEbvjF/GEZg1/Wl+BGvnD1pIwdljcuj+3dUjCG
DCna+DK28LkpT850CjZYDt2R2+B35Ixw58CCvH2RHEK+L9p78/ZIHNPGL9p9
TR3Ktv2SJUVdDGUyrzOxjLo6AjjC63m5Y1nFMd/BOhnrWfTP50NRT3nFxpk2
XMud4nnDJVvXIYfY9sv23qo2Xr8NGHUr1uEKvpk6I7+F3GV96WieHo432b2O
6ztMejr+T/+HMC8wf9n/WchPyG/8X+iOM7agrDh3Xt5YBsERtnuyfNHNeoJt
j2WbsV//8Osr9McyhPUrvJPvtkwoOJFzo+BNzrWCSdkxny38N2G3zHIcyrlU
9r6g78/OId5RPwJfXrrhlMl560+ZPPjgg44zTz755ORrX/vaTFuv2CK2iC1i
S99sKcbuZozheBuMqwFfUD8iS3yGlHLk0tX32jZbttHaPm3/njI3n+Hzto/S
9lf7/dH4tW289h4+X3Z9ph3YY4jtV7XtsTPtxaY82X5s299LN9tt6bftz7b9
3q6smz5mv521rsxT+azfX13WxlvmLjsu6xOv6k/33TNt1Nu99vXtFW3yudq0
sm36t5SMkyjrt/b7eB0P8jpTWTuovZ9c8dtPLVf89lX/+bI+7rJ+6yo//feV
9VGXtfHyvjJO2nNN33+LYQz4Ar3rrrsmjz766OTxxx9fVU8SW8QWsUVs6Zst
1n7hWGSOcQZjyA7EP+tItDN5zYXf1KHsGDx3fc/mmTrStM60YRVPLEd43nLJ
MsbPQzwmXyyDcM7nDo9tv+gqt+nntnUktjVaPtHNvuWCTxfM9sn6jCrjiS17
lksz/cLZ/ZY37JP2x7TZMm37mX2+lDHFjquz/rGe5bcP2+s2bLbtmGH3v99y
1/a7F+3GF87y3WeM//+m7H/YzP/JvOzYPmyfG7bMsa7A/mI7Fs3vT/b7m1kv
sWXZ9iH75b+qX7wqbJZPtl5mx9iVcbBpXF7d97OOhLZdMubw4cNFPYl91Zz3
KLaILWKL2NI3WyioI5Ux5nhuQxZjeHLeoE1u744LJueff77TV77ylYXu2rWr
+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
9V86sKVq/Re7x5rWr1M5Udwtng5pv6B9t9hjLeMN23jPOT3cfglhi7ii8qG4
G18H6T/K7ZYubKlb/6XYY+2iM4o91thfLc6onCju0oq/unF2GGOLvmn2V6Ou
FDP+JZQt4orKh+JufB3CfnE86ciW0v6jjDNle9yzjiTOqJwo7sbXweyXfFwd
60t2jkCo/RLKFnFF5UNxN74O1f7SlS2h+zeyfxrja9RPrXKiuBtfF2X9l5jx
u01sEVdUPhR34+tQ41+6sqVu/RfUmdC+C3VzHLleg/qPVE4Ud6PrUPYL+qeL
OY6v2Niq/yiULeKKyofibnwdpP9ox6bObGla/4VtvBxjp/2PVE4Ud4uhg/Yf
Zaxhey9Y08f6L2VsEVdUPhR34+tg6790ZEvd+i9lbbyaP61yorhbDB1r/Rfb
xku+xK7/UsUWcUXlQ3E3vo61/kssW0L3b0Tbrt1vTZxROVHcpRV/de0vnOMI
LVvju+36Lz5bxBWVD8Xd+Drk+N0ubKla/4V7lIAtnCNg1/sWZ1ROFHdpxV9d
Oy/KPzjD/uqij3r9KdHrv9SxRVxR+VDcja9D2C9uzEtHttSt/+L2WNuxsmqM
nfY/OqmHVlYWrpwgTI+0yH9D6FPm+8WYbnrTpk2D2C/on8Yea2BBX+u/VLFF
XJktx4tWPsSWtaF9sqWKK27cW0e2hPYfaf+Aan1qAcrJ/pwrsWEZQ8FAhPm8
TMWY9npez3mvtp33gnVFPzV+2cbbdf8Any3iyqyKLWLLGNonW5r6j7qwpWr8
LnhjGWPH2Gn8y6zG2vp9vXf7lhX37s9t3jw6N2IULOQ3xNblxk7rRdM+46+J
M+RLm/EvoWwRV2ZVbBFbxtK+4q+KK44lHdnStP6LW+N7x0rRxgs31vsWZ2bL
+lDlBHYx2vYWtQ03RGHXn5d/T2wb+dhpvWjaZ/xVccYxYPfWyS071rv2XZR/
8IZ91Kwnxa7/UsYWcWVWxRaxZSztK/7quNKVLU3rv3CMHX+5XoM4M6uh9ZSn
OpQTsGUZ2nBDFN/C74r5prHTeRE1NP6a8l7l+JcLT3f2hVuvIVP0Wds+ajAG
Grv+SxlbxJXVKraILWNpH2yp4gpslq5sqVv/paqNV+NfVmvoeCfbvhmr+1uM
51tUBZP5XaH1vS5xl7KG9jE0xV/o+Be7Ryz50mS/hLJFXFmtYovYMpb2wZam
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
O2vVGg0cv2t5ULa/Yyg/Qjlk7/f9rAsPwhvyjB+mqm+q+/4QHvpMtnxxDPEY
c8Rwhc/wXssce+/RnDVHPb3dnCeLbs/zDPMmz1l32bHvPmbKkC1PdB/fudpt
eXIi5wPL7YndJ93HcibZZ5w7v3Y8584Ms8yzBQvsM/lzPvd8Nrjv2mWOLSN2
bSjuvdtcJw+mZf3k+y1jbHzZMPr3MI7tsU0Dph1ZQKWbTLD3HTVpzrxh3chf
PMexdTzmnmtv2HbqZPvG7w+2X8QWsUVsEVv6ZsuM/bLn7JM2f16HYLnw7X5/
PV6/DuHXH+z9tv5h/bPP+W7/fusn60BV4Smrx/l1sDI2+GOWg7/fD2u+Njr5
wX6+or6WpyH3seI8MtxDfvAY127Pn+c52rS27gRb1+dJGUNur7i+iht5ncjV
r3aedLtrqCNkdSgyoKhb5WUX9QnWG1j3ce3Fpmyz3sG6EusorF+x/dc+7+63
z5o6Eu8nj1gXoh88d7ykTka+uPpUXvYZtmN5fY3uu+335G7WJ4v6E9rC963M
8NGPI9f+m9/jmJa5UW9lGthj1mldnTdnGuq0lj2s/85wKa832f8ptxsG8drR
PD+wz8Hdn/dRI3+iffe15764mB+A9Rm2rZxab7+ILWKL2CK29MwWa7/c+/o9
bu/q688/ragLsLyxfxZlAsfWbdtH2b/L47I+6qL/2bvH92PGbfqo2Q/NPmY+
b9ty+T5bR3Fts3n5Z382n3Hv8/rB6cb9tk899Pv5DvZRI+14r+uj5n5Sudv1
bV+8fqbfm272R7O9DW7Xf2j7s9n+l7fnMY/Ydl/Xrpcfu3y4a2WmHxPXXZ2E
fZpw533ayMd35u29rj04L3Psd3XlIlMckytsO0WZd+X68i1FvzXvoRv9vuQF
+7HpZn910X+c9zGX3Wv9t+3B7AvnsX2GfuK8fQfbfK1/8APfiPvYXlx8Tx4X
9tvebcLOvmf28bv4yvux2Q/t4s24Gafso6YfTBO4XdrlrHH3oY/Z4w7Sklzy
05/jXZBv0M5MN9t2cR55D/Uj7m8PtrB+tH3LSq39IraILWKL2NI3W6z98ulH
HnK2j1W05cBP247plyl/PJxf/vzxc5YBtj5Wx7E6P/k861V2vBzLcDHGLucG
OcVvKAsTny+4YfkT8v353uCwL3GO9SOeY/sZWGC56+o9GFtHLmXnkNZFnzT7
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
37h7cVx1H/yI4ZxN75gwxMZ/qMSGoU7KmF8mffwfgOC+PvxpCmsIG/vK70P5
E5quffnTV5qHCPxDXix7l/9/EeEvuxfn4E+ov/y+prjA9cPv+WJt+tr8VhYO
G3b7zia/Q/JxjB8xYYuJO//ZJkH+9P//VUlo3miyoXwuxOS5PtLJF/y/x7NV
/LVx1PR+3Nf226oE5bvKDyiuM+x9fkvodzAf8p19pFFsHuqrrIMh8CskjhCX
MZyz3xMThtj4D5XYMFQJ81xIulb9z4j5P9CXP/AD3wnbt0xC2dgXk4bwJyZd
+/Knj//9oYI0Q5ibpC7Poh6Aa9afOn9pS8d+A95dZ7vhndCQd8Iv3FuVl0PD
E+pHTNhi4o6sDs3rdeEouzckbzAMzJt+WHwuhPpLv7umU1V46/Iywxv7/phv
CxH8j0KaV5WVeX3L0GnUJg+1LeuWIzFxFMs5//ua/G1bRkIlNgx1/sQwp0ra
/h9o609MWWnypw8mDeFPX98V4888/vfXvSvk/1ls2sfwJVTgP56rajeNZVrX
MhjjR6z9Mq/viLVfYvKGtd0Znti8UeV3V1aG+ln2/2xe8RsiSGe8v8pun9e3
DJ1GfeahpjJiORITR13y8rz8jZE+/3+vdfulj+8fwp++vivWfun7f3+bd1mR
/bJaZL9MVoXBjh/AseyXbrLW7Jc+8tBas1/mFYY2/sSI7BfZL11F9ovsl673
+mHw///Ifmkva9F+se42eUj2Sz9haONPjMh+kf3SVULHLPHbquY6lPVPV/lL
v4a0Xzh+p+241zKJ8SMmbDFxB/e8xmfE5g2b73mO89VC80aV333l96rwWkHY
/P9n8xgfHSJd7BdI228ZOo3a5KG2Zd3niP3Wpm+J4VzZ9/Xtb4zEhqFKMKeq
z/+7Xct2qD+8r2oOoC0rfbxvUfyZVx6tknn8768SjJcrmxMNtXMQ8b66sbP4
/2nH5jf5WzcOvEo4PrpK4G/dXADEnT9nAnFddn9I2YQfoWU4JmwxcYffmHiM
YU5o3miyoXwuwF9rg+KYcWP9hfSRTr7gmbp8hPfT39j3h8ZZjNSVFbwf/laF
D2W2zbfEfEcfaRSbhxCGunwPG8aWdRsGhNXODbLsavoWXIvhnOXnPPyNkSZe
+Qxv8it0/lPVnJbY/wNd/cF15rOmstL07X0wqU9/+kjX2DxaJfP4318lZHnV
u5hHm/5PWubH+BsjeKbObmt6Z4z9EjJHPcZ+iQlb7HfE2iSh7EMYWFetS0O8
v6n81NkvnDtLf3Ev81of6eRLbHmHu+r9KIv23tA4i5GmsNYxGeEJtV/8uKzL
g32nUdc85AvCU2fj23SIsVdtfPI9Iekd8r+z7BtC4j9UxrBfmv6XxZSHPuKj
riz7advWH58JVdKU10L9aRL/f/MQ4ek771ZJaH9CbP2I/jZxKUZC+o+qvmUR
+o9CwzbP74hpl45pd4zNGzH9Y13TqekdvnSJozH6j0Ljfl7t1X2VpXnmob7i
KCYcZd+H8ou07GOueZv1J/rI9zH9R/PoB/Olr3wd2n/UJEP31zRJX/1ifYSn
b57Pe/wZbY4+1jLQ+N3lGL9rpe+5I31IX+PUhpj3Otb43ToZuizNMw8NPX6X
bRExY9aavi9U+sr3fXGvL+ljTGjM9/flT1/psUzhWbb5R7ZvoKsNI/tF9ksf
IvtF9kuV3/O2X/DL8LW1YWS/zIrsl+UJz7LZL5C+bBjZL7Jf+hDZL7Jfqvwe
wn6xYWxjw8h+mRXZL8sTnmW0XyB92DB92y9d2nBj/VhW+yVm/4CYvBGzP0LX
dCoLb5Wffdgvfa773rf90kdczqsszTMP9RFHXdK7LAxtbZgu9ksf+T7Wful7
HwRfltl+6SM9lik8Y63/AkHfLe7H+63inD+fsczfrjYMxzTX2S+hY/o41tr/
FmpI2YzxIyZsbca3Vo3xhz9+OKrSEWr3havbh8vaQH6YfPG/J2Z/r9g4DrHN
6vz09ylDnu5r37029VC8P8R+CYn7mLjE8TzSqErmmYf6iiPeZ+fMdC0jVTZM
TPzPI9/XScz+jX3sZwqJiY+2Evq/MJYJVdJXevT1XX2FZ4i0ooTuGQ6B3VD2
fxJh9cNT5S9tGMRD7BoGeEfdnuJ138L38p197F0e40dM2GLuxW/dHEWfM5z/
UHWvTZe6fdChXAeqzf7TVX76+6vHxHEox2P2iY/dUz40zmIEaVL1XEzcx+bX
eaRRlcw7D4X6TTuj6v9tGee6lhGWx7bfN4983yShc5/7Kg8x8dFWQv8X9hWP
fabHIn3XEGklkaQmQ/S1SyQSiUQikfQpsl8kEolEIpEsm4Su/y2RSCQSiUQi
kUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgk
EolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJEPK/wdvIceX
                    "], {{0, 
                    232}, {560, 0}}, {0, 255},
                    ColorFunction->RGBColor],
                   BoxForm`ImageTag[
                   "Byte", ColorSpace -> "RGB", Interleaving -> True],
                   Selectable->False],
                  BaseStyle->"ImageGraphics",
                  ImageSizeRaw->{560, 232},
                  PlotRange->{{0, 560}, {0, 232}}], 3->
                 GraphicsBox[
                  TagBox[RasterBox[CompressedData["
1:eJztnX/QJVdZ560lKklmJvNOZuLMkNRIYCdhmEze+ZVkqCRFFDbIFGwSiSbG
WDOpSUiAZCbDkAAmbCIEERGii4JBV1hEI7ogUmaXCkrJulvjFrXKHyK1hWVh
YVUqVrSIlSo0FHfv99z+9vvc8/aPc7r79u173u9T9by3f5w+ffrpcz7vc372
i287fsMd/+77vu/73vrC8Z8bjt5/zcmTR9/x42eMd37kHaduv+0F442nxro8
DoODI4lEIpFIJBKJRCKRSCQSiUQikUgkEokkQr773e+O/umpb43+/q//cvT/
/s+XR//3C58ZfeWJ3x+d/uzHR3/2e785+l+//xuj//kHH3eKfej//oPfdPtf
fvzX3T7P+/t/9rsfnd7PrqfaY9z+08en9//kU4+53y99ehIfz7v97DyOYR/K
fVz/xd/5WL7P66A4zn38ch+/UMSDfVzLczyPYzz/5G9Pn8c+tOw8tnnMv6e9
ns9j9/3zdt9PA5/Bnq9Kp01LXfp9+9j3YW3v75e9f+Qv+77//NOPuW3kP5zD
Pra5D+U+8iH28WvDcN+eLwvDcDZ8Vbiq8376yq636fG3i55vFs8Puzrbf+pX
R3/6iV925//iDz/pGPDcvzw7ev755x0bvve97+UqtogtYovYMhS2PP33f+vi
/Os/f9LpV//kjxxfoLgfn4nvHOlCPsA2mVLEIJ4vYwz37fH8/Pgaexz5lPvM
6/6+PUYm8bxlDPM+yw3vwXLDMlR0Lc/7jLF8KyqjRedtnCy7/nk/PssMf5/X
85jPGHsPP56i+/vpt+kpsg/O8RjPkzH++7fvivmEXLG8seeKyhjypy2D2GeY
ovN+GJYplkUb3g/nx9f2vJ+eIsYUPV/dfszzM21gzBc+9r7R//joe0efef/b
Rp98x22jj993qzv2zNNPjZ577rnRd77zHcecUNaILWKL2CK2zIItEPhAYAuV
jEH9COmAujzz2x9xZR4swbvG/hf/669OWDM+jm2GcfknO09WlJ5HXQfHTTj+
5teg7I+3v/DxX8nzqt13+TnbR3jmeex/4ZMfmTrvygrunTHiv//Wh0df+MSv
5uUI2ziHX5zj8Sf+y6+4Y6wrYRvHWBZ5nuXaP8/72PPu2Dh9PI5tHGM6bJw4
jn0yoWwfcfBY0fXufl4YnHNpyu6PbYbn8SbP594H38UnJu/Tvq9837x/bCOP
2fyRnxv776yrozxAkf9c+UA4s88wiMs/74fBOewzL9vw+fEsXF4eS8776am8
PgvP/8+8v0tXdr2ffv/+/n6j58+Ow76WMeDLx95yw+j9P35w9J7X73VceOaZ
Z4JZI7aILWKL2DILtji+fPuf3HVkC35ZN8I9XR4Z3/eJj75v9Plfftfo8x9+
z+iJj7zXKfY/+6H/NDk3Po7tP/yVn5uc/7X3uG13frzPbYZB+M996GdHv/eB
B90+jzEc47Nx4teF//Aj+XnuQ7nPaxie98Dv7/zCz+bH/tsvT+LgMcTx6Q8+
7PZxjuF5HPv4xTl7DNsMz/Pc9+O1YbAPZTw4Zrd5PcPbtNn0cZ/x8RroJ9/7
9jwMfrlfFoZx8l48zv2y5+M+z9XZx74bvmf//dttm8dc/hrv//GHH3Z5EOUB
6vLnWHEc+c8e4zbyHM5DcQzhcIxhbJzcRplDOGwzXhxjPCyT9r7+eV5flDY/
Pdy2x20cNn77/NznNTHPD2UYsAW/j//c3TljwJcT+84Z3XNgy+jPv/D50VNP
PTX69re/7VhTxhmxRWwRW8SWWbAF8vy//avjCdTWi+AvIQ24x2/ce7PTDx/7
sdH7b/nR0aO3XjP6pSOHJ3rzlaNHbrzKbePcz7/hFZP98XHsP3LDodG7rzs4
euQnrnHHkU7sP3zdoXz/gcMH3C+P4dddY7bf/YarXXz4deFuftUk/nEYKLbf
f+tr3HHcC9tQpMsdGyu3Ecd7fvo17hqXblyH9GVhcI5xMDy2cfzh668cvevG
a/I4HxjvQ7GN43gW7DMc9u977X537F2vv2L0tmuX3T6U+1SG43m7jbAuvuwY
trn/QHYvpM+mxz1Hli6e5zU8jmO8zu774RnXA4HPz3si3Ujvw1k491wIM1Z3
bPz7zmsvdb8Iy/eLbT8vuHec5TG+O+az/3z01S5/Im9Csf1rb3zd6CN3vDY/
9+t3vT4Pg18eQziEgWKf19jj2Oa1jI/7H/qpq9w2jiM92Gc47P/iTxzKw6Ge
gX0o96kMZ6/hNsIiPh4rel6mm+dinx/7YAmPocxjH4p4fu41F4/uumT96NaL
1o3uueKC0enTp0ff/OY38/oSWGI5I7aILWKL2DILtlAwjg7tPuyvQnsPfCPE
i2d58Jodo3v3LY1OHtwyuvvSDe4eVu/YvX50bNe6qW0otv3zUJ5z5/cs5efL
jh29+OxcGTeekfv49fept128furYG/dszvdv37000X3b3C/jwLaLc+fZ+a/T
iyb3vemlZ41+auc6pziOfSi3b7zwrPwYFcd+xmzn12TxMU57jOHwS2XY6198
5tR5f9+/5uYLJ+dvfdnGPIxL/3j/6CVb3C/D+mH8e/tx4/eGl64+b5+J9oG6
+2a2vG33+nyb74j25/s8smtjvl2Wv7h9994NozctTxTb8OdPHtjkfqFvP3Te
6G0Hx3l5/zmj+67Y4vSdV5/vfnEMasPgF9chLp7Hdh632ec2780w9jzD8Fre
x55/2+Wbp47xehuffT57HuF5zL+H/2ylz3/lNpcGhEPZh4It8AFwHvnjdTvO
HL36/BeOHnrrmx1nvvGNb4yefvrpqbqS2CK2iC1iy6zYAsE22m7Z/oO2HtSJ
4HPiXmjLIRvAFzLGbe+dcOf48uT4qUPb3TGex7VT14/PQfP8kIVhPmG4t+wz
x5bPnc5T4338gh3kEbZtHrTMobp8vHN6m0qO5NzIztttln17rcv74/LJOI8t
n+eO8bqjuzc55fU4x/L70y85c3Lv8XmWQzILx3Ce5R18YDlFHJZJlkdQXGeZ
Y9Ues9uWU34YsgnbliG0B9LKtDhWZenJ7ZM9nzs/3s7tk9kdNvP/R+AY/w/g
/dp3i7xBzkzK2VKeV1ju8ItjljXc9stkERt8LviMyMvuuByyzEJRVskk/KLc
4jyvwT6usWXfni86xrLP8zyH9Lj7ZvExfTjmM6mIgzHPn997zAOEwf8T8OXg
eT8wetXyztHnP//5nDOsK3EegdgitogtYkvXbLH+C5gCRZ8UFO068IfADGc3
+GwHJ74UjrG+hG1yBYptV4/KtqlkTR4+4xOOnbh8W55PkH+gOIa8hWOOQdje
sxKe+QzbDIv9Nx/YPtnPOMT4cPz2XedM6mnj/EsfHPvgE+pNPIbtu/ZvdeFu
y+I8ll3j4kF9ahwXyguO35Vxxfn243MsR+6a8T7i4jHs4zjKE8uf23/ZpNzh
GK/NmZiVW1cGx9vuHuNflmlez/M2Pse/TMkxbk/V07Lw3LbX8Jlw3N7bD8f7
OY5mvHW2MjbJ9y+ecJTPw3oSbI9jsBns7d5Xtg3Fu0S7Iv8v4V1j3+Y/mwdR
PrGPssF6kt0+ZesNWb0E28jnrCegfvCOV/yQO45tlgfsIwy5QsYwLmyzfoFj
SEt+veGPrZ+4OLNjrKPk9RXcc7zt4sOx7H683t6T3EM4m8a8/mPqfyHPz3iw
TcaALzs3fv9ox9KZo4899ljOGbT3os8a4+7EFrFFbBFbZsEW67+gLRdjaDCP
CYq+KtzH+UimDgS2HF/eUFhnQpn223/JEu4jLuYPyxj8sr6EfeQLV08as8Py
xuWxA1tyxpAheRvfmC28bsKTc52CDZZDd2U++F0ZI9wxsCBrXySHkO/z9t6s
PRLb9PHzdl9Th7Jtv2RJXhdDmczqTCyjro4AjvB8Vu5YVrHNe7BOxnoW4/P5
kNdTXrZxqg3Xcie/3nDJ1nXIIbb9sr23rI3XbwNG3Yp1uJxvps7IZyF3WV86
lr0Px5txWMf13eZ9Ov5P/ocwLzB/2f9ZyE/Ib/xf6LbHbEFZcftZeWMZBEfY
7snyxX3WE2x7LNuM/fqHX19hPJYhrF/hnry3ZULOiYwbOW8yruVMGm/z2jx+
k3bLLMehjEtF9wt6/vEx2B31I/DlxRvOGF2w/ozRQw895Djz5JNPjr72ta9N
tfWKLWKL2CK2dM2WfOzumDEcb4NxNeAL6kdkic+QQo5cujqsbbNlG63t0/bD
FO3zGl5v+yhtf7XfH41f28Zrw/D6ovNT7cAeQ2y/qm2PnWovNuXJ9mPb/l7u
s92Wcdv+bNvv7cq66WP221mryjyV1/r91UVtvEX7RdtFfeJl/en+/lQb9U6v
fX1nSZt8pvZd2Tb92wrGSRT1W/t9vI4HWZ2pqB3UhidX/PZTyxW/fdW/vqiP
u6jfuixO/35FfdRFbbwMV8RJe6zu+W8zjAFfoPfcc8/o0UcfHT3++OOr6kli
i9gitogtXbPF+i8ci8wxzmAM2QH7s45EP5PnXPpNHcqOwXPn92+eqiNN6kwb
VvHEcoTHLZcsY/w8xG3yxTIIx3zucNv2i67aN/3cto7EtkbLJ+6zbznn00XT
fbI+o4p4Ysue5dJUv/A4vOUN+6T9MW22TNt+Zp8vRUyx4+psfKxn+e3D9rxN
m207Ztr957fctf3uebvxxdN89xnj/78p+h829X8yKzu2D9vnhi1zrCuwv9iO
RfP7k/3+ZtZLbFm2fch++S/rFy9Lm+WTrZfZMXZFHKwbl1f1/KwjoW2XjDly
5EheT2JfNec9ii1ii9gitnTNFgrqSEWMOZn5kPkYnow3aJM7sPui0YUXXuj0
5S9/ea579+7Nf6VS6WIqxs2hnPvcBAuK6khgzP333z/VzuvG2v3Ls0FsAefF
Fak0XUX5fcXB/W5MUZFPFssW679wvjfmZEPBHI7T4bg6+C7Y3rPzJaMdO3aM
tm7dOqU8hl+pVLq4Cv8BrLFj7LgNX8NnzC233JK38z7xxBOOMVx7KpQt4opU
mraSK/743SZsKfJfpupIY58IbbeujcdsIw3gyQ/+4A8G61lnnSWVSgeoReUV
rLnssstW5g+YNR1W1ZHWvSBnzAc+8AE3V+CrX/3qKv+lii2of4krUmk6WsWV
qblJDdli/ReszQfOoJ0X9SP4QuzHY/8z+/rQDlTFmXnbTSqVtlP4EocOHZrq
I+eYRDAG8xs5PwD6kz/5k6X+SyhbxBWpNG21XGnLFt9/sesHYz28kxlb4B/l
Y+jG9aQyzszbNlKptBsFZ6666qqpNa44v+COgj7qOv8lhC3iilSatpIrdsxu
U7YU9R9hjiMUzHFx71tZk4bjbXzOzNsmUqm0W0UZ/7FXXpWPecvXfMjWyPTn
CFT5L6FsEVek0rSVXOEaOW3YUuS/4BtK7htqY8a4eDN+ubUGs3sgDejHquPM
+vXrpVLpAqnlzLXXXju97me2XTTGLsR/qWIL4hZXpNI01eeKXe+uKVvKxr/g
F228xy/d4Np24Rsdz/qn8Iu5UOSM+CLtQjds2ODaFeedjkXVru0Hzhw+fDhv
17XrN7CNt8n4lyq2iCvSWenhpaW5p2GRtSv7kSt2vbumbCla/8X2UZ/I5ghw
rgDXlKriTFm6wdfUFf8/rPZ9v0XVsmeR/fqxn19WUY5Rxq+//vpV61PZNTJD
/ZdQtogrYsssygb+9359y5bR6bF+8NxzRy/K8rzsF2+/t2b2a8sVuw5fU7ZY
/wXj69C2i2+VQMEcfLPAfRcqa+O9/7JzXRsPORPCmHmX+3kyZpasmXe+7rJ8
9G072a+eN+QMvytnvxEX238UyhZxRWyZRdmAz4L/v1T8H8b/ZLGlH/sVcgXf
RmrJlpD1X7jeL9cKxhiYEM74z3DOOeckr1V5oa/7LJqGPE+f72nRtAv7FfEG
ZRzcsN+RZX0ptv0lhC34dqO4IrZ0XTbQVmD/91q9ZdMmsWWG9qvjSlu21I5/
WZ70UfPbAW/K2nmx/ozPmbL60bzL/RD40iVn5p2nuy4ffdpO9qtWyxmUcXDD
/8aaXaMhdP5RKFvEFbGl67KB/7Fl/3+/nrUjiC3N7XdZgP3KuNKWLWXjX1hH
QlvLSc7RNu0vSAPmcdfVkeZd7lNjzLzz9KzKSB+2k/3CbMSyS86s+sb9uL4U
238UyhZxRWzpumx8bvPmyv+/6AsRW5rbD+ebcqUtW/zxL3aNBn6jhP1S2HZ6
5bZGnNm4cWOyGpMv+rrPImiftpP9yu1Xxhms2+2X/ybzp0PZIq6ILV2Wjcuy
cad1ijYGsaW5/dCGFcuVovLfZv60XaMBijZfjKm778BkzTrWl+AjVXFGjJkN
Y+adn2dRPsTn4djPZw05g/LOb8S6/urLN7u1/puu/1LFFnFFbOmybPjjTssU
4cSW2divlCtjjrRli99/xHoSfu0cR/5y/RdxRozpqoz0YTvZr95+ZZwp66MG
Y8iXkP6jELaIK2JLl2XjdMD/XqrY0tx+pyvsV8WVtmwp6z+ydSTnI125zW1D
6/qP1hpnmuaNtV5W5mE72a/cLpXtL+My79bLHNeP7BrfTfqPqtgirogtXZWN
w4F9H134L7JfvP+Cst+WLUXjd+0cR7Tvntqn/qMhMSaFsjJv28l+4ZzhN+7t
fMem43fr2CKuiC1dlY3Qvo8u/RfZL44rbdlS9P1pcAa/GFfDOY52jUz1Hw2D
MYtcXpqmuQsbyX5xnCn7xn3s9wNC2CKuiC1dlI0Lxhrzv7er/iPZL44rbdni
t79wfmM+x3HfpF6Ett3Q+dNriTNd/w9ZC7yZl+1C45u3feZlvzLO+N+4x2/s
949C2SKuiC1dlI23RrYdzGL8i+xXzRXOmW7DliL/Bf3Tdo0GcAZrfYMzp7L2
HnFmuIxZFO3bdqm9l67tV9l/dOW2fJ1MlP8m/UchbBFX5lc+UtIh+C+L/F76
8l/assUfvwu+8BslaPMFW6Bo7yVn8CvOhOXbFPJyKrZL7f305b/k3yjJONN0
/G4IW8SV+ZWPlHRo/suivZ8+/Beu+dKGLUXzj7hGA9t4T2VtvKeyNl6Ns4vP
t4uYh1OzXWrvqi//xW/jbfL96VC2iCvp5tc+daj+y6K8q3n1H7X5/jTXaOAY
O36jBPG6vmrzvRJxJs18m7LtUntXffkvqA+RL9Sm67/UsUVcSTe/9qnyX4Zj
v6rxu23ZEvT9o/2TPmrMd3TfKzkg/yXVfJuy7VJ7V335Lyf2rcxxdO2vBzbl
Y+xaf//IY4u4km5+7VPlvwzHfnXtL23YUvf9AHAF+uDV5+ec0fiXdPNtyrZL
7V315b+ALe/Myj/6qPEbO/4llC3iSrr5tU+V/zIc+1WtX9eWLWXjd7FOJhgD
3wj90xxjx++ViDNp5tuUbZfau+rLf8G6mPzGGr8X22b8bhVbxJV082ufKv9l
OPYr4wrX3G3DlrL+I/yij5rrMrj23f3naPxL4vk2Zdul9q768l+4LgO/U9J0
/EsIW8SVdPNrnyr/ZTj2q+qXbsuWqvV37TfWyBjXR6V1GpLNtynbLrV3NS//
pcn8o1C2iCvp5tc+Vf7LcOwXsv5uU7b4/Uf4Pgnad6vaeLVOQ7r5NmXbpfau
+vJf/DZe7DfpPwphi7iSbn7tU+W/DMd+Mf1HsWwJ+f60Y4wZY/fAVdvFmUTz
bcq2S+1d9em/YIwdGNNm/boQtogr6ebXPlX+y3DsVzV+ty1b6vqPpvqo96n/
KPV8m7LtUntXffkvRW28sd8/CmWLuJJufu1T5b8Mx36x/Udtvn9UNcaO/dXi
TLr5NmXbpfau+vRfUDcqWmMq5vuNIWwRV9LNr32q/Jfh2K9u/G4btpSt/4K+
aqwxBbbwG2tavy79fJuy7VJ7V335L/4aU+AN23h3LJ0Zvf5LFVvElXTza58q
/2U49otZvy6WLVXfb0SdCWNd7Bg79leLM2nm25Rtl9q76st/wTi7/BtrWX91
2+83lrFFXEk3v/ap8l+GY78yroAnbdlS1H+E+hHX+OYamawj8Xtr4kya+TZl
26X2rvryX7jGP9fLbDL/KJQt4kq6+bVPlf8yHPvVrb/bhi1l43fR3stvrEFP
Zf3Td1+q8S8p59uUbZfau+rLf+EYO35vjWs0HDzvBxqN361ii7iSbn7tU+W/
DMd+IeN3m7KlbP40FHUmrtHAtl5uizNp5tuUbZfau+rLf0EbL9p1uV5D0/6j
ELaIK+nm1z5V/stw7FfafzQu/23ZEvL9Rnwn1t1L/UfJ59uUbZfau+rLfzm5
f2WMHdt479qz1Mn3G8kW/Kr/KO382qfKfxmO/er6j9qwpW79F7bxnmQb7171
H6Wcb1O2XWrvqi//hWWebbyc49i0/6iKLeJKuvm1T5X/Mhz71fUftWGLP36X
7bz5Gg0ZX9DmYtdrEGfSzLcp2y61d9WX/+LmNY7rRXaOI9doiBm/G8IWcSXd
/Nqnyn8Zjv2quNKWLb7/YtdomGrjvXKbxr+sgXybsu1Se1d9+S8nD2zK5zeC
L03Gv4SyRVxJN7/2qfJfhmO/Uq4c3DLpP2rBFn/8S9k31jjGDvfAfCdxJs18
m7LtUntXffkvYAsZQ18m1n8JZYu4km5+7VPlvwzHfqXtL5dva80Wf/zLqjW+
0cbrzXE8qXW+k823KdsutXfVl/9S1Ucd6r+EskVcSTe/9qnyX4Zjv6bjX5r4
L1xnCr9TY+wyvsh/STvfpmy71N5VX/4LuXLXJevdNngQ+/2jULaIK+nm1z5V
/stw7FfGFfKkDVuK5k//2htf55RtvJibzT5q9B1hvV9xJs18m7LtUntXffkv
6KdG+ccv12toOn+6ji3iSrr5tU+V/zIc+1X1H7VlS9H4XfRT8xtrXJfBzdXO
5guAO+JMmvk2Zdul9q768l8m7bxLkzYSfC/28s3R/UehbBFX0s2vfar8l+HY
r5wrS63ZUtZ/xDW+2a573LTxap5juvk2Zdul9q768l/uGPME7bv4haKd99aL
1kWv/xLCFnEl3fzap8p/GY79qrjSli1V86fdN9awrm825wi/2Nf86XTzbcq2
S+1d9eW/oH6Etl783nNgy+jUoe1TazS8aF38/Okytogr6ebXPlX+y3DsV8aV
t+zb0potIfOP0N6CedocayfOpJtvU7Zdau+qL/+F9SLWlcCZoxefnbfxgjHQ
JvOPfLaIK+nm1z5V/stw7FfX/tKGLdZ/QZ2I62TiF+N02a5LxT2OizPJ5tuU
bZfau+rLfwFPUCc6tmud+wUDfmrnpI0XdaMQ/yWULeJKuvm1T5X/Mhz7lXEF
LGnLFr//CHUjO8bu3n1Lo+OYM31wi/uFYoyNOJNmvk3Zdqm9q778F7DlruVz
3S/qSWj3tX3UIf5LKFvElXTza58q/2U49qtqf2nLliL/xZ/jyDlObo28g5M5
TuJMmvk2Zdul9q768l/euGez66MGZ6D3XvmS6P6jULaIK+nm1z718NKS/JeB
2K90/Zf9W1uzxfovj9xwyM0NsN+IZdsu6kr5+nUHNokzLfLuvNM7JB2y/zJv
2/T9TFX9R3dkbb1QcOaml56VM2b72S+o9V9C2SKupJ9n+9JbNm0arP8yb9v0
ab+qdt22bLH+y7uvm8xxfP8tPzr6+Te8wvVRoz8Kyv5pboszzfPvvNM6NB2i
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
jAjH9uL8eTJb2Gd7p0k7+57Zx+/slfVjsx/a2c3s06bso2YcfCfYd+8uY40L
hz5mjzt4l+SS//453gX5Bu3M3GfbLo4j76F+xO/bgy2sH+3cslTpv4gtYovY
IrZ0zRbrv3z6gw8738cq2nIQp23H9MuUPx7OL3/++DnLAFsfq+JYVZy8nvUq
O16OZTgfY5dxg5ziMxSlidfn3LD8CXn+7Nvg8C9xjPUjHmP7GVhguevqPRhb
Ry6Nj+Fd533S7D8ch7nTjuO7ZOLL5mPwsj5p5jnLEfZJ0292+W8c5rjJj87X
N8zJx3uh3Jl95nlbZtie6soc+ncxVo91k4wzrg9530p/MY+xjpOXywMrZdye
s+P42P9sx8uxzxmseDAbB8fxbwzDupblkuUGmUPeWKbhOex4QJ63/MmfNXt+
coZj7vI6VGYnHnM2NXbMxw8sr4wnYD2L4w1cvWz/5lVj8Oy+//4n/dYb8jzD
Pur8/5RpB8a8RjDB75uGHth9Uc6YRx99dJX/IraILWKL2NKULZi/VOe/fPOb
3xy9anmn63uyijihPn98FlWd71tteriN36LjsfGF7MfGV5TmsrTynP9cVvF/
AWq3Uff1j9ddU3St2x/nN6wzhG38cp/bDMd9ex56kxf+xuzYjeYY2hLttn/O
Xmf3se2r61t92Ub3658LuQe2b/Li9+93o5du//nKnt+Gq9ovUtrY3y6Ki2rf
jX3f2PfzEfMcyj9YYNeUoqJ9F/OcyRj4L0888cToa1/7Wu6/iC1ii9gitnTN
Fsrz//avo2eefsr5NmivQVxbzyxWnIOef/bKL+Y6+dtQbFPLjtl9/5h/TdW+
TZdNT6jimrJ9G1fR8xfdO+ZZ8f6qwpVpkS2w7rLbX3/GVNry43XpzMLZNFWl
19/ntv+/qg+19/XTPmXj9fXPUPRMVft9PLcff9Xz8jmpU8dYZsbbL1q3+hpu
b/fKiM8XhMV6LVijBWs93H///aOPPfbY6Mknn3SMeeaZZ0bP/cuzYovYIraI
LZ2zJfdfnn/e1ZO+8Y1vuDDgDPqgyjgjbab8HlUf6ucHX2P4C0VehObMKlGG
K9LKa9efIV1/RpAd+1Q/H9i6EfiC+hHWlgNjHnroIceP06dPO5aAMWjbFVvE
FrFlAJoYW6z/gnoS2nlx/vHHHx/92CuvcveYd7lMTReZM6GsEWfSYo19/0jb
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
                    
                    "], {{0, 232}, {560, 0}}, {0, 255},
                    ColorFunction->RGBColor],
                   BoxForm`ImageTag[
                   "Byte", ColorSpace -> "RGB", Interleaving -> True],
                   Selectable->False],
                  BaseStyle->"ImageGraphics",
                  ImageSizeRaw->{560, 232},
                  PlotRange->{{0, 560}, {0, 232}}], 4->
                 GraphicsBox[
                  TagBox[RasterBox[CompressedData["
1:eJztnX/QJ0V951MnSQR2l332B9lFqI3oLYjLsj+BtVhKEj2MW3pAJIEQUrvU
gqDCwrqCGvAgijHGKMmZaDC56BkTYnIaY4U7CxMrXu6KXFmX+EeMdWUqZcpU
UaRISlJUmWD5ve+7v/Oe/Xz7menpnun5zjzPvj9V7+c7P3t6eqZfT3d/unte
fMux6277d9/3fd/31hdO/1x35L6rjh8/8o4fP2268iPvOHHrLS+YLjw11a7p
Mdg4kclkMplMJpPJZDKZTCaTyWQymUwmk8kS7Lvf/e7kn5761uTv//ovJ//v
/3x58n+/8JnJVx7//cmTn/345M9+7zcn/+v3f2PyP//g405Yh/73H/ymW//y
Y7/u1rnfX/+z3/3o/HpxPmW3cflPH5tf/5NPPep+v/TpWXjc79aL/diGdYjr
OP+Lv/Oxcp3nQdjOdfxyHb8QwsE6zuU+7sc27n/it+f3Yx2q249lbvOvac/n
/dh1f79d9+PAe7D7Q/G0cWmKv58+9nnYtPfX654/3i/7vP/804+6Zbx/2Id1
LHMd4jreQ6zj1x7Ddbu/7hgeZ48PHRfa78ev7nwbH3+56v76uH+kq0v7T/3q
5E8/8ctu/1/84ScdA577l2cnzz//vGPD9773vVJii9gitogtY2HL03//ty7M
v/7zJ5y++id/5PgC4Xq8Jz5zxAvvAZbJlCoGcX8dY7hut5f7p+fY7XhPuc53
3V+328gk7reM4bvPfMNrMN8wD1Wdy/0+YyzfqvJo1X4bJvOuv98PzzLDX+f5
3OYzxl7DD6fq+n78bXyq0gf7uI37yRj/+dtnxfeEXLG8sfuq8hjeT5sHsc5j
qvb7xzBPMS/a4/3j/PC67vfjU8WYqvtrWk+5f8YNjPnCx943+R8ffe/kM+9/
2+ST77hl8vF7b3bbnnn6qclzzz03+c53vuOYE8sasUVsEVvElj7YAkMZCGyh
yBjUjxAPyL0zv/0Rl+fBEjxrrH/xv/7qjDXT7VjmMe79KfaTFbX7UdfBdnMc
f8tzkPeny1/4+K+U76pdd+9zsY7j+c5j/Quf/MjcfpdXcO2CEf/9tz48+cIn
frXMR1jGPvxiH7c//l9+xW1jXQnL2Ma8yP3M1/5+Xsfud9um8eN2LGMb42HD
xHaskwl16wiD26rOd9fzjsE+F6fi+ljm8dze5v7c8+Cz+MTsedrnVa6b549l
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
hlwhYxgWllm/wDbEpTzf8MfWT1yYxTbWUcr6Cq45XXbhYVtxPZ5vr0nu4Tgb
x7L+Y+p/MffPcLBMxoAv29d//2Tb0umTjz36aMkZtPfCZ41+d2KL2CK2iC19
sMWWX9CWiz40GMcEwVeF67gykqkDgS3Hdq2rrDMhT/vtv2QJ1xEW3w/LGPyy
voR1vBeunjRlh+WNe8f2bS4ZQ4aUbXxTtvC8GU82OoENlkN3FGXwOwpGuG1g
QdG+SA7hvS/be4v2SCyzjF+2+5o6lG37JUvKuhjyZFFnYh51dQRwhPuLfMe8
imVeg3Uy1rMYns+Hsp7ysvVzbbiWO+X5hku2rkMOse2X7b11bbx+GzDqVqzD
lXwzdUbeC7nL+tLR4nk43kyPdVzfYZ6n4//sfwjfBb5f9n8W3ie8b/xf6Jan
bEFecetFfmMeBEfY7sn8xXXWE2x7LNuM/fqHX19hOJYhrF/hmry2ZULJiYIb
JW8KrpVMmi7z3DJ8E3fLLMehgktV14u6/+k2pDvqR+DLi9edNjlv7WmTBx98
0HHmiSeemHzta1+ba+sVW8QWsUVsyc2Wsu/ulDHsb4N+NeAL6kdkic+QSo5c
svxY22bLNlrr0/aPqVrnOTzf+iitv9r3R+PXtvHaY3h+1f65dmCPIdavattj
59qLTX6yfmzr7+U6220ZtvVnW7+3y+vGx+y3s4byPMVzfX91VRtv1XrVcpVP
vM6f7q/PtVFv99rXt9e0yReyz8q26d9S0U+iym/t+3gdD4o6U1U7qD2eXPHb
Ty1X/PZV//wqH3eV37ouTP96VT7qqjZeHlfFSbut6f5vMYwBX6C77rpr8sgj
j0wee+yxZfUksUVsEVvEltxsseUX9kVmH2cwhuxA+rOOxHIm97n4mzqU7YPn
9u/dNFdHmtWZ1i3jieUIt1suWcb47xCXyRfLIGzzucNl6xddtm783LaOxLZG
yyeu07dc8umCeZ+sz6gqnti8Z7k05xeeHm95Q5+036fN5mnrZ/b5UsUU26/O
hsd6lt8+bPfbuNm2Y8bdv3/LXet3L9uNL5znu88Y//9N1f+wuf+TRd6xPmyf
GzbPsa5Af7Hti+b7k31/M+slNi9bH7Kf/+v84nVxs3yy9TLbx66Kg0398kL3
zzoS2nbJmMOHD5f1JPqqOe5RbBFbxBaxJTdbaKgjVTHmeFGGLPvwFLxBm9y+
HRdMzj//fKeXv/zlpXbv3l3+SpK0MoV+c8jnPjfBgqo6Ehhz3333zbXzur52
//JsFFvAeXFFklavkH9fsX+v61NUVSZLZYstv3C8N8ZkQ2AO++mwXx3KLlje
uf0lk23btk22bNkyJ27DryRJK1coP4A1to8dl1HW8Blz0003le28jz/+uGMM
556KZYu4IkmrW+SK33+3DVuqyi9zdaRpmQhtt66NxywjDuDJD/7gD0brjDPO
kCRphKrKr2DNpZdeenL8gJnTYVkdac0LSsZ84AMfcGMFvvrVry4rv4TYgvqX
uCJJq0chrsyNTWrJFlt+wdx84AzaeVE/QlmIfjz6n+nrQztQiDNDp5skSd2E
ssSBAwfmfOTskwjGYHwjxwdAP/mTP1lbfolli7giSatblitd2eKXX+z8wZgP
73jBFpSPyj5003pSHWeGThtJkvIInDl48ODcHFccX3BbhY+6qfwSwxZxRZJW
t8gV22e3LVuq/EcY4wiBOS7sPSfnpGF/G58zQ6eJJEl5hTz+Y688WPZ5K+d8
KObI9McIhMovsWwRVyRpdYtc4Rw5XdhSVX7BN5TcN9SmjHHhFvxycw0W10Ac
4Mdq4szatWslSVpBspy5+uqr5+f9LJar+tjFlF9CbEHY4ookrU75XLHz3bVl
S13/F/yijffYJetc2y7KRscK/xR+MRaKnBFfpBxat26d09DxWKnKnX7gzKFD
h8p2XTt/A9t42/R/CbFFXJH60qGlpcHjsJKVK/3IFTvfXVu2VM3/Yn3Udxdj
BDhWgHNKhThTF2/yVZJShHL41zdvnnxu06bJTRs2DB6fsapLOvl5FfkYefza
a69dNj+VnSMztvwSyxZxpV7r16+f06Kvt1KFe8H/XuSNJ6f64MaNkxcV77zS
Lz393lqkX1eu2Hn42rLFll/Qvw5tu/hWCQTm4JsF7rtQRRvvfZdudG085EwM
Y4bO94vUWWedValFXmulqel+wBvkHQr/ny+d5iel33z65Ugnm2/JGX5Xzn4j
LtV/FMsWcaVeof8vi7rWSlNd3sD/4UMZGKL068AVfBupI1ti5n/hfL+cKxh9
YGI449/D0JyXVqaeNPnG5h/8bx46bmNSl3Sq4g3yOLhhvyPL+lJq+0sMW/Dt
RnGlXqH/M4u6zkoT7gdtBX6+oNBOucjntNLUNf2auNKVLY39X3bNfNT8dsCb
inZezD/jc6aufjR0vpdWrthuWSWVYfKnk+UM8ji44X9jzc7REDv+KJYt4kq1
Yv/XLOI6K0W8J/yPrcsbXy/aERb5nFaKYtMvpX7kc6UrW+r6v7COhLaW4xyj
bdpfEAeM426qIw2d71cbY4Z+p/vKI3X7/XZLX/CRKP2W+9i6pBPzLjmz7Bv3
0/pSqv8oli3iitiSO2/g3Q/lDZTvF/WMVpJi0y+WLVVc6coWv/+LnaOB3yih
XwrLTldsbcWZoZ+HtLJ03lShfGPrT0PHdaWnUx1nMG+3n//bjJ+OZYu4IuXU
pYF2Sd8PMnRcx6jY9KtjS4grVfm/y/hpO0cDhDZf9Km7d99szjrWl1BGCnFG
jJFyqKndkkLbw9BxXQ3p5LOGnEF+5zdinb/6sk1urv+287+E2CKuSDnV1C4p
hvSffrVcmXKkK1t8/xHrSfi1Yxz5y/lfxBmpbzW1W9r236HjuhrSqY4zdT5q
MIZ8ifEfxbBFXJFyqqpPe52GjusYFZt+IbaEuNKVLXX+I1tHcmWkK7a6ZajJ
fyTOSF21fXNcu+Wpzp6c6RRsf5nmeTdf5rR+ZOf4buM/CrFFXJFyKdSnXQxZ
XPqFuNKVLVX9d+0YR7Tvntgj/5G0WMW2W57q7MmZTnWc4Tfu7XjHtv13m9gi
rki5JIaMI/1CXOnKlqrvT4Mz+EW/Go5xtHNkyn8k9a2Udt9TmT050ynUzlv1
jfvU7wfEsEVckXIotk+7GNJ/+jX5j7qwxW9/4fjGcozjnlm9CG27seOnxRmp
i1LbLU9V9uROpzrO+N+4x2/q949i2SKuSDn01sS2g1OVIYtIv1D7S1e2VJVf
4J+2czSAM5jrG5w5UbT3iDNSXxJ7hkmnoP/oiq3lPJnI/238RzFsEVekHBJD
xpN+jf6jDmzx+++CL/xGCdp8wRYI7b3kDH7FGakviT3DpFMdZ8pvlBScadt/
N4Yt4oqUQ2LIeNIvxJWubKkaf8Q5GtjGe6Jo4z1RtPGqn53Up8SeYdIp1n/U
5vvTsWwRV6QcEkPGk34p/qMu35/mHA3sY8dvlCBc56s23ysRZ6S+JPYMk051
nEF9iHyh2s7/0sQWcUXKITFkPOkX6r/blS1R3z/aO/NRY7yj+17JPpVfpP4k
9gyTTqH2F45xdO2v+zaUfew6f//IY4u4IuWQGDKe9Gtqf+nClqbvB4Ar0ANX
nltyRv1fpD4l9gyTTiHOvLPI//BR4ze1/0ssW8QVKYfEkPGkX2j+uq5sqeu/
i3kywRiUjeCfZh87fq9EnJH6ktgzTDrVcuayTeU31vi92C79d0NsEVekHBJD
xpN+dVzhnLtd2FLnP8IvfNScl8G17+49S/1fpN4l9gyTTk3z1/E7JW37v8Sw
RVyRckgMGU/6hfzSXdkSmn/XfmONjHE+Ks3TIPUosWeYdIotv7QZfxTLFnFF
yiExZDzpFzP/blu2+P4jfJ8E7buhNl7N0yD1KbFnmHSK9R9hvY3/KIYt4oqU
Q2LIeNIvxX+UypaY7087xpg+dvcfPEeckXqT2DNMOoXKL+hjB8Z0mb8uhi3i
ipRDYsh40i/Uf7crW5r8R3M+6j3yH0n9S+wZJp1S/Eep3z+KZYu4IuWQGDKe
9Ev1H3X5/lGojx391eKM1KfEnmHSKcQZ1I2q5phK+X5jDFvEFSmHxJDxpF9T
/90ubKmb/wW+aswxBbbwG2uav05ahMSeYdIpdv468IZtvNuWTk+e/yXEFnFF
yiExZDzplzJ/XSpbQt9vRJ0JfV1sHzv6q8UZqS+JPcOkU6ifXfmNtcJf3fX7
jXVsEVekHBJDxpN+dVwBT7qypcp/hPoR5/jmHJmsI/F7a+KM1JfEnmHSKVRP
4vyYbccfxbJFXJFySAwZT/o1zb/bhS11/XfR3stvrEEnCv/0nZeo/4vUr8Se
YdKpqf8uv7fGORr2n/0Drfrvhtgirkg5JIaMJ/1i+u+2ZUvd+GkIdSbO0cC2
Xi6LM1JfEnuGSaeQ/wjtupyvoa3/KIYt4oqUQ2LIeNKv1n80zf9d2RLz/UZ8
J9ZdS/4jaQESe4ZJp5D/iH3s2MZ7x86lLN9vJFvwK/+RlEtiyHjSr8l/1IUt
TfO/sI33ONt4d8t/JPUrsWeYdAq183Ks45t2nRzj2NZ/FGKLuCLlkBgynvRr
8h91YYvff5ftvOUcDQVf0OZi52sQZ6S+JPYMk06h8dOoF9kxjpyjIaX/bgxb
xBUph8SQ8aRfiCtd2eKXX+wcDXNtvFdsVf8XaSESe4ZJp1r/0b4N5fhG8KVN
/5dYtogrUg6JIeNJv1qu7N888x91YIvf/6XuG2vsY4drYLyTOCP1JbFnmHSq
9VNP2ULGsCyTWn6JZYu4IuWQGDKe9Kttf7lsa2e2+P1fls3xjTZeb4zjcc3z
LfUosWeYdGrT/yW2/BLLFnFFyiExZDzp17b/S5vyC+eZwu9cH7uCLyq/SH1L
7Bkmneo4Q67ccfFatwwepH7/KJYt4oqUQ2LIeNKvjivkSRe2VI2f/rU3vs6J
bbwYm00fNXxHmO9XnJH6ktgzTDqF/NTI//jlfA1tx083sUVckXJIDBlP+oX8
R13ZUtV/F35qfmON8zK4sdrFeAFwR5yR+pLYM0w6hdt5l2ZtJPhe7GWbkv1H
sWwRV6QcEkPGk371XFnqzJY6/xHn+Ga77jHTxqtxjlKfEnuGSac6ztw25Qna
d/ELoZ335gvWJM//EsMWcUXKITFkPOkX4kpXtoTGT7tvrGFe32LMEX6xrvHT
Up8Se4ZJp1A9CW29+L1r3+bJiQPnzM3R8KI16eOn69girkg5JIaMJ/3quPKW
PZs7syVm/BHaWzBOm33txBmpT4k9w6RTqJ6EehHrSuDMkQvPLNt4wRiozfgj
ny3iipRDYsh40q+p/aULW2z5BXUizpOJX/TTZbsuhWscE2ekHiX2DJNOdZwB
T1AnOnrRGvcLBvzU9lkbL+pGMeWXWLaIK1IOiSHjSb86roAlXdni+49QN7J9
7O7ZszQ5hjHT+ze7Xwh9bMQZqS+JPcOkUx1nwJY7dm10v6gnod3X+qhjyi+x
bBFXpBwSQ8aTfqH2l65sqSq/+GMcOcbJzZG3fzbGSZyR+tKhpSWxZ4B0quPM
G3ducj5qcAa654qXJPuPYtkirkg5JIaMJ/1q53/Zu6UzW2z55eHrDrixAfYb
sWzbRV2pnL9u3wZxRupVN23YIPYsOJ1C/qPbirZeCJy54aVnlIw558wXNJZf
Ytkirki5JIaMI/1C7bpd2WLLL+++ZjbG8f03/ejk59/wCuejhj8Kon+ay+KM
1LdS8s/QcV0N6VTHGbTngi34hcCd6wvGwEcNxkCh8kssW8QVKafEkOHTL8SV
rmyx5RdwhfNkcoxA+c2jfRtOtr+onVdakGLzz9DxHFo50inU/nLrjqW5OhIZ
Ax91TPklli3iipRbYsiw6Vfbf/fCtZ3ZUuU/AmPef/Nr5hkzLbO475VMlzFG
W5yRFqWY/DN0HMegrukUqifBT8323jfvO6ccIxBbfolli7gi9SExZLj0q+PK
4YvWd2aL338XbGEfO9SZUFYBX/CLPnbwVaO/nTgjLVJN+Wfo+I1FXdKptv3l
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
dv4Xny3iipRDYsh40q+p/24XttTN/8JvlIAtHCNg5/sWZ6S+JPYMk06hdl7k
f3CG/urSR732tOT5X0JsEVekHBJDxpN+oX51XdkSmv/FfWNtx9KyPnb6/pHU
pw4tLYk9A6RTqJ8dvrEGFuSa/6WOLeKKlEMqv3TTTRs29F5+cf3eOrIl1n+k
7wdIi9STYs/C0ynYznvBmtJPjV+28Xb9foDPFnFFyqHzplL5pVv65WJLk/+o
C1vq+u+CN5Yxto+d+r9IfSu1/jR0fFdDOjVxhnxp0/8lli3iipRLHxRDRpF+
dVxxLOnIlqb5X9wc3zuWyjZerGO+b3FG6lPbN6f5RoaO72pIpzrOOAbs2Tq5
Zcda176L/A/e0EfNelLq/C9VbBFXpFxK9a8OHd+xKVf6hbjSlS1N87+wjx1/
OV+DOCP1rc9t2hSVb548xdmTK51q+79ceKYrX7j5GqaCz9r6qMEYKHX+lyq2
iCtSTqX4QIaO6xgVm34httRxBWWWrmwJzf9S18ar/i/SIhTbhwztnEPHdTWk
U2z/F/uNWPKlqfwSyxZxRcqpWB/Iqc6QOsX6p0Pp1zR/XRe2hPxHdowAxziy
vVeckfpWbB88tHMOHdfVkE6hcQLI86gvueW9W8o60ovXnZbc/hJii7gi5dSl
kT4Q1AGGjusYFeufDrEl6JfuyBZ//BHqR1XfiOUcU/IfSYtUU/0JvpOh4zgG
5UinkP/o6EVF+y7ae6f5/3rPR91Ufolli7gi5VaTf/VU9z93Tb8mtoS40pUt
Td+ftmOm5T+SFq1QHzJw59JTvO0lZzrF+I+qxgik+I+a2CKuSLnV5AMRQ8IK
+afBFrTRhM6PHT/dhi2x/XfRzktftdpfpEWqqg/Zk/IbZU+nYP/dYn4pLKPd
97qX5uu/a9kirki5FfKvym8Ul351bOlSL3Lz13VkS9P4aY5tdL+Fv1rjp6VF
yq8/ob1Sdab86RTyUyPP01+NthOOcWzb/6WOLeKK1Id8/6rqP93SL4UtdVxB
X5eubGmaf5dzY9pvrGmeb2mRYh8y5BnVl/pLp1D7C8c6op7kfNSJ/Xdj2SKu
SH2I/lWUW/C/+LwRxGklienXhi11XEG/l65sCY2fVv8XSTp1FBrnSL7AR43l
tv1fmtgirkh9Se0twyg4frojW2LGH7k+L+r/IkmrWk39XzheAG29ucYf+WwR
VyRpdamOK7dx/roObGkqv5R97HCNYryj5n+RpNWnUDvvHbs2ul/IzvGd4j+K
YYu4IkmrS6HyS1e22PKL+8b9lC38xn3Zx66YV6b83v10WZyRpNWl2n52U77A
34NfMACMQVtvSvklli3iiiStLtVxBRzpypaq8UdVbby2j53qSZK0+lTHGeR9
1JVce0kx31Tb8dNNbBFXJGl1KdT+0pUtdfPXoX6EcpHts8vlpvKLWCNJK0s+
Y6rmyWQ/OzAmtf9LLFvEFUlaPYrlSlu2VPV/sd8o4bdJ7Bjtpvlf6jgjSdL4
ZTkDbqB+hPLGW/ZsLtt7wZo2/V+a2CKuSNLqlM8V8KQrW5q+38i2XfimbXsv
4rBt27Zazog1krTyxDyL/EvOuD52O5fcL9t7bR3pnDNf4JT6/cYqtogrkrT6
VMUVMqULW5bNX3fNgWXfuLdtvDeeP1vevXv3Ms7U1ZXEG0kat/y8ivyLPA5u
0C/NNl5wxvqoY8ovMWyBxBVJWj0KccX2eWnLlqr+L3VzZNr5Gl6xf69r54Ve
/vKXl0LcKJSzqAMHDkiSNGLZ/Ir8e/DgwckN1/1HxxbWkVhfsmMcY8ovsWwR
VyRpdamOK2xz6cKWyu8H3PgqV0+am2OqmKMBy4cvWj85cvFmxxrED/G5+uqr
J4cOHZpce+21TrgehH460OHDhyVJGrGYV5l3kY9RzuAcDeV8DVPG2DGO0e0v
DWzBt2jFFUlaXfK5grILuGLnf2nLlqryi9/Hjt9stP3tIDdnA+Zv2HX2yT54
3rH4xX6u83jIfn+W/fewbs/DNldGK+aIcMvF9fj9N7vszpsea+PA6/E4hsdl
hGu/I2WvEXP/6Hvk92/mnDz4nfVNKr5Vt3N2PIT1W4u6rYvj9Pd2nHPxWrf/
rn2zPk3YfvdlWyd37l5y+7Ad6xD2nThwTrkf+7AOHd+/eXLnJevK9bdfsdX9
HjPbju1a545722Wb3P57L988uWfPLMx3XnmuW8d+LL/9wNmT4/s2uGUI5/C8
B67a5vbfd+lGt/yOV/zQ5N59Z7nf+w+e437ftn/JHYN1COs4Btuwn+cgDCw/
ML0Gfm2YWMa5WH+giJNdLvdNhWV37nQft/vbbJx4DWyz6/71eT2kDYS0KM+d
pocNB2EjfbCOtGN6Qcf3njW5e89ZLn0RDvbheSD9se6O2T97HlzG8fZZ3r13
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
bqe6Y+33DWBYrvvOvY1bShxS0lcmG7P1xQr8/8axVe0ObIMJlV9YRqkrv8T2
AQ6FA33pK99yx+EeQ3PO+PGN5UpKHLqwWCaTyWQymUwmk8lkMplMJpPJZDKZ
TCaTyWQymUwmk8lkMplMJpPJZDKZTCaTyWQymUwmk8lkMplMJpPJZDKZTCaT
yWQymUwmk8lkMplMJpPJZDKZTCaTyWQymUwmk8lkMplMJpPJZDKZTCaTyWQy
mUwmk8lkMplMJpPJZDKZTCaTyWQymUwmk8lkMplMJpPJZDKZTCaTyWQyWbXd
/Ytfnqy/8tFafekr35o7/pp7/njZMbtu+N3J3/3Ds9HhYt+DH/2LxrghzB8+
9Ilg/H7rj/6mPP4vv/6Py+Jhw0I8//nZ70SFjfvsGj8bRkrcUtKO58Yazv/Q
p/4q+tiUdyMlDrHh5nhOVWbfm6r4MY1i3kGbnjnSrCmMV976mV7uxaZlTBxy
5qVUy5nXkT6f/dLfumOxXHccwkjhnH3eKXFITf9YS41DyKqYX2U5/g/AcFyO
cJriGsPGXO/7osKJfa65wsn1zGMM4eFdrLqW/38R8a86FtsQTmy4vL+mtMD+
w+/6YvD52vetKh427vaaTWHHvMcpYaTELSXt/HObDO+n//+vzmLfjaYylM+F
lHcux3PyDf/vcW4df20aNV0fx7W9tzpD/q4LA8J+xj3nvcTeB99DXjPHM0p9
h3LldTAEYcWkEdIyhXP2flLikJr+sZYahzrjOxfzXOv+Z6T8H8gVDsLAfaLs
W2WxbMzFpEWEk/Jcc4WT439/rOGZIc5NFnpnUQ/APhtOKFyWpVPvAdcOld1w
TSjmmggLx9a9y7HxiQ0jJW4paUdWx77roXhUHRvzbjAOfDf9uPhciA2XYXd9
TnXxDb3LjG/q9VPuLcbwPwrPvC6v9HUvi35Gbd6htnndciQljVI5599fU7ht
80ispcYhFE4Kc+qs7f+BtuGk5JWmcHIwaRHh5LqvlHD6+N8fulbM/7PUZ5/C
l1hD+Divrt00lWld82BKGKnll77uI7X8kvJu2LI745P6btSF3ZWVsWFW/T/r
K31jDM8Z168rt/d1L4t+RjnfoaY8YjmSkkZd3uW+wk2xnP+/T/XyS477X0Q4
ue4rtfyS+39/m2tZU/lluan8MlkWB9t/AMsqv3SzU638kuMdOtXKL33FoU04
Kabyi8ovXU3lF5Vfuh7rx8H//6PyS3s7Fcsvdr3NO6TyS544tAknxVR+Ufml
q8X2WeK91Y11qPJP14XLsBZZfmH/nbb9XqssJYyUuKWkHdb76p+R+m7Y957b
OF4t9t2oCzvX+14XX2uIm///rI/+0THWpfwCa3svi35Gbd6htnnd54i916Z7
SeFc1f3lDjfFUuNQZxhTlfP/bte8HRsOj6sbA2jzSo7rjSWcvt7ROuvjf3+d
ob9c1ZhoyI5BxPVCfWfx/9P2zW8KN9QPvM7YP7rOEG5oLADSzh8zgbSuOj4m
byKM2DycEreUtMNvSjqmMCf23WgqQ/lcQLi2DIplpo0NF5bjOfmGc0LvEa7P
cFOvH5tmKRbKK7g+wq2LH/Jsm3tJuY8czyj1HUIcQu89yjA2r9s4IK52bJBl
V9O9YF8K5yw/+wg3xZp45TO8KazY8U91Y1pS/w90DQf7+Z415ZWme8/BpJzh
5Hiuqe9onfXxv7/OyPK6a/Edbfo/aZmfEm6K4ZxQua3pminll5gx6inll5S4
pd5Hapkkln2IA+uqoWeI6zfln1D5hWNnGS6O5buW4zn5lprfsV53feRFe2xs
mqVYU1xDTEZ8YssvflqG3sHcz6jrO+Qb4hMq49vnkFJetenJ68Q875j/nVX3
EJP+sTZE+aXpf1lKfsiRHqG87D/btuH4TKizpnctNpwm8/83LyI+ud/dOov1
J6TWjxhuE5dSLMZ/VHcvY/Afxcatz/tIaZdOaXdMfTdS/GNdn1PTNXzrkkZD
+I9i076v9upceanPdyhXGqXEo+r+kH/xLHOMNW8z/0SO9z7Ff9SHH8y3XO91
rP+oyRbtr2myXH6xHPHJzfO++5+xzJFjLgP1310Z/Xet5R47ksNy9VNbxLjX
ofrvhmzReanPd2jR/XfZFpHSZ63p/mIt13ufi3u5LEef0JT7zxVOruexkuKz
0sYfWd9A1zKMyi8qv+QwlV9UfqkLu+/yC34Zv7ZlGJVf5k3ll5UTn5VWfoHl
KsOo/KLySw5T+UXll7qwF1F+sXFsU4ZR+WXeVH5ZOfFZieUXWI4yTO7yS5c2
3NQwVmr5JeX7ASnvRsr3Ebo+p6r41oWZo/ySc9733OWXHGnZV17q8x3KkUZd
nndVHNqWYbqUX3K896nll9zfQfBtJZdfcjyPlRSfoeZ/gcF3i+NxfSts88cz
VoXbtQzDPs2h8ktsnz72tfbvhYrJmylhpMStTf/Wuj7+CMePR91zhOx34ULf
4bJlID9Ovvn3k/J9r9Q0jimbhcL0v1OGdzrXd/fa1ENx/ZjyS0zap6Qllvt4
RnXW5zuUK414nB0z0zWP1JVhUtK/j/c+ZCnfb8zxPVNYSnq0tdj/halMqLNc
zyPXfeWKzyKeFS32m+EwlBuq/k8irn586sJlGQbpkDqHAa4R+qZ46F54XV4z
x7fLU8JIiVvKsfgNjVH0OcPxD3XH2ucS+g46xHmg2nx/ui5M//vqKWkcy/GU
78SnflM+Ns1SDM+k7ryUtE99X/t4RnXW9zsUGzbLGXX/b6s41zWPMD+2vb8+
3vsmix37nCs/pKRHW4v9X5grHXM+jzHd1yKelUy22mwRvnaZTCaTyWSynKby
i0wmk8lkspVmsfN/y2QymUwmk8lkMplMJpPJZDKZTCaTyWQymUwmk8lkMplM
JpPJZDKZTCaTyWQymUwmk8lkMplMJpPJZDKZTCaTyWQymUwmk8lkMplMJpPJ
ZDLZIu3/A0sFwuA=
                    "], {{0, 232}, {560, 0}}, {0, 255},
                    ColorFunction->RGBColor],
                   BoxForm`ImageTag[
                   "Byte", ColorSpace -> "RGB", Interleaving -> True],
                   Selectable->False],
                  BaseStyle->"ImageGraphics",
                  ImageSizeRaw->{560, 232},
                  PlotRange->{{0, 560}, {0, 232}}], 5->
                 GraphicsBox[
                  TagBox[RasterBox[CompressedData["
1:eJztnX+wJldd5q0lKklmJnMnM3EmhBoJ7CQMk8mdX0mGSlJEYYNMwSaRaGKM
NZOahARIJhmGBDBhEyGIiBBdFAy6wiIa0QWVMrtUUErW3Ypb1Cp/iNYWloWF
ValY0SJWqtBQvPs+5+2n5/ue2336nO7T3e+983yrnvv26T59+vTpPp97fvdL
bjl23W3/7nu+53ve9sLpn+uO3HfV8eNH3vmjp00dP/TOE7fe8oLpxlNTLU/9
YOdEJpPJZDKZTCaTyWQymUwmk8lkMplMJkuw73znO5N/euqbk7//q7+Y/L//
8+XJ//3CZydfefx3J09+7hOTP/2dX5/8r9/9tcn//L1POMEN/e/f+3Xn/vJj
v+rcPO67//S3PzbvLs6n7D5u/8lj8+4//vSj7vdLn5mFx+POXRzHPrghunH+
F3/r46Wb50HYTzd+6cYvhHDgxrk8xuPYx+NP/Ob8cbihuuPY5j7/mvZ83o91
+8et248D78EeD8XTxqUp/n762Odh09531z1/vF/2ef/ZZx5123j/cAxubNMN
0Y33EG78Wj902+N1fujP+g/5Cx3341d3vo2Pv111f33cP9LVpf2nf3nyJ5/8
RXf8z3//U44Bz/3Ls5Pnn3/eseG73/1uKbFFbBFbxJZFYcvTf/+3Lsy/+rMn
nL76x3/o+ALherwnPnPEC+8BtsmUKgbxeB1j6Lb7y+PTc+x+vKd081333XYf
mcTjljF895lveA3mG+ahqnN53GeM5VtVHq06bsNk3vWP++FZZvhuns99PmPs
Nfxwqq7vx9/Gpyp9cIz7eJyM8Z+/fVZ8T8gVyxt7rCqP4f20eRBu+qk67vth
nmJetP59f354XY/78aliTNX9NblT7p9xA2O+8PH3T/7Hx943+ewH3j751Dtv
mXzi3pvdvmeefmry3HPPTb797W875sSyRmwRW8QWsaUPtsBQBgJbKDIG9SPE
A3LvzG9+1OV5sATPGu4v/tdfnrFmuh/b9OPen+I4WVF7HHUd7Df++Fueg7w/
3f7CJ36pfFet273PhRv++c7D/YVPfXTuuMsruHbBiP/+Gx+ZfOGTv1zmI2zj
GH5xjPsf/y+/5PaxroRt7GNe5HHma/84r2OPu33T+HE/trGP8bBhYj/cZEKd
G2FwX9X57nqeHxxzcSquj2365/429+eeB5/FJ2fP0z6v0m2eP7bxjtn3ozw2
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
7GMdpayv4JrTbRce9hXX4/n2muQe/Nk4lvUfU/+LuX+Gg20yBnzZsfF7J9uX
Tp98/NFHS86gvRd91hh3J7aILWKL2NIHW2z5BW25GEODeUwQ+qpwHVdGMnUg
sOXY8obKOhPytN/+S5bQjbD4fljG4Jf1JbjxXrh60pQdljfuHdu/pWQMGVK2
8U3ZwvNmPDnbCWywHLqjKIPfUTDC7QMLivZFcgjvfdneW7RHYptl/LLd19Sh
bNsvWVLWxZAnizoT86irI4AjPF7kO+ZVbPMarJOxnsXwfD6U9ZSXb5xrw7Xc
Kc83XLJ1HXKIbb9s761r4/XbgFG3Yh2u5JupM/JeyF3Wl44Wz8PxZurXcX2X
eZ6O/7P/IXwX+H7Z/1l4n/C+8X+h256yBXnFuYv8xjwIjrDdk/mLbtYTbHss
24z9+odfX2E4liGsX+GavLZlQsmJghslbwqulUyabvPcMnwTd8ssx6GCS1XX
i7r/6T6kO+pH4MtLNpw2efH60yYPPvig48wTTzwx+drXvjbX1iu2iC1ii9iS
my3l2N0pYzjeBuNqwBfUj8gSnyGVHLl4pV/bZss2Wtun7fupcvMcnm/7KG1/
td8fjV/bxmv98Pyq43PtwB5DbL+qbY+day82+cn2Y9v+XrrZbsuwbX+27fd2
ed30MfvtrKE8T/Fcv7+6qo23yl21XdUnXtef7rvn2qh3eO3rO2ra5AvZZ2Xb
9G+pGCdR1W/t9/E6HhR1pqp2UOufXPHbTy1X/PZV//yqPu6qfuu6MP3rVfVR
V7Xx0l8VJ+2+pvu/xTAGfIHuuuuuySOPPDJ57LHHVtSTxBaxRWwRW3KzxZZf
OBaZY5zBGLID6c86EsuZPObib+pQdgyeO75v81wdaVZn2rCCJ5Yj3G+5ZBnj
v0PcJl8sg7DP5w63bb/oCrfp57Z1JLY1Wj7Rzb7lkk8XzPfJ+oyq4onNe5ZL
c/3CU/+WN+yT9se02Txt+5l9vlQxxY6rs+GxnuW3D9vjNm627Zhx9+/fctf2
u5ftxhfO891njP//pup/2Nz/ySLv2D5snxs2z7GuwP5iOxbN70/2+5tZL7F5
2fYh+/m/rl+8Lm6WT7ZeZsfYVXGwaVxe6P5ZR0LbLhlz+PDhsp7EvmrOexRb
xBaxRWzJzRYa6khVjDlelCHLMTwFb9Amt3/XBZPzzz/f6RWveEWpPXv2lL+S
JK1OYdwc8rnPTbCgqo4Extx3331z7bxurN2/PBvFFnBeXJGktSvk31ce2OfG
FFWVyVLZYssvnO+NOdkQmMNxOhxXh7ILtnfveOlk+/btk61bt86J+/ArSdLq
FcoPYI0dY8dtlDV8xtx0001lO+/jjz/uGMO1p2LZIq5I0toWueKP323Dlqry
y1wdaVomQtuta+Mx24gDePL93//90TrjjDMkSVpAVeVXsOaSSy45OX/ArOmw
oo607gUlYz74wQ+6uQJf/epXV5RfQmxB/UtckaS1oxBX5uYmtWSLLb9gbT5w
Bu28qB+hLMR+PPY/s68P7UAhzoydbpIkdRPKEgcPHpzrI+eYRDAG8xs5PwD6
8R//8drySyxbxBVJWtuyXOnKFr/8YtcPxnp4xwu2oHxUjqGb1pPqODN22kiS
lEfgzBVXXDG3xhXnF9xW0UfdVH6JYYu4IklrW+SKHbPbli1V/UeY4wiBOS7s
vSfXpOF4G58zY6eJJEl5hTz+I6+6ohzzVq75UKyR6c8RCJVfYtkirkjS2ha5
wjVyurClqvyCbyi5b6hNGePCLfjl1hosroE4oB+riTPr16+XJGkVyXLm6quv
nl/3s9iuGmMXU34JsQVhiyuStDblc8Wud9eWLXXjX/CLNt5jF29wbbsoGx0r
+qfwi7lQ5Iz4IuXQhg0bnMaOx2pV7vQDZw4dOlS269r1G9jG22b8S4gt4orU
h5Av0GcxdjxWsw4tLWUJh1yx6921ZUvV+i+2j/ruYo4A5wpwTakQZ0LvkCSl
CtyxGjs+i6ou6eTnVeRj5PFrr712xfpUdo3M2PJLLFvElXpt3LhxTkNfb7Wq
Km8MwZGx7ztn+qHs8jdbtkyenOptZ589eVEGrth1+NqyxZZfML4Obbv4VgkE
5uCbBe67UEUb732XnO3aeMiZGMaMne+H1FlnnVWpIa+12tR0P1XsycGfse87
d/rlSCebb8kZflfOfiMutf8oli3iSr1C/1+GutZqU868cSqn34emZRaUXyiU
Y1Cm6cQVfBupI1ti1n/her9cKxhjYGI449/D2JyXVqfq2AONHbdFUpd0quIN
8ji4Yb8jy/pSavtLDFvw7UZxpV6h/zNDXWe1qSlf9MGQse85d/qhrcWWXaxu
2rSpE1e6sqVx/MvyrI+a3w54c9HOi/VnfM7U1Y/GzvfS6lUTe1SGyZtOljPI
4+CG/401u0ZD7PyjWLaIK9WK/V8zxHVWi3LnjVM1/VBGqSu/QJcsLbXmSle2
1I1/YR0JbS3HOUfbtL8gDpjH3VRHGjvfrzXGjP1O95VH6o7nZs/Y99tX+uVM
J+ZdcmbFN+6n9aXU/qNYtogrYssi541TMf3+YPPmYPkFx9typStb/PEvdo0G
fqOE/VLYdrp8WyvOjP08pNWlGO5QY8d1tadTHWewbref/9vMn45li7gi5ZQY
0k2XFON2m4SxMFXnh7hSlf+7zJ+2azRAaPPFmLp798/WrGN9CWWkEGfEGCmH
xJ5h08lnDTmD/M5vxLr+6ks3u7X+267/EmKLuCLllBjSTf643TrBX10YtVyZ
cqQrW/z+I9aT8GvnOPKX67+IM1LfEnuGTac6ztT1UYMx5EtM/1EMW8QVKafE
kG56MqLswvlIdWGEuNKVLXX9R7aO5MpIl29z21BT/5E4I3VVCndOZfbkTKdg
+8s0z7v1Mqf1I7vGd5v+oxBbxBUpl8SQbjoU2XdE1YUT4kpXtlSN37VzHNG+
e2Kv+o+kYSX2DJ9OdZzhN+7tfMe243eb2CKuSLkkhnRTbN9R2/ILedKFLVXf
nwZn8ItxNZzjaNfIVP+R1LfEnuHTKdTOW/WN+9TvB8SwRVyRcig1X5zKDKnS
i6dKKbu0Kb+w/6gLW/z2F85vLOc47p3Vi9C2Gzt/WpyRukjsGSed6jjjf+Me
v6nfP4pli7gi5ZAY0k1vS2x7adv+0pUtVeUX9E/bNRrAGaz1Dc6cKNp7xBmp
L4k946RTsP/o8m3lOpnI/236j2LYIq5IOSSGdNNQ5ZeubPHH74Iv/EYJ2nzB
FgjtveQMfsUZqS+JPeOkUx1nym+UFJxpO343hi3iipRDYkg3DVF+4ZovXdhS
Nf+IazSwjfdE0cZ7omjj1Tg7qU+JPeOkU2z/UZvvT8eyRVyRckgM6aax+o+6
fH+aazRwjB2/UYJwXV+1+V6JOCP1JbFnnHSq4wzqQ+QL1Xb9lya2iCtSDokh
3TRE+YVjdruwJer7R/tmfdSY7+i+V7Jf5RepP4k946RTqP2Fcxxd++v+TeUY
u87fP/LYIq5IOSSGdNOQ7S9d2NL0/QBwBXrgyvNKzmj8i9SnxJ5x0inEmXcV
+R991PhNHf8SyxZxRcohMaSbhii/cMxuF7bUjd/FOplgDMpG6J/mGDt+r0Sc
kfqS2DNOOtVy5tLN5TfW+L3YLuN3Q2wRV6QcEkO6aYjyC9fc7cKWuv4j/KKP
musyuPbdfWdp/IvUu8SecdKpaf06fqek7fiXGLaIK1IOiSHdNET5hTzpwpbQ
+rv2G2tkjOuj0joNUo8Se8ZJp9jyS5v5R7FsEVekHBJDummo8btd2eL3H+H7
JGjfDbXxap0GqU+JPeOkU2z/Edxt+o9i2CKuSDkkhnTTWP1HqWyJ+f60Y4wZ
Y3f/FeeKM1JvEnvGSadQ+QVj7MCYLuvXxbBFXJFySAzppqHG73ZlS1P/0Vwf
9V71H0n9S+wZJ51S+o9Sv38UyxZxRcohMaSbxuw/6vL9o9AYO/ZXizNSnxJ7
xkmnEGdQN6paYyrl+40xbBFXpBwSQ7ppyPG7XdhSt/4L+qqxxhTYwm+saf06
aQiJPeOkU+z6deAN23i3L52evP5LiC3iipRDYkg3jbV+XSpbQt9vRJ0JY13s
GDv2V4szUl8Se8ZJp9A4u/Iba0V/ddfvN9axRVyRckgM6aZBvt845UlXtlT1
H6F+xDW+uUYm60j83po4I/UlsWecdArVk7g+Ztv5R7FsEVekHBJDumnI9Xe7
sKVu/C7ae/mNNehE0T9958Ua/yL1K7FnnHRqGr/L761xjYYD53xfq/G7IbaI
K1IOiSHdNPT43bZsqZs/DaHOxDUa2NbLbXFG6ktizzjpFOo/Qrsu12to238U
wxZxRcohMaSbBuk/mub/rmyJ+X4jvhPrrqX+I2kAiT3jpFOo/4hj7NjGe8fu
pSzfbyRb8Kv+IymXxJBuGrL/qAtbmtZ/YRvvcbbx7lH/kdSvxJ5x0inUzsu5
jm9ePjnHsW3/UYgt4oqUQ2JINw3Zf9SFLf74Xbbzlms0FHxBm4tdr0GckfqS
2DNOOoXmT6NeZOc4co2GlPG7MWwRV6QcEkO6aaj1X7qyxS+/2DUa5tp4L9+m
8S/SIBJ7xkmn2v6j/ZvK+Y3gS5vxL7FsEVekHBJDummQ9V8ObJn1H3Vgiz/+
pe4baxxjh2tgvpM4I/UlsWecdKrtp56yhYxhWSa1/BLLFnFFyiExpJsGaX+5
dFtntvjjX1as8Y02Xm+O43Gt8y31KLFnnHRqM/4ltvwSyxZxRcohMaSbFmH8
S5vyC9eZwu/cGLuCLyq/SH1L7Bknneo4Q67ccdF6tw0epH7/KJYt4oqUQ2JI
Nw1RfiFPurClav70r7zp9U5s48XcbPZRo+8I6/2KM1JfEnvGSadQPzXyP365
XkPb+dNNbBFXpBwSQ7ppqP6jrmypGr+Lfmp+Y43rMri52sV8AXBHnJH6ktgz
TjqF23mXZm0k+F7spZuT+49i2SKuSDkkhnTTMP1HS53ZUtd/xDW+2a57zLTx
ap6j1KfEnnHSqY4zt015gvZd/EJo5735gnXJ67/EsEVckXJIDOmmIcov5EkX
toTmT7tvrGFd32LOEX7h1vxpqU+JPeOkU6iehLZe/N61f8vkxMFz59ZoeNG6
9PnTdWwRV6QcEkO6aYjyy1v3bunMlpj5R2hvwTxtjrUTZ6Q+JfaMk06hehLq
RawrgTNHLjyzbOMFY6A28498togrUg6JId00ZPtLF7bY8gvqRFwnE78Yp8t2
XQrXOCbOSD1K7Bknneo4A56gTnR05zr3Cwb8xI5ZGy/qRjHll1i2iCtSDokh
3TRE+QUs6coWv/8IdSM7xu6evUuTY5gzfWCL+4UwxkackfqS2DNOOtVxBmy5
Y/ls94t6Etp9bR91TPklli3iipRDYkg3DdX+0pUtVeUXf44j5zi5NfIOzOY4
iTNSXxJ7xkmnOs68afdm10cNzkD3XP7S5P6jWLaIK1IOiSHddGhpqf/1X/Zt
7cwWW355+LqDbm6A/UYs23ZRVyrXr9u/SZyRepXYM3w6hfqPbivaeiFw5oaX
nVEy5twzX9BYfolli7gi5ZIY0k03bdrUa/kFbS5d2WLLL++5ZjbH8QM3/fDk
Z9/4StdHjf4oiP3T3BZnpL4l9gybTnWcQXsu2IJfCNy5vmAM+qjBGChUfoll
i7gi5ZQY0k0pZZi6MEJc6coWW34BV7hOJucIlN882r/pZPuL2nmlgST2DJdO
ofaXW3ctzdWRyBj0UceUX2LZIq5IuSWGdFNsGabu/Nrxuxeu78yWqv4jMOYD
N792njEYY7c8G2OHOdrijDSUxJ5h0ilUT0I/Ndt737L/3HKOQGz5JZYt4orU
h8SQboopw9SdW8eVwzs3dmaLP34XbOEYO9SZUFYBX/CLMXboq8Z4O3FGGlJi
T//pVNv+ctEWx5Wjy+e4upJlDPqot53RXH6JZYu4IvUlMaSbmsowdefVceXW
vdtKnrRli99/hP7puTqSWfOFfdSqJ0ljSOzpN51q2192nFnWlbCNetJ17KNe
94Lo/qMYtogrUp8SQ7qprgzzobPPrj0n1C/dlS3++nXsp0Z7L+ZJ375znRP5
gm31U0tjSezpL53qOIP5AGAL6kUQWHPtS04vx9jFtL/EskVckfqW+NFNfhkm
VHaBQlzpyhZ//hHqSFhf6hcOH3JutO+iXZdtvVyvQZyRxpLY0086hfqpsVYD
2njZl3SDGWMHxkBN84+a2HL3Pq2LKQ0j8aObWIZpKrtAtfOnpzzpypaq/iMy
BnUmzm0EW8r+I30/QBpZYk/+dKrjDOpFR3ZtKutJYA7rSFibIab8EssWcUUa
SuJHN12ytBTlr7Zf+uUbZ31GHdjit7+QMw9ff4VbowFturdiXlPxjeujRXuv
OCNJa0t1nLn+/DMcW1Av4vbrt88Yc96ZL4huf4lhi7giSWtLof6jrmypGv9C
xrzr6ovLPmrUldhXrXZeSVp7Co5/mdaVyBnUl8o+6nVx5ZdYtogrkrS21Dj+
pQNbbPnloWtmazRgfgA4gzkCHFfHNl6N35UWQeo/yp9OIc6gXZeMAW8sY7ae
3lx+iWWLuCINJfGje/p1GVdHnnRhi79+HfuoITAHbLlzz8kxdndq/TppZGn8
bj/pFOqnxloNGF/HbbT1cowdGAM1rV8XwxZxRRpC4ke+9OuyrlRXtlSVXzC+
DvUktPFWtr/s0TpT0jjS/On+0qlN+wv6qFPKL01sEVekviV+5E+/UBq2bX+J
YYstv9x/aL/ro374x65y4+3wLWuMr8N3CjjWDtsaZyeNIa091W86hcbvzmnK
GY6xI1+ayi+xbBFXpD4lhgyfftFcacEWv/yCsXWunnTj5ZP7fmjnjC07zyrH
2GmcnTSGQvlG7MmTTiHOoF5UN0cgtvzSxBaUYcQVqS+JIeOkX9P8oy5sqes/
Ktdo2LM0a+O9dFvZxnvXfn1/WhpOTflG7MmTTiHOuP7pC9aV2136j0JsEVek
PiSGjJd+oXF1Xdnizz+yfdSoM92xe2k2Z3rKGPAGbpVfpKEUk2/EnjzpFFy/
rhhfx21/jkBT+aWSLctnl+WXt+7donZdqReJIeOmX6j80pUtK/qPpvUk9FHj
t6qPmhJnpL4Vm29OdfbkSqdQ/xHbdym28WJu4zmx/UcRbBFXpJwSQ8ZPv6bx
L13YUlV+4RpT6KO2jMG43SPijDSAUvLNqcyenOkUU35B3cgyBm28YMw5keWX
JraIK1IuiSGLkX6x5Zc2bJnrP7r28rKNF2s0vPsNl83adXcvzfqody+V2+KM
1JdS882pyp7c6dS0/gvbePGtNfuNkpjySyxbxBUph8SQxUm/mPVf2rLFH/+C
9l30Tz9846vLOhK/UWLrS+KM1JfEnnHSKVRPAltsfclv420sv0SyRVyRckgM
WZz0a5p/1IUtfv8ROPOeN15ZrtFw5N+f4QS+oH3XfS9S7bxSjxJ7xkmnpnZe
1ItsG++Ojd87OTeh/yiGLeKKlENiyOKkX8z6L23Z4pdfwBfXRz2tK2GNTNaL
0LbL+pLaX6Q+JfaMk05N67/ceP7pK+pIKeNfYtgirkg5JIYsTvrVcYU86cKW
Ff1HN766XKOhnD/t9VFr/rTUp8SecdIpZvwL5M9xjO4/imCLuCLlkBiyOOkX
4kpXttjyC8bUgTHuG7HFN0qwPqbro14+++T86ek+cUbqS2LPOOkU6qfmWlOQ
v0ZmTPklli3iipRDYsjipF9oXamubKka/4L2XcwXYB/1T2FdvKJ/2m1P94kz
Ul8Se8ZJp9TxL2AM+RI7/qWJLeKKlENiyOKkX5vxL7FsqZp/ZL8RyzoS5jre
umvJubEtzkh9SewZJ51C7S91a2TGtr/EskVckXJIDFmc9Gtqf+nClqrxu2jn
BWswx/FIMTeAY+ww3u62XZrnKPUnsWecdErpP0otv8SyRVyRckgMWZz0C43f
7coWW35BnQj1JAj91Xdd9mLXpss+I26rnVfqU2LPOOkU286L39ec98Kk9V9i
2SKuSDkkhixO+sVwpS1bVnw/4Por5upI5Aradm1/tTgj9SWxZ5x0Cs6fvmBd
5RzHrQnjX2LYIq5IOSSGLE76hbgCpnRhS2j9F9fGW6wx9abdm8tvlGieo9Sn
xJ5x0qlp/IudL5A6fzqWLeKKlENiyOKkX4grXdlSNX/artEAtmBs3Vv2n1ty
BvMdxRmpL4k946RT0/ov5Eyb8buxbBFXpBwSQxYn/eq4cnjnxs5sWVF+8b5R
Uq7xbdp41c4r9SmxZ5x0ihm/W/eN+6jySwRbxBUph8SQxUm/pvaXLmzxx++C
M1ifgWPsfvKlpzuRL9gWZ6Q+JfaMk06x4+wsY2LHv8SyRVyRckgMWZz0S+FK
KltWrF835QvqSeirnhtjt2vp5PhdrV8n9SixZ5x0im1/afv9oxi2iCtSDokh
i5N+Ke0vXb5/5OYIFG28EBiDNRnAljuWz3F91Bhjh19xRupLYs846RTizNFp
/j+ya9Osj3r622b8bgxbxBUph8SQxUm/pvXrurAl9P1GrpHpvhG7b2tZT9I6
mVKfEnvGSafa8bsXrJuNsZuype38o1i2iCtSDokhi5N+oXkBXdlS13/Eb5T4
a0yxz1qckfqS2DNOOoX6qcEWrtHQZvxLLFvEFSmHxJDFSb9Qu25XtoTG74Ix
Gr8rDS2xZ5x0alrnu6qPOmX93Ri2iCtSDokhi5N+TevXdWFL3fxp+401v41X
3ymR+pTYM046NfUfYb0G18Z7wfw3SrYmzp8OsUVckXJIDFmc9IvpP2rLltD6
L2AM+OIYs3xOyRiN35X6lNgzTjqFyi8YY+fWm9px5twaU+ijBmO2Jq7/UscW
cUXKITFkcdIvxJWubKnqP8L8RvUfSWNJ7BknnUL91JwrwL5q28YbU36JZYu4
IuWQGLI46dc0f7oLW2LG76r8Ig0psWecdAqu/zKtG9X1UceUX2LZIq5IOSSG
LE76Na7/0oEtdeu/2G+saf06aUiJPeOkU4gzaN8tv7E25Q3beM89M778EsMW
cUXKITFkcdKvtv+oKLd0YUto/ZfyG2s7zyq/scb+anFG6ktizzjpFBpnhzG2
6JtmfzXqSinjX2LZIq5IOSSGLE761XHF8aQjWyr7j6acqfrGPetI4ozUp8Se
cdIpVE9yfCnqS3aOQGz5JZYt4oqUQ2LI4qRfiCtd2RL7/Ub2T2N8jfqppT4l
9oyTTm3Xf0kZv9vEFnFFyiExZHHSL9Qv3ZUtofVfUGdC+y7k5jhyvQb1H0k9
SuwZJ53qOIP+6XKO48s3tuo/imWLuCLlkBiyOOlX23+0a1NntjSt/8I2Xo6x
0/ePpL4l9oyTTsH+oylr2N4L1uRY/6WKLeKKlENiyOKkX3D9l45sCa3/UtXG
q/nTUt8Se8ZJp9j1X2wbL/mSuv5LHVvEFSmHxJDFSb+U9V9S2RL7/Ua07drv
rYkzUl8Se8ZJp1D7C+c4QlVrfLdd/8Vni7gi5ZAYsjjp1zR+twtb6tZ/4TdK
wBbOEbDrfYszUl8Se8ZJp1A7L/I/OMP+6rKPev1pyeu/hNgirkg5JIYsTvqF
xtV1ZUto/Rf3jbVdSyvG2On7R1KfEnvGSafQODt8Yw0syLX+Sx1bxBUph8SQ
xUm/Oq64cW8d2RLbf6TvB0hDSuwZPp2C7bwXrCv7qfHLNt6u3w/w2SKuSDmk
8svipF9T/1EXttSN3wVvLGPsGDuNf5H6ltgzfDo1cYZ8aTP+JZYt4oqUS2LI
YqRfHVccSzqypWn9F7fG966lso0Xbqz3Lc5IfUrsGT6d6jjjGLB32+SWXetd
+y7yP3jDPmrWk1LXf6lii7gi5ZIYshjpF+JKV7Y0rf/CMXb85XoN4ozUt8Se
YdOpdvzLhWe68oVbr2Eq9FnbPmowBkpd/6WKLeKKlFNiyPjpV8cVlFm6siW0
/ktdG6/Gv0hDSOwZNp1ix7/Yb8SSL03ll1i2iCtSTokh46df0/p1XdgS6j+y
cwQ4x5HtveKM1LfEnmHTKTRPAHke9SW3vW9rWUd6yYbTkttfQmwRV6ScEkPG
T79gv3RHtvjzj1A/qvpGLNeYUv+RNKTEneHSKdR/dHRn0b6L9t5p/r/e66Nu
Kr/EskVckXJLDBk3/UJc6cqWpu9P2znT6j+ShpbYM1w6xfQfVc0RSOk/amKL
uCLllhgybvrFzp9uw5bY8bto52VftdpfpCEl7gyTTsHxu8X6UthGu+91L8s3
fteyRVyRcktll3HTL7h+XUe2NM2f5txG91v0V2v+tDSkxJ1h0inUT408z/5q
tJ1wjmPb8S91bBFXpD4khoyXfnVcwViXrmxpWn+Xa2Pab6xpnW9pSIk5w6RT
qP2Fcx1RT3J91Injd2PZIq5IfUhll7zpl3JuHVcw7qUrW0LzpzX+RZJOHYXm
OZIv6KPGdtvxL01sEVekvqQyyzgKzp/uyJaY+UduzIvGv0jSmlbT+BfOF0Bb
b675Rz5bxBVJWluq48ptXL+uA1uayi/lGDtco5jvqPVfJGntKdTOe8fy2e4X
smt8p/QfxbBFXJGktaVQ+aUrW2z5xX3jfsoWfuO+HGNXrCtTfu9+ui3OSNLa
Uu04uylf0N+DXzAAjEFbb0r5JZYt4ookrS3VcQUc6cqWqvlHVW28doyd6kmS
tPZUxxnkfdSVXHtJsd5U2/nTTWwRVyRpbSnU/tKVLXXr16F+hHKRHbPL7aby
i1gjSatLPmOq1snkODswJnX8SyxbxBVJWjuK5UpbtlSNf7HfKOG3Sewc7ab1
X+o4I0nS4styBtxA/Qjljbfu3VK294I1bca/NLFFXJGktSmfK+BJV7Y0fb+R
bbvom7btvYjD9u3bazkj1kjS6hPzLPIvOePG2O1ecr9s77V1pHPPfIFT6vcb
q9girkjS2lMVV8iULmxZsX7dNQdXfOPetvHeeP5se8+ePSs4U1dXEm8kabHl
51XkX+RxcIP90mzjBWdsH3VM+SWGLZC4IklrRyGu2DEvbdlSNf6lbo1Mu17D
Kw/sc+280Cte8YpSiBuFchZ18OBBSZIWWDa/Iv9iva8brvuPji2sI7G+ZOc4
xpRfYtkirkjS2lIdV9jm0oUtld8PuPHVrp40t8ZUsUYDtg/v3Dg5ctEWxxrE
D/G5+uqrJ4cOHZpce+21TrgehHE60OHDhyVJWmAxrzLvIh+jnME1Gsr1GqaM
sXMco9tfGtiCb9GKK5K0tuRzBWUXcMWu/9KWLVXlF3+MHb/ZaMfbQW7NBqzf
sHzOyTF4nl/84jjd9A/Z789y/B7c9jzsc2W0Yo0It11cj99/s9vuvKlfGwde
j/4YHrcRrv2OlL1GzP1j7JE/vplr8uB3Njap+Fbd7pl/CO5bi7qti+P093ac
c9F6d/yu/bMxTdh/96XbJnfuWXLHsB9uCMdOHDy3PI5jcEPHD2yZ3HnxhtL9
jsu3ud9jZt+x5Q3O39sv3eyO33vZlsk9e2dhvuvK85wbx7H9joPnTI7v3+S2
IZzD8x64ars7ft8lZ7vtd77yByb37j/L/d5/xbnu9+0HlpwfuCG44Qf7cJzn
IAxsPzC9Bn5tmNjGuXA/UMTJbpfHpsK2O3d6jPv9fTZOvAb2Wbd/fV4PaQMh
Lcpzp+lhw0HYSB+4kXZML+j4vrMmd+89y6UvwsExPA+kP9zOz4HZ8+A2/Ntn
efe+zXPb8MNnx3fCPn+7D9tvnl6P7xr2uXeueN/gnuWTs922e4+LY23LL2KL
2CK2iC0ov/Ad7MIWW35BnYj91BDrSHaNTPYf2TW/yQV/PQf2bTMM+uc+9nnT
n/+NJXsOt6vCtNfmMX+8MVli1/y0TCP7eB73xd4/z/Ov7fYV88NsvBkPV+cs
/HCfCwPrKnPf9BfsubUI59bCzX3gDsR92CaP4AZnILyD3I93kQwiZxyXpvkA
DMJ7zXcebmzj/Xbb07xDf+7c5WKft81jJ5CPcK7dt++k++7iOP3QDd64/dN9
bpt5ct/sGPch33P7RHEMeRu/J4rj5BZ+sc/l/cIP9pEz+OU5PI442G2Gh7gw
ru6ei7hiG/vv3FPcb7Gfz4H3iG08izcX6QBh2z2/wh/9WP/I5wzLbU+f6bHi
PJ6LffSPePD/z9z/qen7wLDAD/t/jP8LsY26Ebfxf9OOsSNfmsovYovYIraI
LbnZYssvrBdgDtNsTbxzVqzRwPG7lgdV33eM5Ucsh6x/P8xQfBDfmHP8ONXd
U+j+Y3joM9nyxTHEY8wRwxWeQ7+WOdbv0YI1Rz3dbvaTRbcX7wzfTe6z7qpt
333M5CGbn+g+vrzSbXlyouAD8+2JvSfdxwom2XOcuzh2vODOHLPMuSUL7DnF
eT73fDa4+9pjti0j9mwo/d5tjpMHs7x+8vqWMTa9bBx9P0xju22fAZ8dWUDR
TSZYf0fNM+e7Yd14v7iPY+u4zW+uvX776ZMdG783uvwitogtYovYkpstc+WX
fVtPlvmLOgTzhV/u99fj9esQfv3B+rf1DxuePc93+/5tmKwD1cWnqh7n18Gq
2OCPWY6+fz+uxdro5Af7+cr6WvEM+R0rziODH/KD2zh2e3E+97FMa+tOKOv6
PKliyO01x1dwo6gTufrV8km3O4Y6wrQORQaUdasi76I+wXoD6z6uvdjkbdY7
WFdiHYX1K7b/2vOdf3uuqSPRP3nEuhDD4L7jFXUy8sXVp4q8z7gdK+prdN9t
76dwsz5Z1p/QFn5gaY6Pfhq59t/Cj2Pa1I16K5+B3Wad1tV5C6ahTmvZw/rv
HJeKepP9n3K7YRCPHS3eB/Y5OP9FHzXeT7Tvvua8F5bzA7A+w/al08PlF7FF
bBFbxJbMbLHll3tft899u/r6888o6wLMb+yfRZ7AtnXb9lH273K7qo+67H/2
/PhhzLlNHzX7odnHzPNtWy6vZ+sorm22yP/sz+Y57npePzjd8G/71GPvn9dg
HzWeHf26Pmp+T6pwu77ti9bP9XvTzf5otrfB7foPbX822/+K9jy+I7bd17Xr
FdvuPdyzNNePieOuTsI+TbiLPm28x3cW7b2uPbjIc+x3dfliKmyTK2w7RZ53
+fqyLWW/Nf3QjX5f8oL92HSzv7rsPy76mKv82vBtezD7wrltz2GY2G+vwTZf
Gx7CwD3CH9uLy/sp0sLe27tM3Nn3zD5+l15FPzb7oV26GTfTlH3UDIPPBG73
7ArWOH/oY/a4g2dJLvnPn+Nd8N6gnZlutu1iP9491I/4fXuwhfWjHVuWguUX
sUVsEVvEltxsseWXz3zoIVf2sUJbDsK07Zh+nvLHw/n5zx8/Zxlg62MhjoXC
5PmsV9nxcszD5Ri7ghvkFO+hKk48v+SG5U/M/RffBkf5EvtYP+I+tp+BBZa7
rt6DsXXk0nQfnnXZJ83+w6mf2+04votmZdlyDF7RJ813znKEfdIsN7v3b+rn
mHkfXVnfMKcc74V8Z9x8522eYXuqy3Po38VYPdZNCs64PuS9J/uLuY91nDJf
7j+Zx+0xO46P/c92vBz7nMGKB4pxcBz/Rj+sa1kuWW6QOeSNZRruw44H5HHL
n/Jei/snZzjmrqxDFenEfS5NTTqW4weWT44nYD2L4w1cvWzf5hVj8Kzbf/6z
fusN5TvDPury/5RpB8a8RjDB75uG9u+6oGTMI488sqL8IraILWKL2NKWLZi/
1FR++cY3vjF59fIO1/dkhTAhnz8+i0LHh5aND7fxW7U/NbwYd2p4VXGuiyuP
+fdlhf8LkN1G3dff33RO1bnOPX3fsM4QtvFLN7fpj257HLrB8399se96sw9t
iXbbP2bPs25s+3J9qy/f6H79YzHXwPYNXvj+9a734u3fX939W38hd5WYxv52
VViUfTb2ecPtv0d855D/wQK7phSF9l3McyZjUH55/PHHJ1/72tfK8ovYIraI
LWJLbrbQnv+3f5088/RTrmyD9hqEtfX0auEYdN6ZJ38x18nfhrBN1e2zbn+f
f07IbeNl4xMrnFPntmFV3X/VtVPuFc8v5K9OVWmBdZede/1pc3Er9zfFs/Bn
4xSKr+/mtv+/agjZ6/pxn0vj9c33UHVPIfcQ9+2HH7pf3ic1t495Zrr9onUr
z+H2uV4e8fkCv1ivBWu0YK2H++67b/LxRx+dPPHEE44xzzzzzOS5f3lWbBFb
xBaxJTtbyvLL88+7etLXv/515wecQR9UHWekduL3qIaQ/z74SuEvhHcRKplV
I/qrUvDc9adJ60+LSsch5b8Htm4EvqB+hLXlwJgHH3zQ8ePJJ590LAFj0LYr
togtYssCaI2xxZZfUE9COy+OP/bYY5MfedUV7hpj58u1ptXMmVjWiDNrizX2
+SNuO3/wRXPr49r2XbADDAFLUG5B+UVsEVvElgXSGmEL7bvf/e7kueeec31K
aJtBGw3KOijzvO4/vGaye8dLVW8Sa1awRvWlYVgzNmOQ98EVjKUjW3y+sH7E
9t2nn37aMcXVjcQWsUVsWTytcrbY8gvbeVlPQn81OYMw0IbD76IgbIjXkiRp
7Yv5nt8iAhMsXzC2zm97EVskSWpSG7bY8st3vvMdV6ZBvxL6lyxn3v/+97vx
M2RN1XeZJElau/K/mQgWgAlgAxgBVti+abAETBFbJEkKqS1brIEzbOtF+ww5
g3IP+p3Q/4TwUB5C2GSOJEmnhpjvwQCwgH3SrBuBGbbfCEwRWyRJalJbttjy
i+PMv/1ryRm01WCtGMsalIcghA9hTRlJkta2mN+Z/y1bwAiwouTLlCHkidgi
SVJIXdhSWYYp6kpoq8G4O5R9yBoI42gQPoS2HUmS1raY35H3yQEwAWzgOnW2
blRbPxJbJEky6sqWOs64uY+GNSgHIUyMAYZwDUmSTg0x34MBYAGYwP5osKKJ
L2KLJElV6sqWGNagHAQhXLTn4BqSJJ0aQp6HyAGxRZKkHMrFljrWcB4BwkMf
FMKWJOnUEvI+GMC5RWKLJEk5lJMtMplMJpPJZDKZTCaTyWQymUwmk8lkMplM
JpPJZDKZTCaTyWQymUy2yPZ3//Ds5AcPfXKy8cpHa/XhT/9l6f/un/9yrT8c
e/Bjfx4dNsL93Jf+1vnFtr1Warza3t819/zR3L3FhGkN5/thLt/w2+66OeOA
MBDuq2797FzYMtmiWl+s+Iu/+Ufn9/C7v7jimvDjswF+oZh4Qchj//zst1eE
nXJ/0Je+8s3y3pB3UyyGK7nigOcQy1OZbJEM+R0cCOVlv/yCfFDHJPySM6Gw
kT/5/xjml19S49X2/nzOMT4xhnOr0gL7kBa54kD2wG8Vs2WyRbS+WIHyC49h
2xr8xJRf6uLFuMXUEULh2LIC2cZ7bbJYruSIA8suSB8/LWWyRTe81ynvbl29
B8a8YNtUbNhws86F+g3LITxmuZMarxz353MuZL/xh39dW2fhvTGdusRBZRfZ
ajXLCrzHyPtkQxMrrPmsgLGs49cT/P/bjIfNUyGGtb2/kPlsC1kKV7rGQWUX
2Wq3lLwFC/2Pr2KSDZt1I+TDmPJLjjbNlHBSyi+hcJvuLTYOKrvIVrPZd5ll
C9Zfmlhhrar8wjYYhM++nqq2Fz8eVe4c9xeylPyfmg5t46Cyi2wt2KKUX/C/
2vY7n+rlF5VdZKvd+iy/wNgGw3adqrYXXivUn5Tj/kK2aOUXlV1ka8UWpfzS
NV51tlrLL0wrlV1kq9X6Lr/YNhhblkmJVxdbjeUXjgtW2UW2Fix1bFlojKsf
lu+25ZfUsNpaSjgp/eIMF/3VdWH55ZeUOOAczQeQrWazecAvvzSxIhSWNeQV
5hnblxQbry4WG07K+LcUrrSJA8LFM1DZRbYWjOP+6+Yu+v9DMV6uam4f225x
jHkDYdvzcR3bvgt//nj6tvEK3V+s35TyAsIN1fXsvaXGoW4eBtIuhs8y2SIY
3n++r2wr8XlgWRHK7zhWxQr0syJM/F+u+59fFa8Qw2LzmL2/kOEeY8sLKVxJ
jQPLMF14KpMtmnE9har3Gvnc5pem/684zrmHVfnWzktEvgvlm5R41VlK2SGW
BYxbiEn23nKWX2z6ymSLbP477+cXlDcsK0L/X9km6Vub8gsslMfQnhFT3ojl
RUr+T+FKShzapq9Mtpqtqr2yro+Fc/9i5kTCEG7bdtyUdtOUvpvY+KTcW64+
LD99ZbJFtiFY0ab/KGR98CIlzNR0yNWH1YXFMtkiWup4sRxj8trGq85W6/jd
KvPTVyZbZOubFW3H74YsJY+txvG7uVksky2qqfzSLlyVX2Sy/llRNX+6axuM
yi8y2dowlV/ahavyi0zWLytS1q9LMZVfZLK1YWul/BI7d7HP8kuOOKj8IltN
1icrUr4fkGKp5Zfc3w9oU37pGgeVX2Sr1fA/Nfa7abAu67/4FgorNV51lvrt
RIRdN0bf/65bnV/sQ/z8uaGxceh7TRyZbAjrixWp32+sunbsdyVDFvp2oi23
+WvH+fK/RRvLlTZxaMNimWxRLeW79TDklzo2cM17tuc2fTe+KayUeLW9P7CC
xrWd6vza7xvAsF33nXsbt5Q4pKSvTLbI1hcr8P8bfqvaHdgGEyq/sIxSV36J
HQMcCgf60le+6fzhHkNrzvjxjeVKShy6sFgmk8lkMplMJpPJZDKZTCaTyWQy
mUwmk8lkMplMJpPJZDKZTCaTyWQymUwmk8lkMplMJpPJZDKZTCaTyWQymUwm
k8lkMplMJpPJZDKZTCaTyWQymUwmk8lkMplMJpPJZDKZTCaTyWQymUwmk8lk
MplMJpPJZDKZTCaTyWQymUwmk8lkMplMJpPJZDKZTCaTyWQymUwmk8lkMlm1
3f3zX55svPLRWn3pK9+c83/NPX+0ws/yDb89+bt/eDY6XBx78GN/3hg3hPmD
hz4ZjN9v/OFfl/7/4m/+cUU8bFiI5z8/++2osHGfXeNnw0iJW0ra8dxYw/kf
/vRfRvtNeTdS4hAbbo7nVGX2vamKH9Mo5h206ZkjzZrCeNWtn+3lXmxaxsQh
Z15KtZx5HenzuS/9rfOL7Tp/CCOFc/Z5p8QhNf1jLTUOIatifpXl+D8Ag78c
4TTFNYaNud73ocKJfa65wsn1zGMM4eFdrLqW/38R8a/yi30IJzZc3l9TWuD4
4Xd/Mfh87ftWFQ8bd3vNprBj3uOUMFLilpJ2/rlNhvfT//9XZ7HvRlMZyudC
yjuX4zn5hv/3OLeOvzaNmq4Pf23vrc6Qv+vCgHCccc95L7H3wfeQ18zxjFLf
oVx5HQxBWDFphLRM4Zy9n5Q4pKZ/rKXGoc74zsU817r/GSn/B3KFgzBwnyj7
VlksG3MxaYhwUp5rrnBy/O+PNTwzxLnJQu8s6gE4ZsMJhcuydOo94Nqhshuu
CcVcE2HBb927HBuf2DBS4paSdmR17LseikeV35h3g3Hgu+nHxedCbLgMu+tz
qotv6F1mfFOvn3JvMYb/UXjmdXmlr3sZ+hm1eYfa5nXLkZQ0SuWcf39N4bbN
I7GWGodQOCnMqbO2/wfahpOSV5rCycGkIcLJdV8p4fTxvz90rZj/Z6nPPoUv
sYbwcV5du2kq07rmwZQwUssvfd1Havkl5d2wZXfGJ/XdqAu7Kytjw6z6f9ZX
+sYYnjOuX1du7+tehn5GOd+hpjxiOZKSRl3e5b7CTbGc/79P9fJLjvsfIpxc
95Vafsn9v7/Ntayp/LLSVH6ZrIiDHT+AbZVfutmpVn7J8Q6dauWXvuLQJpwU
U/lF5ZeupvKLyi9d/fpx8P//qPzS3k7F8ot1t3mHVH7JE4c24aSYyi8qv3S1
2DFLvLe6uQ5V/dN14TKsIcsvHL/TdtxrlaWEkRK3lLSDu6/xGanvhn3vuY/z
1WLfjbqwc73vdfG1hrj5/8/6GB8dY13KL7C29zL0M2rzDrXN6z5H7L023UsK
56ruL3e4KZYahzrDnKqc/3e75u3YcOivbg6gzSs5rrco4fT1jtZZH//76wzj
5armREN2DiKuFxo7i/+fdmx+U7ihceB1xvHRdYZwQ3MBkHb+nAmkdZX/mLyJ
MGLzcErcUtIOvynpmMKc2HejqQzlcwHh2jIotpk2NlxYjufkG84JvUe4PsNN
vX5smqVYKK/g+gi3Ln7Is23uJeU+cjyj1HcIcQi99yjD2Lxu44C42rlBll1N
94JjKZyz/Owj3BRr4pXP8KawYuc/1c1pSf0/0DUcHOd71pRXmu49B5NyhpPj
uaa+o3XWx//+OiPL667Fd7Tp/6Rlfkq4KYZzQuW2pmumlF9i5qinlF9S4pZ6
H6llklj2IQ6sq4aeIa7flH9C5RfOnWW48Mt3Lcdz8i01v8Ndd33kRes3Ns1S
rCmuISYjPrHlFz8tQ+9g7mfU9R3yDfEJlfHtc0gpr9r05HVinnfM/86qe4hJ
/1gbo/zS9L8sJT/kSI9QXvafbdtwfCbUWdO7FhtOk/n/m4eIT+53t85i+xNS
60cMt4lLKRbTf1R3L4vQfxQbtz7vI6VdOqXdMfXdSOkf6/qcmq7hW5c0GqP/
KDbt+2qvzpWX+nyHcqVRSjyq7g/5F88yx1zzNutP5HjvU/qP+ugH8y3Xex3b
f9RkQ/fXNFmufrEc8cnN877Hn7HMkWMtA43fXR3jd63lnjuSw3KNUxti3utY
43dDNnRe6vMdGnr8LtsiUsasNd1frOV673NxL5flGBOacv+5wsn1PFZTfFbb
/CPbN9C1DKPyi8ovOUzlF5Vf6sLuu/yCX8avbRlG5Zd5U/ll9cRntZVfYLnK
MCq/qPySw1R+UfmlLuwhyi82jm3KMCq/zJvKL6snPqux/ALLUYbJXX7p0oab
GsZqLb+kfD8g5d1I+T5C1+dUFd+6MHOUX3Ku+567/JIjLfvKS32+QznSqMvz
ropD2zJMl/JLjvc+tfyS+zsIvq3m8kuO57Ga4jPW+i8w9N3CP65vhX3+fMaq
cLuWYTimOVR+iR3Tx7HW/r1QMXkzJYyUuLUZ31o3xh/h+PGoe46Q/S5c6Dtc
tgzkx8k3/35Svu+VmsYxZbNQmP53yvBO5/ruXpt6KK4fU36JSfuUtMR2H8+o
zvp8h3KlEf3ZOTNd80hdGSYl/ft470OW8v3GHN8zhaWkR1uL/V+YyoQ6y/U8
ct1XrvgM8axosd8Mh6HcUPV/EnH141MXLsswSIfUNQxwjdA3xUP3wuvymjm+
XZ4SRkrcUvziNzRH0ecM5z/U+bXPJfQddIjrQLX5/nRdmP731VPSOJbjKd+J
T/2mfGyapRieSd15KWmf+r728YzqrO93KDZsljPq/t9Wca5rHmF+bHt/fbz3
TRY79zlXfkhJj7YW+78wVzrmfB6LdF9DPCuZbK3ZEH3tMplMJpPJZDlN5ReZ
TCaTyWSrzWLX/5bJZDKZTCaTyWQymUwmk8lkMplMJpPJZDKZTCaTyWQymUwm
k8lkMplMJpPJZDKZTCaTyWQymUwmk8lkMplMJpPJZDKZTCaTyWQymUwmk8lk
siHt/wOLTqY7
                    "], {{0, 232}, {560, 0}}, {0, 255},
                    ColorFunction->RGBColor],
                   BoxForm`ImageTag[
                   "Byte", ColorSpace -> "RGB", Interleaving -> True],
                   Selectable->False],
                  BaseStyle->"ImageGraphics",
                  ImageSizeRaw->{560, 232},
                  PlotRange->{{0, 560}, {0, 232}}], 6->
                 GraphicsBox[
                  TagBox[RasterBox[CompressedData["
1:eJztnX3QJVV951MrSQRmhnmGGQIINRHdAccBnnkDxmIoSXQxTukCkQRCSM1Q
AzIqDIwjqAEXoiTGGCRZEw0mG11jQkxWY6ywa2Fixc1ukS1rE/+ISW2ZSpky
VRQpkpIUVSZY3u3vuf3t+d3z9Dl9Tnffl77z/VV9n3tO9+nTp1/O5znv/dJb
j15/+7/7nu/5nre/uPhz/aH7rj527NC7fvSUwvND7zp+260vKhxPF1otwmDj
SCaTyWQymUwmk8lkMplMJpPJZDKZTCbLsO985zujf3r6m6O//6u/GP2///Pl
0f/9wmdGX3ni90ZPffbjoz/93d8Y/a/f+/XR//z9jzvBD/3v3/8N5//y47/m
/Nzv+//0dz466S+Pp+w2uv/k8Un/H3/qMff7pU+P4+N+5y/3Yxv8EP04/ou/
/bHKz+MgbKcfv/TjF0I88ONY7uN+bOP+J39rcj/8UGg/3Nzmn9Mez+uxfn+/
9ftp4DXY/bF02rQ0pd+/P/Z52Hvv+0PPH++Xfd5/9unHnBvvH/bBDzf9EP14
D+HHrw1Dv90fCsNwNnwsXGy/n77Q8TY9vrvu+qZx/biv7t5/6ldGf/KJX3L7
//wPPukY8Py/PDd64YUXHBu++93vVhJbxBaxRWxZFLY88/d/6+L8qz970umr
f/yHji8Qzsdr4jNHuvAewE2m1DGI+0OMod9ur/YXx9jteE/p57vu++02Mon7
LWP47jPf8BzMN8xDdcdyv88Yy7e6PFq338bJvOvv9+OzzPD9PJ7bfMbYc/jx
1J3fT79NT939wT5u434yxn/+9lnxPSFXLG/svro8hvfT5kH4GaZuvx+GeYp5
0Yb3w/nxdd3vp6eOMXXX1+TPuX6mDYz5wsfeP/ofH/3Z0Wc+8I7RJ9916+jj
997itj37zNOj559/fvTtb3/bMSeVNWKL2CK2iC3TYAsMZSCwhSJjUD9COiD3
zvzWR1yeB0vwrOH/4n/9lTFriu1wM4x7f8r9ZEVwP+o62G7C8bc6Bnm/cH/h
479cvavW797n0o/wfOfh/8InPzKx3+UVnLtkxH//zQ+PvvCJX6nyEdzYh1/s
4/Yn/ssvu22sK8GNbcyL3M987e/neex+t61IH7fDjW1Mh40T2+EnE0J+xMFt
dce783lhsM+lqTw/3AzP7W2uzz0PPotPjJ+nfV6V3zx/uPGO2fej2leU31lX
R36A8P65/IFwxs8wiMvf74fBPvj5Ltvw1fYyXJUfA/v99ESPL8Pz/zPP79JV
Hu+n3z+/7291/eV23F/LGPDlY2+7fvSBH907et8bdzouPPvss8msEVvEFrFF
bJkGWxxfvvVP7jiyBb+sG+Gc7h0pzvvER98/+vwvvWf0+Q+/b/TER37WCf7P
fug/jfcV2+H+g1/+mfH+X32fc7v9hZ9uhkH4z33op0e/+8EHnJ/bGI7x2Tjx
68J/+OFqP/0Q/TyG4XkO/P72z/90te2//dI4Dm5DHJ9+5CHnxz6G53b48Yt9
dhvcDM/99Pvx2jDwQ4wH26ybxzO8TZtNH/2Mj8dAn/zZd1Zh8Et/KAzj5Lm4
nf7Q9dHPfU33xz4bPmf/+Vu3fcfc+1X4/+jDD7l3EPkBcu9nIWzH+2e30Y13
DvshbEM4bGMYGyfdyHMIBzfjxTbGwzxpz+vv5/F1afPTQ7fdbuOw8dvrp5/H
5Fw/xDBgC34f/5k7K8aAL3fvOmN0154toz/7wudHTz/99Ohb3/qWY02IM2KL
2CK2iC3TYAvshX/7V8cTyNaLUF5CGnCOX7/nJqcPH/6R0Qdu/uHRo7dcPfrF
gwfGuunK0cM37Hdu7Pu5N71q7C+2w//w9ftG77127+jhH7vabUc64X/o2n2V
//4De9wvt+HXHWPc733TVS4+/LpwN71mHH8RBoL7A7e8zm3HueCGkC63rRDd
iON9P/k6d4xLN45D+sow2Mc4GB5ubH/ouitH77nh6irO+ws/BDe241rgZzj4
7339brftPW+8YvSOa1adH6KfYjjut26EdfGV2+Cm//7yXEifTY+7jjJd3M9j
uB3beJz1++EZ1/2J189zIt1I70NlOHddCFPIbSt+333Npe4XYfl84fbfBfeM
y3eMz47v2X8+9Fr3fuLdhOD+1Te/YfSR219f7fu1I2+swuCX2xAOYSD4eYzd
DjePZXz0f+gn9js3tiM98DMc/L/wY/uqcKhnwA/RTzGcPYZuhEV83FZ3vUw3
9+VeP/xgCbchz8MPIZ6fed1FoyMXrx/dcuG60V1XnD966qmnRt/4xjeq+hJY
YjkjtogtYovYMg220DCODu0+7K9Cew/KRogX1/LA1VtH9+xaGR3bu2V056Ub
3Dmsbt+xfnR4+7oJNwS3vx/iPrf/kpVqf2jboYtOr8S4cY3049f3U7detH5i
25sv2Vz5b9uxMtauc9wv44Dbxbnt9OrX6cLxeW98+Wmjn9i2zgnb4YfovuGC
06ptFLb9lHFXx5TxMU67jeHwSzHsdS89dWK/7/ePuemC8f5bXrGxCuPSX/gP
XbzF/TKsH8Y/tx83fq9/+dr99pp4fyB33vJe3rpjfeXmM+L95/M8uH1j5Q69
X3TfuXPD6C2rY8GN8vyxPZvcL/TOfWeN3rG3eJd3nzG694otTu++6jz3i22Q
DYNfHIe4uB/uKm7jp5vnZhi7n2F4LM9j97/j8s0T23i8jc9en92P8Nzmn8O/
tuD1X3mOSwPCIe9DYAvKANiP9+MNW08dvfa8F48efPtbHWe+/vWvj5555pmJ
upLYIraILWLLtNgCgxttt2z/QVsP6kQoc+JcaMshG8AXMsa5d465c3R1vP34
vnPdNu7HsRPHF/ug6n0ow/A9Ybi37TLbVs+cfKcKP37BDvIIbvsOWuZQ7j3e
NummyJGKG+V+62bet8e6d7/In4zz8OpZbhuPO7RjkxOPxz7m35982anjcxf7
mQ/JLGzDfuZ38IH5FHFYJlkeQTjOMsfKbrNuyyk/DNkEt2UI7wfSyrQ4VpXp
qe5PeX1uf+Gu7k9533HP/P8R2Mb/A3i+9tni3SBnxvlspXpXmO/wi22WNXT7
ebKODT4XfEZUebfIh8yzEPIqmYRf5Fvs5zHw4xib9+3+um3M+9zPfUiPO28Z
H9OHbT6T6jiYc/3VuQseIAz+n4Ave8/6vtFrVreNPv/5z1ecYV2J8wjEFrFF
bBFb+maLLb+AKRD6pCC066A8BGa4+4Yy295xWQrbWF+Cm1yB4Hb1qNJNkTVV
+JJP2Hb35edU7wneHwjb8G5hm2MQ3JecCM/3DG6Ghf+te84d+0sOMT5sv237
GeN6WvH+sgwOP/iEehO3wX1k99ku3K1lnIfLY1w8qE8VcSG/YPuRkiuubF/s
Yz5yxxR+xMVt8GM78hPzn/O/YpzvsI3HVkws863Lg4XbnaP4ZZ7m8dxv43P8
K0WO0T1RTyvD022P4TVhuz23H47ncxwteevulbknlf+iMUd5Pawn4d5jG+4Z
7rd7XqUbwrNEuyL/L+FZw2/fP/sOIn/Cj7zBepJ1H7f1hrJeAjfec9YTUD94
16t+wG2Hm/kBfoQhV8gYxgU36xfYhrRUxxv+2PqJi7PcxjpKVV/BOQu3iw/b
yvPxeHtOcg/hbBqr+o+p/6VcP+OBm4wBX7Zt/N7R1pVTRx977LGKM2jvRZ81
xt2JLWKL2CK2TIMttvyCtlyMocE8Jgh9VTiPKyOZOhDYcnR1Q22dCXnab/8l
S+hHXHw/LGPwy/oS/HgvXD2pYIfljXvH9mypGEOGVG18BVt43JgnZzqBDZZD
R8oy+JGSEW4bWFC2L5JDeO+r9t6yPRJulvGrdl9Th7Jtv2RJVRdDnizrTMyj
ro4AjnB/me+YV+HmOVgnYz2L8fl8qOopr9g40YZruVMdb7hk6zrkENt+2d4b
auP124BRt2IdruKbqTPyWshd1pcOl8/D8aYI67i+wzxPx//x/xC+C3y/7P8s
vE943/i/0LkLtiCvOH+Z35gHwRG2ezJ/0c96gm2PZZuxX//w6yuMxzKE9Suc
k+e2TKg4UXKj4k3JtYpJhZvHVvGbtFtmOQ6VXKo7X9L1F9tw31E/Al9euuGU
0fnrTxk9+OCDjjNPPvnk6Gtf+9pEW6/YIraILWJL32ypxu4WjOF4G4yrAV9Q
PyJLfIbUcuTStWFtmy3baG2fth+mzs9jeLzto7T91X5/NH5tG68Nw+Pr9k+0
A3sMsf2qtj12or3Y5Cfbj237e+lnuy3jtv3Ztt/b5XXTx+y3s8byPMVj/f7q
ujbeOn+du65PPNSf7vsn2qi3ee3r2wJt8qXss7Jt+rfWjJOo67f2+3gdD8o6
U107qA1Prvjtp5Yrfvuqf3xdH3ddv3UoTv98dX3UdW28DFfHSbut6fpvNYwB
X6C77rpr9Oijj44ef/zxNfUksUVsEVvElr7ZYssvHIvMMc5gDNmB+886EsuZ
3OfSb+pQdgye279780QdaVxn2rCGJ5Yj3G65ZBnjv0N0ky+WQdjmc4du2y+6
xm/6uW0diW2Nlk/0s2+54tOFk32yPqPqeGLznuXSRL9wEd7yhn3S/pg2m6dt
P7PPlzqm2HF1Nj7Ws/z2Ybvfps22HTPt/vVb7tp+96rd+KJJvvuM8f/f1P0P
m/g/WeYd24ftc8PmOdYV2F9sx6L5/cl+fzPrJTYv2z5kP/+H+sVDabN8svUy
O8aujoNN4/Ji1886Etp2yZiDBw9W9ST2VXPeo9gitogtYkvfbKGhjlTHmGNl
GbIaw1PyBm1ye3ZcOLrgggucXvnKV1bauXNn9StJ0jCFcXPI5z43wYK6OhIY
c999902087qxdv/yXBJbwHlxRZKWV8i/r9q7240pqiuT5bLFll843xtzsiEw
h+N0OK4OZRe4L9n2stHWrVtHZ5999oS4Db+SJA1XKD+ANXaMHd0oa/iMufnm
m6t23ieeeMIxhmtPpbJFXJGk5Ra54o/fbcOWuvLLRB2pKBOh7da18Rg30gCe
fP/3f3+yTjvtNEmSFlB1+RWsueyyy07MHzBrOqypI617UcWYD37wg26uwFe/
+tU15ZcYW1D/ElckaXkU48rE3KSWbLHlF6zNB86gnRf1I5SF2I/H/mf29aEd
KMaZed83SZK6CWWJffv2TfSRc0wiGIP5jZwfAP34j/94sPySyhZxRZKWW5Yr
Xdnil1/s+sFYD+9YyRaUj6oxdEU9KcSZed8bSZL6ETizf//+iTWuOL/g9po+
6qbySwpbxBVJWm6RK3bMblu21PUfYY4jBOa4uHedWJOG4218zsz7nkiS1K+Q
x3/k1furMW/Vmg/lGpn+HIFY+SWVLeKKJC23yBWukdOFLXXlF3xDyX1DrWCM
i7fkl1trsDwH0oB+rCbOrF+/XpKkAcly5pprrplc97N0142xSym/xNiCuMUV
SVpMXbay0ul4nyt2vbu2bAmNf8Ev2niPXrrBte2ibHS07J/CL+ZCkTPii9SH
NmzY4DTvdAxZBzoyxgqcOXDgQNWua9dvYBtvm/EvMbaIK9I0NGu2nHHGGe7/
79vPPHP01JYto78ZqF5S3jNwhdtwTS/pcC/JFbveXVu21K3/Yvuo7y7nCHCu
ANeUinGm6R2SpEXRsjAG10LG4FoeMYxJuQ9+XkU+Rh6/7rrr1qxPZdfITC2/
pLJFXJGWQTdv2jR3LnQVGIJyGK4HbrsPjAFvuD+kGFfsOnxt2WLLLxhfh7Zd
fKsEAnPwzQL3Xaiyjfe+y850bTzkTApj5v0uzVJ4nnWa5bmGprbX0/X+Db3c
QsbwekKMybknNt+SM/yunP1GXG7/USpbxBWxZZZsmca98/PhUEV2nL9xYzAM
ymmtuYJvI3VkS8r6L1zvl2sFYwxMCmeWNU9Iw9cyMQbXg7aWGGOa7kcdb5DH
wQ37HVnWl3LbX1LYgm83iivSkPX2JeEK6j68pqa2JDKoTk1c6cqWxvEvq+M+
an474C1lOy/Wn/E5E6ofzfudkiQrMSYsyxnkcXDD/8aaXaMhdf5RKlvEFWmo
usyMERm63l72HUGf27w5mUMhhbjSlS2h8S+sI6Gt5RjnaJv2F6QB87ib6kjz
fqdmqY0bNzZqFucYkvq4LjGmH8b4rCFn1nzjvqgv5fYfpbJFXBFb5sGWPp7R
srTpQtu2rGTxMqeN13KlK1v88S92jQZ+o4T9UnA7XXlOK87M+32WpGVjDK4p
hzGh+xLiDNbt9vN/m/nTqWwRV6QhKjZGZGhCXYjXlcpLhKu7LzGu1OX/LvOn
7RoNENp8Mabu3j3jNetYX0IZKcYZMUZaRIkx9YyhfNaQM8jv/Eas66++fLNb
67/t+i8xtogr0hCFOsTQ5wJQtp6Tc02hexPkSsGRrmzx+49YT8KvnePIX67/
Is5IQ5MYE2YMFOJMqI8ajCFfUvqPUtgirkhDFsaZDbmNFyw531xLzrGhexLj
Sle2hPqPbB3JlZGuPMe5oab+I3FGWmSJMfWKtr8Ued6tl1nUj+wa3236j2Js
EVekZRDyJ+oYTePSFk22jTaXkaF7EeNKV7bUjd+1cxzRvnt8l/qPpOWTGDOp
EGf4jXs737Ht+N0mtogr0rIJ49SGstYU6kNIc5u+9tD1x7jSlS11358GZ/CL
cTWc42jXyFT/kbRsOtkZA8Xaeeu+cZ/7/YAUtogr0jLrsrLtdxE585ThQ5s1
JkLX3NR/1IUtfvsL5zdWcxx3jetFaNtNnT8tzkhD1snIGCjEGf8b9/jN/f5R
KlvEFUmav2ZRfuGc6S5sqSu/oH/artEAzmCtb3DmeNneI85I0nw1q/ILv2vP
dTKR/9v0H6WwRVyRpPlrVuWXrmzxx++CL/xGCdp8wRYI7b3kDH7FGUmar2ZV
fqm+UVJypu343RS2iCuSNH/NovzCNV+6sKVu/hHXaGAb7/Gyjfd42carcXaS
NH/Nq/+ozfenU9kirkjS/DWv/qMu35/mGg0cY8dvlCBe11dtvlcizkjSfDWr
8gvqQ+QL1Xb9lya2iCuSNH/NavxuV7Ykff9o97iPGvMd3fdK9qj8Iknz1izb
XzjH0bW/7tlUjbHr/P0jjy3iiiTNX7Nsf+nClqbvB4Ar0ANXnVdxRuNfJGn+
muX43XeX+R991PjNHf+SyhZxRZLmr1mUXzhmtwtbQuN3sU4mGIOyEfqnOcaO
3ysRZyRpvppV+QXrYvIba/xebJfxuzG2iCuSNH/NovzCNXe7sCXUf4Rf9FFz
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
6a584dZrKIQ+a9tHDcZAueu/1LFFXJGGKLR/zpsB01SXeZkhrqDM0pUtsfVf
Qm28Gv8iDVFiTFyp41/sN2LJl6bySypbxBVpqFrWuhGEPva296Vp/boubIn1
H9k5ApzjyPZecUYaosSYsGLzBJDnUV9y7t1nV3Wkl244Jbv9JcYWcUUaqlB/
mDcDpqm2a0xE+6U7ssWff4T6Ud03YrnGlPqPpCFLjAkr1n90eHvZvov23iL/
3+D1UTeVX1LZIq5IQ9ayjauzartOQ4wrXdnS9P1pO2da/UfSMkiMqVdK/1Hd
HIGc/qMmtogr0pCFMWjLMJ+xTm3XaUidP92GLanjd9HOy75qtb9IQ5YYU6/o
+N1yfSm40e57/cv7G79r2SKuSMugZa0jHWixTkN0/bqObGmaP825je637K/W
/GlpGSTGTCrWT408z/5qtJ1wjmPb8S8htogr0rIIfblDXRMzpDbrNIS4grEu
XdnStP4u18a031jTOt/SskiMOaFY+wvnOqKe5PqoM8fvprJFXJGk5VKIKxj3
0pUtsfnTGv8iSSePYvMcyRf0UcPddvxLE1vEFUlaLkXnT3dkS8r8IzfmReNf
JGmp1TT+hfMF0Nbb1/wjny3iiiQtl0JcuZ3r13VgS1P5pRpjh3OU8x21/osk
LZ9i7bxHVs90v5Bd4zun/yiFLeKKJC2XYuWXrmyx5Rf3jfuCLfzGfTXGrlxX
pvrefeEWZyRpuRQcZ1fwBf09+AUDwBi09eaUX1LZIq5I0nIpxBVwpCtb6uYf
1bXx2jF2qidJ0vIpxBnkfdSVXHtJud5U2/nTTWwRVyRpuRRrf+nKltD6dagf
oVxkx+zS3VR+EWskaVjyGVO3TibH2YExueNfUtkirkjS8iiVK23ZUjf+xX6j
hN8msXO0m9Z/CXFGkqTFl+UMuIH6Ecobb9u1pWrvBWvajH9pYou4IknLKZ8r
4ElXtjR9v5Ftu+ibtu29SMPWrVuDnBFrJGl4Yp5F/iVn3Bi7S1bcL9t7bR3p
3NNf5JT7/cY6togrkrR8quMKmdKFLWvWr7t235pv3Ns23psuGLt37ty5hjOh
upJ4I0mLLT+vIv8ij4Mb7JdmGy84Y/uoU8ovKWyBxBVJWh7FuGLHvLRlS934
l9AamXa9hlft3e3aeaFXvvKVlZA2CuUsat++fZIkLbBsfkX+3b9//+jG6/+j
YwvrSKwv2TmOKeWXVLaIK5K0XApxhW0uXdhS+/2Am17j6kkTa0yVazTAfXD7
xtGhi7c41iB9SM8111wzOnDgwOi6665zwvkgjNOBDh48KEnSAot5lXkX+Rjl
DK7RUK3XUDDGznFMbn9pYAu+RSuuSNJyyecKyi7gil3/pS1b6sov/hg7frPR
jreD3JoNWL9h9awTY/C8sPjFfvoZHrLfn+X4PfjtcdjmymjlGhHOXZ6P33+z
bndcEdamgedjOMZHN+K135Gy50i5fow98sc3c00e/I7HJpXfqrtkHB6C/7ay
buvSWPzegWMuXu/237VnPKYJ2+++/JzRnTtX3D5shx/CvuP7zq32Yx/80LG9
W0Z3Xrqh8r/zynPc71Gz7ejqBhfuHZdvdvvvvWLL6J5d4zjffdV5zo/9cL9z
31mjY3s2OTeEY3jcA1dvdfvvu+xM537Xq35gdO+eM9zv/fvPdb/v2LviwsAP
wY8w2Ib9PAZxwP1AcQ782jjhxrHwP1CmybqrfYXgdscW+7jd32bTxHNgm/X7
5+f5cG8g3Ivq2OJ+2HgQN+4P/Lh3vF/Qsd1njO7edYa7v4gH+/A8cP/hd2H2
jp8H3Qhvn+XduzdPuBGGz47vhH3+dhvcbynOx3cN29w7V75v8I/zyZnO7d7j
cl/b8ovYIraILWILyi98B7uwxZZfUCdiPzXEOpJdI5P9R3bNb3LBX8+BfduM
g+G5jX3eDOd/Y8keQ3ddnPbc3OePNyZL7JqflmlkH4/jttTr53H+ud22cn6Y
TTfT4eqcZRhuc3FgXWVuK37BntvKeG4r/dwG7kDcBjd5BD84A+Ed5Ha8i2QQ
OeO4VOQDMAjvNd95+OHG++3cRd5hOHfsarnNc3PfceQjHGu37T7hv7vczzD0
gzdue7HNuZknd4/3cRvyPd3Hy33I2/g9Xu4nt/CLbS7vl2GwjZzBL4/hfqTB
uhkf0sK0umsu0wo3tt+5s7zecjufA68RbjyLt5T3AYLbPb8yHMPY8MjnjMu5
i2d6tDyOx2IbwyMd/P8z8X+qeB8YF/hh/4/xfyHcqBvRjf+bdowd+dJUfhFb
xBaxRWzpmy22/MJ6AeYwjdfEO2vNGg0cv2t5UPd9x1R+pHLIhvfjjKUH6U05
xk9T6Jpi15/CQ5/Jli+OIR5jDhmu8BiGtcyxYQ+XrDns6Q6znSy6o3xn+G5y
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
95/vK9tKfB5YVsTyO/bVsQL9rIgT/5dD//Pr0hVjWGoes9cXM1xjankhhyu5
aWAZpgtPZbJFM66nUPdeI5/b/NL0/xX7OfewLt/aeYnId7F8k5OukOWUHVJZ
wLTFmGSvrc/yi72/Mtkim//O+/kF5Q3Litj/V7ZJ+tam/AKL5TG0Z6SUN1J5
kZP/c7iSk4a291cmG7LVtVeG+lg49y9lTiQM8bZtx81pN83pu0lNT8619dWH
5d9fmWyRbRasaNN/FLNp8CInztz70FcfVhcWy2SLaLnjxfoYk9c2XSEb6vjd
OvPvr0y2yDZtVrQdvxuznDw2xPG7fbNYJltUU/mlXbwqv8hk02dF3fzprm0w
Kr/IZMthKr+0i1flF5lsuqzIWb8ux1R+kcmWw5al/JI6d3Ga5Zc+0qDyi2xI
Nk1W5Hw/IMdyyy99fz+gTfmlaxpUfpEN1fA/NfW7abAu67/4FosrN10hy/12
IuIOjdH3v+sWCottSJ8/NzQ1DdNeE0cmm4VNixW532+sO3fqdyVjFvt2oi23
+WvH+fK/RZvKlTZpaMNimWxRLee79TDklxAbuOY923ObvhvfFFdOutpeH1hB
49pOobD2+wYwuEPfubdpy0lDzv2VyRbZpsUK/P9G2Lp2B7bBxMovLKOEyi+p
Y4Bj8UBf+so3XThcY2zNGT+9qVzJSUMXFstkMplMJpPJZDKZTCaTyWQymUwm
k8lkMplMJpPJZDKZTCaTyWQymUwmk8lkMplMJpPJZDKZTCaTyWQymUwmk8lk
MplMJpPJZDKZTCaTyWQymUwmk8lkMplMJpPJZDKZTCaTyWQymUwmk8lkMplM
JpPJZDKZTCaTyWQymUwmk8lkMplMJpPJZDKZTCaTyWQymUwmk8lkMplMJqu3
u3/hy6ONVz0W1Je+8s2J8Nfe80drwqze+Dujv/uH55Ljxb4HP/rnjWlDnD94
4BPR9P3mH/51Ff4v/uYf16TDxoV0/vNz306KG9fZNX02jpy05dw7HptqOP5D
n/rL5LA570ZOGlLj7eM51Zl9b+rSx3uU8g7a+9nHPWuK49W3fWYq12LvZUoa
+sxLudZnXsf9+eyX/taFhTsUDnHkcM4+75w05N7/VMtNQ8zqmF9nffwfgCFc
H/E0pTWFjX2977OKJ/W59hVPX888xRAf3sW6c/n/F5H+urDYhnhS4+X1Nd0L
7D/4ni9Gn6993+rSYdNuz9kUd8p7nBNHTtpy7p1/bJPh/fT//4Us9d1oKkP5
XMh55/p4Tr7h/z2ODfHX3qOm8yNc22sLGfJ3KA4I+5n2Pq8l9Tr4HvKcfTyj
3Heor7wOhiCulHuEe5nDOXs9OWnIvf+plpuGkPGdS3muof8ZOf8H+ooHceA6
Ufats1Q29sWkWcST81z7iqeP//2phmeGNDdZ7J1FPQD7bDyxeFmWzr0GnDtW
dsM5oZRzIi6EDb3LqelJjSMnbTn3jqxOfddj6agLm/JuMA18N/20+FxIjZdx
d31OofTG3mWmN/f8OdeWYvgfhWceyivTupZZP6M271DbvG45knOPcjnnX19T
vG3zSKrlpiEWTw5zQtb2/0DbeHLySlM8fTBpFvH0dV058Uzjf3/sXCn/z3Kf
fQ5fUg3x47hQu2ku07rmwZw4cssv07qO3PJLzrthy+5MT+67EYq7KytT46z7
fzat+5tieM44f6jcPq1rmfUz6vMdasojliM596jLuzyteHOsz//fJ3v5pY/r
n0U8fV1Xbvml7//9bc5lTeWXtabyy2hNGuz4AbhVfulmJ1v5pY936GQrv0wr
DW3iyTGVX1R+6Woqv6j80jWsnwb//4/KL+3tZCy/WH+bd0jll37S0CaeHFP5
ReWXrpY6ZonXFprrUNc/HYqXcc2y/MLxO23HvdZZThw5acu5d/BPa3xG7rth
33tu43y11HcjFHdf73sovdaQNv//2TTGR6dYl/ILrO21zPoZtXmH2uZ1nyP2
WpuuJYdzddfXd7w5lpuGkGFOVZ//d7vm7dR4GC40B9DmlT7OtyjxTOsdDdk0
/veHDOPl6uZEQ3YOIs4XGzuL/592bH5TvLFx4CHj+OiQId7YXADcO3/OBO51
XfiUvIk4UvNwTtpy7h1+c+5jDnNS342mMpTPBcRry6Bw897YeGF9PCffcEzs
PcL5GW/u+VPvWY7F8grOj3hD6UOebXMtOdfRxzPKfYeQhth7jzKMzes2DUir
nRtk2dV0LdiXwznLz2nEm2NNvPIZ3hRX6vyn0JyW3P8DXePBfr5nTXml6dr7
YFKf8fTxXHPf0ZBN439/yMjy0Ln4jjb9n7TMz4k3x3BMrNzWdM6c8kvKHPWc
8ktO2nKvI7dMkso+pIF11dgzxPmb8k+s/MK5s4wXYfmu9fGcfMvN7/CHzo+8
aMOm3rMca0prjMlIT2r5xb+XsXew72fU9R3yDemJlfHtc8gpr9r7yfOkPO+U
/51115By/1NtHuWXpv9lOfmhj/sRy8v+s20bj8+EkDW9a6nxNJn/v3kW6en7
3Q1Zan9Cbv2I8TZxKcdS+o9C17II/UepaZvmdeS0S+e0O+a+Gzn9Y12fU9M5
fOtyj+bRf5R676fVXt1XXprmO9TXPcpJR931If/iWfYx17zN+hN9vPc5/UfT
6Afzra/3OrX/qMlm3V/TZH31i/WRnr55Pu3xZyxz9LGWgcbvDmP8rrW+5470
YX2NU5vFvNd5jd+N2azz0jTfoVmP32VbRM6YtabrS7W+3vu+uNeX9TEmNOf6
+4qnr+cxpPQMbf6R7RvoWoZR+UXllz5M5ReVX0JxT7v8gl+mr20ZRuWXSVP5
ZTjpGVr5BdZXGUblF5Vf+jCVX1R+CcU9i/KLTWObMozKL5Om8stw0jPE8gus
jzJM3+WXLm24uXEMtfyS8/2AnHcj5/sIXZ9TXXpDcfZRfulz3fe+yy993Mtp
5aVpvkN93KMuz7suDW3LMF3KL32897nll76/g+DbkMsvfTyPIaVnXuu/wNB3
i/A4vxW2+fMZ6+LtWobhmOZY+SV1TB/HWvvXQqXkzZw4ctLWZnxraIw/4vHT
EXqOkP0uXOw7XLYM5KfJN/96cr7vlXuPU8pmsTj975Thne7ru3tt6qE4f0r5
JeXe59xLuKfxjEI2zXeor3vEcHbOTNc8EirD5Nz/abz3Mcv5fmMf3zOF5dyP
tpb6vzCXCSHr63n0dV19pWcWz4qW+s1wGMoNdf8nkVY/PaF4WYbBfchdwwDn
iH1TPHYtPC/P2ce3y3PiyElbTlj8xuYo+pzh/IdQWPtcYt9Bh7gOVJvvT4fi
9L+vnnOPUzme85343G/Kp96zHMMzCR2Xc+9z39dpPKOQTfsdSo2b5YzQ/9s6
znXNI8yPba9vGu99k6XOfe4rP+Tcj7aW+r+wr/vY5/NYpOuaxbOSyZbNZtHX
LpPJZDKZTNanqfwik8lkMplsaJa6/rdMJpPJZDKZTCaTyWQymUwmk8lkMplM
JpPJZDKZTCaTyWQymUwmk8lkMplMJpPJZDKZTCaTyWQymUwmk8lkMplMJpPJ
ZDKZTCaTyWQymUwmk83S/j+cId8f
                    "], {{0, 232}, {560, 0}}, {0,
                     255},
                    ColorFunction->RGBColor],
                   BoxForm`ImageTag[
                   "Byte", ColorSpace -> "RGB", Interleaving -> True],
                   Selectable->False],
                  BaseStyle->"ImageGraphics",
                  ImageSizeRaw->{560, 232},
                  PlotRange->{{0, 560}, {0, 232}}], 7->
                 GraphicsBox[
                  TagBox[RasterBox[CompressedData["
1:eJztnX3QJVV951MrSQRmhnmAITMjqYnoDjgOwzNvwlhASaKLSukCEQMaUjPU
gIwKM0xGUAMuRElcYyLJ+hZMVl1jJCar2Viya2FixXW3cMvaxD9iUlumUqZM
FUWKpMSiSsXy7v2e29+e3z1Pn9PndPe9ffvy/VV9n9unX06ffjmf53de+7k3
Hb32ln/zYz/2Y7/87PGfaw/ddcXx44fe9vOnjAM/+7YTN9/0rPHCY2OtjvfB
ypFMJpPJZDKZTCaTyWQymUwmk8lkMplMlmE//OEPR//y2LdH//g3fzX6f//n
y6P/+4XPjL728B+PHv3sx0Z/+Ue/P/pff/x7o//5Jx9zQhj633/y+y785Yd+
14W53Q//5ac+PB0ujqfsOi7/xUPT4T//5IPu90ufnsTH7S5cbMc6hCGGcfwX
//AjZZjHQVjPMH4Zxi+EeBDGsdzG7VjH7Y/8wfR2hKHQdixznX9Oezyvx4b9
7Tbsp4HXYLfH0mnTUpd+//7Y52HvvR8OPX+8X/Z5f+XTD7plvH/YhjCWGYYY
xnuIMH7tPgzb7aF9uJ/dP7ZfbLufvtDxNj3+ctX1zeL6cV/dvf/kB0Z/8fHf
dtu/+qefcAx46rtPjp5++mnHhh/96EelxBaxRWwRWxaFLY//49+7OP/mK484
ff3P/8zxBcL5eE185kgX3gMskylVDOL2EGMYtuvL7eNj7Hq8pwzzXffDdh2Z
xO2WMXz3mW94DuYb5qGqY7ndZ4zlW1Uerdpu42Te9bf78Vlm+GEez3U+Y+w5
/Hiqzu+n36an6v5gG9dxOxnjP3/7rPiekCuWN3ZbVR7D+2nzIMLcp2q7vw/z
FPOi3d/fz4+v7XY/PVWMqbq+unDO9TNtYMwXPvLu0f/48K+NPvOet4w+8bab
Rh+780a37onHHxs99dRTo+9973uOOamsEVvEFrFFbJkFW2DwgcAWioxB+Qjp
gNw78wcfcnkeLMGzRviL/+UDE9aM12OZ+7j3p9hOVgS3o6yD9WY//pbHIO+P
l7/wsd8p31Ubdu9zEcb+fOcR/sInPjS13eUVnLtgxH//6PtHX/j4B8p8hGVs
wy+2cf3D//l33DqWlbCMdcyL3M587W/neex2t26cPq7HMtYxHTZOrEeYTAiF
EQfXVR3vzuftg20uTcX5scz9ub7J9bnnwWfx8cnztM+rDJvnj2W8Y/b9KLeN
/XeW1ZEfILx/Ln9gPxPmPojL3+7vg20I8122+5fri/3K/BjY7qcnenyxP/8/
8/wuXcXxfvr98/vhRtdfrMf9tYwBXz7y5mtH7/n5/aN3vXq348ITTzyRzBqx
RWwRW8SWWbDF8eU7/+KOI1vwy7IRzunekfF5H/7wu0ef++13jD73/neNHv7Q
rzkh/Nn3/YfJtvF6LP/p7/zqZPsH3+WW3fZxmMvcB/v/t/f9yuiP3nuPC3Md
92N8Nk78uv3ff3+5nWGIYR7D/XkO/P7hf/yVct1//e1JHFyHOD79W/e5MLZx
f65HGL/YZtdhmftzO8N+vHYfhCHGg3V2mcdzf5s2mz6GGR+PgT7xa28t98Ev
w6F9GCfPxfUMh66PYW6ruz/22fA5+8/fLtt3zL1f4/Dn33+feweRHyD3fo6F
9Xj/7Dou453DdgjrsB/WcR8bJ5eR57Aflhkv1jEe5kl7Xn87j69Km58eLtv1
Ng4bv71+hnlMzvVD3Adswe9Dv3pbyRjw5dieM0a379s0+soXPjd67LHHRt/5
zncca0KcEVvEFrFFbJkFW2BP/+D7jieQLRfBX0IacI7fu+MGp/cffsXoPa//
udEDN14x+s2DV010w6Wj+6+7zC1j26+/5sWT8Hg9wvdfe2D0zqv3j+5/7RVu
PdKJ8H1XHyjDd1+1z/1yHX7dMWb5na+53MWHX7ffDS+dxD/eB8Lye258uVuP
c2EZQrrcurG4jDje9Ysvd8e4dOM4pK/YB9sYB/fHMtbfd82lo3dcd0UZ593j
MIRlrMe1IMz9EL7zlXvdune8+pLRW65cdWGIYYr7cbtdxr4uvmIdlhm+uzgX
0mfT466jSBe38xiuxzoeZ8P+/ozr7sTr5zmRbqT3vmI/d13YZyy3bvz79isv
cr/Yl88Xy/674J5x8Y7x2fE9+0+HXubeT7ybEJY/+IZXjT50yyvLbb975NXl
PvjlOuyHfSCEeYxdj2Uey/gYft/rLnPLWI/0IMz9EP6N1x4o90M5A2GIYYr7
2WO4jH0RH9dVXS/TzW25148wWMJ1yPMIQ4jnV19+wejIhetHN56/bnT7JT89
evTRR0ff+ta3yvISWGI5I7aILWKL2DILttDQjw71PmyvQn0PfCPEi2u554pt
ozv2rIyO7980uu2iDe4cVrfsXD86vGPd1DKEZX87xG1u+66Vcnto3aELTi/F
uHGNDOPXD1M3XbB+at0bdp1dhm/euTLRni3ul3Fg2cW5/fTy1+n8yXmvf/5p
o9dtX+eE9QhDXL7uvNPKdRTW/ZJZLo8p4mOcdh33wy/Ffa957qlT2/2wf8wN
50223/iCjeU+Lv3j8KELN7lf7uvv45/bjxu/1z5/7XZ7Tbw/kDtvcS9v2rm+
XOYz4v3n8zy4Y2O5HHq/uHzb7g2jN65OhGX488f3nel+obceOGf0lv3jd3nv
GaM7L9nk9PbLz3W/WAfZffCL4xAXt2O5jNuEucxzcx+7nfvwWJ7Hbn/LxWdP
rePxNj57fXY79uc6/xz+tQWv/9ItLg3YD3kfAlvgA2A73o9XbTt19LJznz26
95ff5DjzzW9+c/T4449PlZXEFrFFbBFbZsUWGJZRd8v6H9T1oEwEnxPnQl0O
2QC+kDFuefeEO0dXJ+tPHNjq1nE7jp06frwNKt+HYh++J9zvzXvMutWzpt+p
cRi/YAd5hGX7DlrmUO493j69TJEjJTeK7XaZed8e6979cf5knIdXz3HreNyh
nWc68XhsY/79xeedOjn3eDvzIZmFddjO/A4+MJ8iDsskyyMIx1nmWNl1dtly
yt+HbMKyZQjvB9LKtDhWFekp709xfW77eLm8P8V9xz3z/0dgHf8P4PnaZ4t3
g5yZ5LOV8l1hvsMv1lnWcNnPk1Vs8LngM6LMu+N8yDwLIa+SSfhFvsV2HoMw
jrF5326vWse8z+3chvS48xbxMX1Y5zOpioM511+ee8wD7IP/J+DL/nN+YvTS
1e2jz33ucyVnWFbiOAKxRWwRW8SWrtli/RcwBUKbFIR6HfhDYIa7b/DZ9k98
KaxjeQnL5AqEZVeOKpYpsqbcv+AT1h27eEv5nuD9gbAO7xbWOQZhedfJ/fme
YZn7IvymfVsn4YJDjA/rb95xxqScNn5/6YMjDD6h3MR1WD6yd7Pb76YizsPF
MS4elKfGcSG/YP2RgivOtx9vYz5yx4zDiIvrEMZ65CfmPxd+wSTfYR2PLZlY
5FuXB8fL7hzjX+ZpHs/tNj7Hv0LkGJenymnF/ly2x/CasN6e29+P53McLXjr
7pW5J2X4gglHeT0sJ+HeYx3uGe63e17FMoRniXpF/l/Cs0bYvn/2HUT+RBh5
g+Uku3zClhuKcgmW8Z6znIDywdte/FNuPZaZHxDGPuQKGcO4sMzyBdYhLeXx
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
1O/G6ng1T4Mk9a++2o8QbtJ+lMIWcUWS+ldf7Ue5bEn5/rRjjOljd/dlW8UZ
SepZ8/Rf0McOjGkzf10KW8QVSepf8/Bf3PenW7Klrv1oqo16j9qPJGlR1Gf7
Ue73j1LZIq5IUv/qs/2ozfePYn3s2F4tzkhS/5qn/4KyUdUcUznfb0xhi7gi
Sf1rHv4LfZY2bAnN/4K2aswxBbbwG2uav06SFkfz8l/8OabAG9bxbls5NXv+
lxhbxBVJ6l/z8F+q5q/LZUvs+40oM6Gvi+1jx/ZqcUaS+tW8/Bf0syu/sVa0
V7f9fmOILeKKJPWvefgv4ElbtlS1H6F8xDm+OUcmy0j83po4I0n9al7+C+f4
53yZTcYfpbJFXJGk/jUP/4U8acOWUP9d1PfyG2vQiaJ9+raL1P9FkhZB8+z/
wm+svXH15BwN+8/5iUb9d2NsEVckqX/Nw3+x/XebsiU0fhpCmYlzNLCul8vi
jCT1q3m2H6Fel/M1NG0/SmGLuCJJ/Wsu7Ufj/N+WLSnfb8R3Yt251H4kSQuj
ebYfsY8d63iP7Frp5PuNZAt+1X4kSYuhebYftWFL3fwvrOM9zjre3Wo/kqRF
0DzbjzjW8Y2rJ8c4Nm0/irFFXJGk/jXP9qM2bPH777Ket5yjoeAL6lzsfA3i
jCT1q3n5L25c47hcZMc4co6GnP67KWwRVySpf83DfzlW5Pk2bPH9FztHw1Qd
76Vb1P9FkhZIc2s/2ndmOb4RfGnS/yWVLeKKJPWvefgvx/dvmrQftWCL3/8l
9I019rHDOTDeSZyRpH41L/8FbCFj6Mvk+i+pbBFXJKl/zaX+5eItrdni939Z
M8c36ni9MY7HNc+3JPWuRej/kuq/pLJFXJGk/rUI/V+a+C+cZwq/U33sCr7I
f5GkxdC8/Bdy5ciF690yeJD7/aNUtogrktS/5uG/kCdt2FI1fvqDb3iVE+t4
MTabbdRoO8J8v+KMJPWrufV/2T/J//jlfA1Nx0/XsUVckaT+Na/2o7Zsqeq/
i3ZqfmON8zK4sdrFeAFwR5yRpH41z/aj23avTOpI8L3Yi8/Obj9KZYu4Ikn9
az7tRyut2RJqP+Ic36zXPWrqeDXOUZL617z8l1vGPEH9Ln4h1PPeeP667Plf
UtgirkhS/5qH/0KetGFLbPy0+8Ya5vUtxhzhF2GNn5ak/jW/+pcVV9eL39v3
bRqdOLB1ao6G56zLHz8dYou4Ikn9ax7+y5v3bGrNlpTxR6hvwTht9rUTZySp
f82z/gXlIpaVwJlDF5xe1vGCMVCT8Uc+W8QVSepf86x/acMW67+gTMR5MvGL
frqs16VwjqPijCT1rnn5L+AJykSHd6xzv2DA67ZP6nhRNkrxX1LZIq5IUv+a
h/8ClrRli99+hLKR7WN3x56V0VGMmd6/yf1C6GMjzkhSv5qX/wK2HFk9y/2i
nIR6X9tGneK/pLJFXJGk/jWv+pe2bKnyX/wxjhzj5ObI2z8Z4yTOSFK/mpf/
8oZdZ7s2anAGuuPS52W3H6WyRVyRpMXQrP2XI3s3t2aL9V/uv/aAGxtgvxHL
ul2Ulcr56/adKc5I0gJoXu1HtxR1vRA4c/3zTysZs/X0Z9X6L6lsEVckaXE0
S/8FdS5t2WL9l3dePRnj+J7X/9zo11/zYtdGjfYoiO3TXBZnJGkxNGv/BfW5
YAt+IXDnuoIxaKMGY6CY/5LKFnFFkhZLs/JfyJM2bLH+C7jCeTI5RqD85tG+
M0/Wv6ieV5IWSrOuf7l558pUGYmMQRt1iv+SyhZxRZIWTzPpv3vB+tZsqWo/
AmPec+PLpxmDPnarkz52GKMtzkjSYmmW9S9op2Z975v2bS3HCKT6L6lsEVek
ZVeTfmt9KSfdoesNceXgjo2t2eL33wVb2McOZSb4KuALftHHDm3V6G8nzkjL
rL65MW/GQMH6lws3Oa4cXj3HlZUsY9BGveW0ev8llS3iirTM6psVs+RL6JpD
XLl5z5aSJ03Z4rcfoX16qoxk5nxhG7XKSdIyq29e9MEYKFj/sv30sqyEZZST
rmUb9bpnJbcfpbBFXJGWVX0zYpZ8iV13rF26LVv8+evYTo36XoyTvnXHOify
Bctqp5aWVX1zoi/GQCHOYDwA2IJyEQTWXPPcU8s+din1L6lsEVekZVTfbJgl
X+quPcaVtmzxxx+hjIT5pX7z4FUujPpd1OuyrpfzNYgz0rKpbz70yRgo1k6N
uRpQx8u2pOtNHzswBqobf1THlmN7NS+mtHzqmwmz5EvK9QfHT4950pYtVe1H
ZAzKTBzbCLaU7Uf6foC0ZOqbC30zBgpxBuWiQzvPLMtJYA7LSJibIcV/SWWL
uCItk/pmwaz5kqJgu/QLNk7ajFqwxa9/IWfuv+4yN0cD6nRvxrim4hvXh4v6
XnFGWhb1zYNFYAwU4sx1553m2IJyEZdftW3CmHNPf1Zy/UsKW8QVaZnUNwcW
gS2x9qO2bKnq/0LGvP3Ki8o2apSV2Fatel5pmdQ3DxaBMVC0/8u4rETOoLxU
tlGvS/NfUtkirkhDl5//+mbBInOlLVus/3Lf1ZM5GjA+AJzBGAH2q2Mdr/rv
SssgMWatYpxBvS4ZA95Yxmw+td5/SWWLuCINWaF82DcTFpEr5Ekbtvjz17GN
GgJzwJbbdp/sY3eb5q+TBi4xplqxdmrM1YD+dVxGXS/72IExUN38dSlsEVek
oaouP/bNhkXjiuVJU7ZU+S/oX4dyEup4K+tfdmueKWmYEmPCalL/gjbqHP+l
ji3iijREpebLvhmxSFypq39JYYv1X+6+ap9ro77/tVe4/nb4ljX61+E7Bexr
h2X1s5OGKDEmrlj/3SmNOcM+duRLnf+SyhZxRRqicvJn36xYWK40YIvvv6Bv
nSsn3XDp6K6f3TFhy44zyj526mcnDVViTFwxzqBcFBojkOq/1LEFPoy4Ig1R
88ynQ1Pd+KM2bAm1H5VzNOxemdTxXrylrOO9fZ++Py0NT2JMXDHOuPbp89eV
y23aj2JsEVekIWreZY0hKdavri1b/PFHto0aZaYju1YmY6bHjAFvEJb/Ig1R
Ykxc0fnriv51XPbHCNT5L5VsWT2r9F/evGeT6nWlwaqP+tKhKOa/tGXLmvaj
cTkJbdT4rWqjpsQZaWgSY+KKtR+xfpdiHS/GNp6T2n6UwBZxRRqi+mrzHYLq
+r+0YUuV/8I5ptBGbRmDfruHxBlpoBJj4krxX1A2soxBHS8Yc06i/1LHFnFF
GqL67Le26Er1X5qwZar96JpLyzpezNHwjldfMqnX3bUyaaPetVIuizPS0CTG
xFU3/wvrePGtNfuNkhT/JZUt4oo0RIktYaXM/9KULX7/F9Tvon36/hteWpaR
+I0SW14SZ6ShSYyJK1ZOAltsecmv4631XxLZIq5IQ5TYElbd+KM2bPHbj8CZ
d77m8nKOhkP/9jQn8AX1u+57karnlQYoMSauunpelItsHe/2jT8+2prRfpTC
FnFFGqLElrBS5n9pyhbffwFfXBv1uKyEOTJZLkLdLstLqn+RhigxJq66+V9u
OO/UNWWknP4vKWwRV6QhSmwJK8QV8qQNW9a0H93w0nKOhnL8tNdGrfHT0hAl
xsSV0v8F8sc4JrcfJbBFXJGGKLElrBhX2rLF+i/oUwfGuG/EFt8owfyYro16
9ayT46fH68QZaWgSY+KKtVNzrinInyMzxX9JZYu4Ig1RYktYsXml2rKlqv8L
6ncxXoBt1L+EefGK9mm3PF4nzkhDkxgTV27/FzCGfEnt/1LHFnFFGqLElrCa
9H9JZUvV+CP7jViWkTDW8eadKy6MZXFGGprEmLhi9S+hOTJT619S2SKuSEOU
2BJWXf1LG7ZU9d9FPS9YgzGOh4qxAexjh/52t+zUOEdpeBJj4sppP8r1X1LZ
Iq5IQ5TYElas/25btlj/BWUilJMgtFfffslPuzpdthlxWfW80hAlxsSVWs+L
35ed++ys+V9S2SKuSEOU2BJWCleasmXN9wOuu2yqjESuoG7XtleLM9LQJMbE
FR0/ff66yjGOmzP6v6SwRVyRhiixJawYV8CUNmyJzf/i6niLOabesOvs8hsl
GucoDVFiTFx1/V/seIHc8dOpbBFXpCFKbAkrxpW2bKkaP23naABb0LfuTfu2
lpzBeEdxRhqaxJi46uZ/IWea9N9NZYu4Ig1RYktYIa4c3LGxNVvW+C/eN0rK
Ob5NHa/qeaUhSoyJK6X/bugb90n+SwJbxBVpiBJbwqqrf2nDFr//LjiD+RnY
x+4Xn3eqE/mCZXFGGqLEmLhS+9lZxqT2f0lli7giDVFiS1g5XMlly5r568Z8
QTkJbdVTfex2rpzsv6v566QBSoyJK7X+pen3j1LYIq5IQ5TYElZO/Uub7x+5
MQJFHS8ExmBOBrDlyOo5ro0afezwK85IQ5MYE1eMM4fH+f/QzjMnbdTj3yb9
d1PYIq5IQ5TYElbd/HVt2BL7fiPnyHTfiN27uSwnaZ5MaYgSY+IK9t89f92k
j92YLU3HH6WyRVyRhiixJazYuIC2bAm1H/EbJf4cU2yzFmekoUmMiSvWTg22
cI6GJv1fUtkirkhDlNgSVqxety1bYv13wRj135WWRWJMXHXzfFe1UefMv5vC
FnFFGqLElrDq5q9rw5bQ+Gn7jTW/jlffKZGGKDEmrrr2I8zX4Op4z5/+Rsnm
zPHTMbaIK9IQJbaEldJ+1JQtsflfwBjwxTFm9ZySMeq/Kw1RYkxcMf8Ffezc
fFPbT5+aYwpt1GDM5sz5X0JsEVekIUpsCSvGlbZsqWo/wvhGtR9JyyYxJq5Y
OzXHCrCt2tbxpvgvqWwRV6QhSmwJq278dBu2pPTflf8iLYPEmLii87+My0ah
NuoU/yWVLeKKNESJLWHVzv/Sgi2h+V/sN9Y0f520DBJj4opxBvW75TfWxrxh
He/W09P9lxS2iCvSECW2hBVsPyr8ljZsic3/Un5jbccZ5TfW2F4tzkhDkxgT
V6yfHfrYom2a7dUoK+X0f0lli7giDVFiS1ghrjietGRLZfvRmDNV37hnGUmc
kYYoMSauWDnJ8aUoL9kxAqn+SypbxBVpiBJbwopxpS1bUr/fyPZp9K9RO7U0
RIkxcTWd/yWn/24dW8QVaYgSW8KKtUu3ZUts/heUmVC/C7kxjpyvQe1H0gAl
xsQV4gzap8sxji/Y2Kj9KJUt4oo0RIktYQXbj3ae2ZotdfO/sI6Xfez0/SNp
qBJj4oq2H41Zw/pesKaL+V+q2CKuSEOU2BJWdP6XlmyJzf9SVcer8dPSUCXG
xJU6/4ut4yVfcud/CbFFXJGGKPEkrJz5X3LZkvr9RtTt2u+tiTPS0CTGxBWr
f+EYR6hqju+m87/4bBFXpCFKTAmrrv9uG7aE5n/hN0rAFo4RsPN9izPS0CTG
xBWr50X+B2fYXl22Ua8/JXv+lxhbxBVpiErlSZM64L7V9t7E+tW1ZUts/hf3
jbWdK2v62On7R9IQJcbEFetnh2+sgQVdzf8SYou4Ig1Ry8aTefgvrt9bS7ak
th/p+wHS0CXGxBWt5z1/XdlOjV/W8bb9foDPFnFFWgb1zYNF4ktd+1EbtoT6
74I3ljG2j536v0jLoL6ZsEiMgeo4Q7406f+SyhZxRRqq+s7/i8qWEFccS1qy
pW7+FzfH986Vso4XYcz3Lc5IQ1TfHFhUxkAhzjgG7Nkyumnnele/i/wP3rCN
muWk3PlfqtgirkhDVN95f5H5EuNKW7bUzf/CPnb85XwN4ow0NPWd/xeZMVCw
/8sFpzv/ws3XMBbarG0bNRgD5c7/UsUWcUUaovrO94vMlhBX4LO0ZUts/pdQ
Ha/6v0hDVN/5f5EZA6X2f7HfiCVf6vyXVLaIK9JQ1XfeX1S21M1f14YtsfYj
O0aAYxxZ3yvOSENU3wxYVMZAsXECyPMoL7nlvZvLMtJzN5ySXf8SY4u4Ig1V
fef9ReVLtF26JVv88UcoH1V9I5ZzTKn9SBqy+s7/i8oYKNZ+dHhHUb+L+t5x
/r/Oa6Ou819S2SKuSENW33l/EdkS40pbttR9f9qOmVb7kbQM6psBi8gYKKX9
qGqMQE77UR1bxBVpyOo77y8iW1LHTzdhS2r/XdTzsq1a9S/SkNU3AxaRMVC0
/24xvxSWUe977fO7679r2SKuSMugvhmwSHyJzl/Xki1146c5ttH9Fu3VGj8t
LYP65sAiMQaKtVMjz7O9GnUnHOPYtP9LiC3iirQs6psBi8KWEFfQ16UtW+rm
3+XcmPYba5rnW1oW9c2CRWEMFKt/4VhHlJNcG3Vm/91UtogrkrRcCnEF/V7a
siU2flr9XyTpmaPYOEfyBW3UWG7a/6WOLeKKJC2XouOnW7IlZfyR6/Oi/i+S
tNSq6//C8QKo6+1q/JHPFnFFkpZLIa7cwvnrWrClzn8p+9jhHMV4R83/IknL
p1g975HVs9wvZOf4zmk/SmGLuCJJy6WY/9KWLdZ/cd+4H7OF37gv+9gV88qU
37sfL4szkrRcCvazG/MF7T34BQPAGNT15vgvqWwRVyRpuRTiCjjSli1V44+q
6nhtHzuVkyRp+RTiDPI+ykquvqSYb6rp+Ok6togrkrRcitW/tGVLaP46lI/g
F9k+u1yu81/EGkkalnzGVM2TyX52YExu/5dUtogrkrQ8SuVKU7ZU9X+x3yjh
t0nsGO26+V9CnJEkafFlOQNuoHwEf+PNezaV9b1gTZP+L3VsEVckaTnlcwU8
acuWuu83sm4XbdO2vhdp2LZtW5AzYo0kDU/Ms8i/5IzrY7drxf2yvteWkbae
/iyn3O83VrFFXJGk5VMVV8iUNmxZM3/d1QfWfOPe1vHecN5keffu3Ws4Eyor
iTeStNjy8yryL/I4uMF2adbxgjO2jTrFf0lhCySuSNLyKMYV2+elKVuq+r+E
5si08zW8eP9eV88LvfCFLyyFtFHws6gDBw5IkrTAsvkV+Rfz+F5/7b93bGEZ
ieUlO8YxxX9JZYu4IknLpRBXWOfShi2V3w+44aWunDQ1x1QxRwOWD+7YODp0
4SbHGqQP6bnyyitHV1111eiaa65xwvkg9NOBDh48KEnSAot5lXkX+Rh+Budo
KOdrGDPGjnFMrn+pYQu+RSuuSNJyyecKfBdwxc7/0pQtVf6L38eO32y0/e0g
N2cD5m9YPedkHzxvX/xiO8PcH7Lfn2X/PYTtcVjnfLRijgi3XJyP33+zy+64
8b42DTwf92N8XEa89jtS9hwp14++R37/Zs7Jg99J36TiW3W7JvtDCN9clG1d
Gse/t+KYC9e77bfvm/RpwvpjF28Z3bZ7xW3DeoQhbDtxYGu5HdsQho7v3zS6
7aINZfitl25xv0fNuqOrG9x+b7n4bLf9zks2je7YM4nz7Zef68LYjuW3Hjhn
dHzfmW4ZwjE87p4rtrntd73oLLf8thf/1OjOfWe437sv2+p+37J/xe2DMIQw
9sE6bOcxiAPL94zPgV8bJ5ZxLML3FGmyy+W2sbDsjh1v43p/nU0Tz4F1Nuyf
n+fDvYFwL8pjx/fDxoO4cX8Qxr3j/YKO7z1jdGzPGe7+Ih5sw/PA/UfY7bN/
8jy4jP3tszy29+ypZezDZ8d3wj5/uw7Lbxyfj+8a1rl3rnjfEJ7kk7PcsnuP
i21N/RexRWwRW8QW+C98B9uwxfovKBOxnRpiGcnOkcn2IzvnN7ngz+fAtm3G
wf25jm3e3M//xpI9hstVcdpzc5vf35gssXN+WqaRfTyO61Kvn8f553brivFh
Nt1MhytzFvtwnYsD8ypz3fgX7Lm5iOfmIsx14A7EdVgmjxAGZyC8g1yPd5EM
Imccl8b5AAzCe813HmEs4/12y+O8w/3csavFOm+Z204gH+FYu27vyfCxYjv3
YRi8cevH69wy8+TeyTauQ77n8oliG/I2fk8U28kt/GKdy/vFPlhHzuCXx3A7
0mCXGR/SwrS6ay7SimWsv213cb3Fej4HXiOW8SzeWNwHCMvu+RX7cR+7P/I5
43LL42d6tDiOx2Id90c6+P9n6v/U+H1gXOCH/T/G/4VYRtmIy/i/afvYkS91
/ovYIraILWJL12yx/gvLBRjDNJkT75w1czSw/67lQdX3HVP5kcohu78fZyw9
SG/KMX6aQtcUu/4UHvpMtnxxDPEYc8hwhcdwX8scu+/hgjWHPd1q1pNFtxbv
DN9NrrPhqmU/fNTkIZufGD6+ujZseXKi4APz7Yk9J8NHCybZY1y42Ha84M4U
s8yxJQvsMcVxPvd8Nrjr2m2WLSN2byj3PWa2kweTvH7y/JYx9n7ZNPr78B7b
ZfsM+OzIAophMsHud9g8c74bNoz3i+vYt47L/Obaq7adOtq+8ceT/RexRWwR
W8SWrtky5b/s3XzS5y/KEMwXvt/vz8frlyH88oPd35Y/bHz2OD/s72/jZBko
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
NRxHgPjQBoW4JUl6Zgl5Hwzg2CKxRZKkLtQlW2QymUwmk8lkMplMJpPJZDKZ
TCaTyWQymUwmk8lkMplMJpPJZDKZbJHtH/7pydHPXPXx0cbLHwzqfZ/863L/
Y7/x5eB+2Hbvh7+aHDfi/eyX/t7ti2V7rtx0Nb2+q+/4/NS1pcRpDcf7ca5e
/yl33i7TgDgQ70tu/sxU3DLZotqsWPFXf/fPbt+D7/jimnNiH58N2BdKSReE
PPavT35vTdw51wd96WvfLq8NeTfHUrjSVRrwHFJ5KpMtkiG/gwOxvOz7L8gH
ISbhl5yJxY38yf/HMN9/yU1X0+vzOcf0pBiOrboXWId70VUayB7sW8VsmWwR
bVasgP/CbVi2hn1S/JdQupi2lDJCLB7rK5BtvNY6S+VKF2mg74L7499LmWzR
De91zrsbKvfAmBdsnYqNG2GWuVC+oR/CbZY7uenq4vp8zsXso3/2t8EyC6+N
96lNGuS7yIZqlhV4j5H3yYY6VljzWQGjr+OXE/z/20yHzVMxhjW9vpj5bItZ
DlfapkG+i2zolpO3YLH/8VVMsnGzbIR8mOK/dFGnmRNPjv8Si7fu2lLTIN9F
NmSz7zJ9C5Zf6lhhrcp/YR0M4mdbT1Xdi5+OqnAX1xeznPyfex+apkG+i2wZ
bFH8F/yvtu3Oz3T/Rb6LbOg2S/8FxjoY1utU1b3wXLH2pC6uL2aL5r/Id5Et
iy2K/9I2XSEbqv/CeyXfRTZUm7X/YutgrC+Tk642NkT/hf2C5bvIlsFy+5bF
+rj6cflh67/kxtXUcuLJaRdnvGivDsXl+y85acAxGg8gG7LZPOD7L3WsiMVl
DXmFeca2JaWmq42lxpPT/y2HK03SgHjxDOS7yJbB2O8/NHbR/x+K/nJVY/tY
d4ttzBuI2x6P89j6Xezn96dvmq7Y9aXum+MvIN5YWc9eW24aQuMwcO9S+CyT
LYLh/ef7yroSnweWFbH8jm1VrEA7K+LE/+XQ//yqdMUYlprH7PXFDNeY6i/k
cCU3DfRh2vBUJls043wKVe818rnNL3X/X7GdYw+r8q0dl4h8F8s3OekKWY7v
kMoCpi3GJHttXfov9v7KZIts/jvv5xf4G5YVsf+vrJP0rYn/AovlMdRnpPgb
qbzIyf85XMlJQ9P7K5MN2arqK0NtLBz7lzImEoZ4m9bj5tSb5rTdpKYn59q6
asPy769Mtsg2D1Y0aT+K2Sx4kRNn7n3oqg2rDYtlskW03P5iXfTJa5qukA21
/26V+fdXJltkmzUrmvbfjVlOHhti/92uWSyTLarJf2kWr/wXmWz2rKgaP922
Dkb+i0y2HCb/pVm88l9kstmyImf+uhyT/yKTLYcti/+SOnZxlv5LF2mQ/yIb
ks2SFTnfD8ixXP+l6+8HNPFf2qZB/otsqIb/qanfTYO1mf/Ft1hcuekKWe63
ExF3qI++/1230L5Yh/T5Y0NT0zDrOXFksnnYrFiR+/3GqnOnflcyZrFvJ1q/
zZ87zpf/LdpUrjRJQxMWy2SLajnfrYchv4TYwDnvWZ9b9934urhy0tX0+sAK
Gud2Cu1rv28Aw3LoO/c2bTlpyLm/Mtki26xYgf/f2Leq3oF1MDH/hT5KyH9J
7QMciwf60te+7fbDNcbmnPHTm8qVnDS0YbFMJpPJZDKZTCaTyWQymUwmk8lk
MplMJpPJZDKZTCaTyWQymUwmk8lkMplMJpPJZDKZTCaTyWQymUwmk8lkMplM
JpPJZDKZTCaTyWQymUwmk8lkMplMJpPJZDKZTCaTyWQymUwmk8lkMplMJpPJ
ZDKZTCaTyWQymUwmk8lkMplMJpPJZDKZTCaTyWQymUwmk8lkMplMJpPJZLJq
O/YbXx5tvPzBoL70tW9P7X/1HZ9fs8/q9Z8a/cM/PZkcL7bd++Gv1qYNcf7M
VR+Ppu+jf/a35f5/9Xf/vCYdNi6k81+f/F5S3LjOtumzceSkLefe8dhUw/Hv
++RfJ++b827kpCE13i6eU5XZ96YqfbxHKe+gvZ9d3LO6OF5y82dmci32Xqak
ocu8lGtd5nXcn89+6e/dvlgO7Yc4cjhnn3dOGnLvf6rlpiFmVcyvsi7+D8Cw
Xxfx1KU1hY1dve/ziif1uXYVT1fPPMUQH97FqnP5/xeR/qp9sQ7xpMbL66u7
F9h+8B1fjD5f+75VpcOm3Z6zLu6U9zgnjpy05dw7/9g6w/vp//8LWeq7UedD
+VzIeee6eE6+4f89jg3x196juvNjv6bXFjLk71AcELYz7V1eS+p18D3kObt4
RrnvUFd5HQxBXCn3CPcyh3P2enLSkHv/Uy03DSHjO5fyXEP/M3L+D3QVD+LA
dcL3rbJUNnbFpHnEk/Ncu4qni//9qYZnhjTXWeydRTkA22w8sXjpS+deA84d
891wTijlnIgL+4be5dT0pMaRk7ace0dWp77rsXRU7ZvybjANfDf9tPhcSI2X
cbd9TqH0xt5lpjf3/DnXlmL4H4VnHsors7qWeT+jJu9Q07xuOZJzj3I5519f
XbxN80iq5aYhFk8Oc0LW9P9A03hy8kpdPF0waR7xdHVdOfHM4n9/7Fwp/89y
n30OX1IN8eO4UL1pLtPa5sGcOHL9l1ldR67/kvNuWN+d6cl9N0Jxt2VlapxV
/89mdX9TDM8Z5w/57bO6lnk/oy7fobo8YjmSc4/avMuzijfHuvz//Uz3X7q4
/nnE09V15fovXf/vb3Iua/Jf1pr8l9GaNNj+A1iW/9LOnmn+Sxfv0DPNf5lV
GprEk2PyX+S/tDX5L/Jf2u7rp8H//yP/pbk9E/0XG27yDsl/6SYNTeLJMfkv
8l/aWmqfJV5baKxDVft0KF7GNU//hf13mvZ7rbKcOHLSlnPvEJ5V/4zcd8O+
91zH8Wqp70Yo7q7e91B6rSFt/v+zWfSPTrE2/gus6bXM+xk1eYea5nWfI/Za
664lh3NV19d1vDmWm4aQYUxVl/932+bt1Hi4X2gMoM0rXZxvUeKZ1Tsasln8
7w8Z+stVjYmG7BhEnC/Wdxb/P23f/Lp4Y/3AQ8b+0SFDvLGxALh3/pgJ3Ouq
/VPyJuJIzcM5acu5d/jNuY85zEl9N+p8KJ8LiNf6oFjmvbHxwrp4Tr7hmNh7
hPMz3tzzp96zHIvlFZwf8YbShzzb5FpyrqOLZ5T7DiENsfcePozN6zYNSKsd
G2TZVXct2JbDOcvPWcSbY3W88hleF1fq+KfQmJbc/wNt48F2vmd1eaXu2rtg
UpfxdPFcc9/RkM3if3/IyPLQufiO1v2ftMzPiTfHcEzMb6s7Z47/kjJGPcd/
yUlb7nXk+iSp7EMaWFaNPUOcvy7/xPwXjp1lvNiX71oXz8m33PyOcOj8yIt2
39R7lmN1aY0xGelJ9V/8exl7B7t+Rm3fId+QnpiPb59Djr9q7yfPk/K8U/53
Vl1Dyv1PtT78l7r/ZTn5oYv7EcvL/rNtGo/PhJDVvWup8dSZ/795Hunp+t0N
WWp7Qm75iPHWcSnHUtqPQteyCO1HqWmb5XXk1Evn1Dvmvhs57WNtn1PdOXxr
c4/6aD9Kvfezqq/uKi/N8h3q6h7lpKPq+pB/8Sy7GGveZP6JLt77nPajWbSD
+dbVe53aflRn826vqbOu2sW6SE/XPJ91/zP6HF3MZaD+u8Pov2ut67EjXVhX
/dTmMe61r/67MZt3XprlOzTv/rusi8jps1Z3fanW1XvfFfe6si76hOZcf1fx
dPU8hpSeoY0/sm0DbX0Y+S/yX7ow+S/yX0Jxz9p/wS/T19SHkf8ybfJfhpOe
ofkvsK58GPkv8l+6MPkv8l9Ccc/Df7FpbOLDyH+ZNvkvw0nPEP0XWBc+TNf+
S5s63Nw4huq/5Hw/IOfdyPk+QtvnVJXeUJxd+C9dzvvetf/Sxb2cVV6a5TvU
xT1q87yr0tDUh2njv3Tx3uf6L11/B8G3IfsvXTyPIaWnr/lfYGi7xf44vxXW
+eMZq+Jt68OwT3PMf0nt08e+1v61UCl5MyeOnLQ16d8a6uOPePx0hJ4jZL8L
F/sOl/WB/DT55l9Pzve9cu9xim8Wi9P/Thne6a6+u9ekHIrzp/gvKfc+515i
eRbPKGSzfIe6ukfcz46ZaZtHQj5Mzv2fxXsfs5zvN3bxPVNYzv1oaqn/C3OZ
ELKunkdX19VVeubxrGip3wyHwW+o+j+JtPrpCcVLHwb3IXcOA5wj9k3x2LXw
vDxnF98uz4kjJ205++I3NkbR5wzHP4T2tc8l9h10iPNANfn+dChO//vqOfc4
leM534nP/aZ86j3LMTyT0HE59z73fZ3FMwrZrN+h1LjpZ4T+31Zxrm0eYX5s
en2zeO/rLHXsc1f5Ied+NLXU/4Vd3ccun8ciXdc8npVMtmw2j7Z2mUwmk8lk
si5N/otMJpPJZLKhWer83zKZTCaTyWQymUwmk8lkMplMJpPJZDKZTCaTyWQy
mUwmk8lkMplMJpPJZDKZTCaTyWQymUwmk8lkMplMJpPJZDKZTCaTyWQymUwm
k8lkMplMNk/7/2vS+EA=
                    "], {{0, 232}, {560, 0}}, {0, 255},
                    ColorFunction->RGBColor],
                   BoxForm`ImageTag[
                   "Byte", ColorSpace -> "RGB", Interleaving -> True],
                   Selectable->False],
                  BaseStyle->"ImageGraphics",
                  ImageSizeRaw->{560, 232},
                  PlotRange->{{0, 560}, {0, 232}}]}, 
                 Dynamic[$CellContext`i3$$],
                 Alignment->Automatic,
                 ImageSize->All,
                 TransitionDirection->Horizontal,
                 TransitionDuration->0.5,
                 TransitionEffect->Automatic],
                Identity,
                Editable->True,
                Selectable->True],
               ImageMargins->10],
              Deployed->False,
              StripOnInput->False,
              ScriptLevel->0,
              GraphicsBoxOptions->{PreserveImageOptions->True},
              Graphics3DBoxOptions->{PreserveImageOptions->True}],
             Identity,
             Editable->False,
             Selectable->False],
            Alignment->{Left, Center},
            Background->GrayLevel[1],
            Frame->1,
            FrameStyle->GrayLevel[0, 0.2],
            ItemSize->Automatic,
            StripOnInput->False]}
         },
         AutoDelete->False,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Top}}, 
           "RowsIndexed" -> {}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}},
            "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.7], {
              Offset[0.5599999999999999]}, 
             Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.4], {
              Offset[0.8]}, 
             Offset[0.4]}, "RowsIndexed" -> {}}], If[
         CurrentValue["SelectionOver"], 
         Manipulate`Dump`ReadControllerState[
          Map[Manipulate`Dump`updateOneVar[#, 
            CurrentValue["PreviousFormatTime"], 
            CurrentValue["CurrentFormatTime"]]& , {
            
            Manipulate`Dump`controllerLink[{$CellContext`i3$$, \
$CellContext`i3$10740$$}, "X1", 
             If["DefaultAbsolute", True, "JB1"], False, {1, 7, 1}, 7, 1.]}], 
          
          CurrentValue[{
           "ControllerData", {
            "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
        ImageSizeCache->{593., {140.75, 147.75}}],
       DefaultBaseStyle->{},
       FrameMargins->{{5, 5}, {5, 5}}],
      BaselinePosition->Automatic,
      ImageMargins->0],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]]], "Output",
  CellChangeTimes->{3.651995296166625*^9, 3.651995377788825*^9}],
 "\n\nSam and Max are asked to transform two digital clocks into two \
\[OpenCurlyDoubleQuote]digital root\[CloseCurlyDoubleQuote] clocks.\nA \
digital root clock is a digital clock that calculates digital roots step by \
step.\n\nWhen a clock is fed a number, it will show it and then it will start \
the calculation, showing all the intermediate values until it gets to the \
result.\nFor example, if the clock is fed the number 137, it will show: \
\[OpenCurlyDoubleQuote]",
 StyleBox["137",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote] \[RightArrow] \[OpenCurlyDoubleQuote]",
 StyleBox["11",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote] \[RightArrow] \[OpenCurlyDoubleQuote]",
 StyleBox["2",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote] and then it will go black, waiting for the next \
number.\n\nEvery digital number consists of some light segments: three \
horizontal (top, middle, bottom) and four vertical (top-left, top-right, \
bottom-left, bottom-right).\nNumber \[OpenCurlyDoubleQuote]",
 StyleBox["1",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote] is made of vertical top-right and bottom-right, \
number \[OpenCurlyDoubleQuote]",
 StyleBox["4",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote] is made by middle horizontal and vertical \
top-left, top-right and bottom-right. Number \[OpenCurlyDoubleQuote]",
 StyleBox["8",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote] lights them all.\n\nThe clocks consume energy only \
when segments are turned on/off.\nTo turn on a \[OpenCurlyDoubleQuote]",
 StyleBox["2",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote] will cost 5 transitions, while a \
\[OpenCurlyDoubleQuote]",
 StyleBox["7",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote] will cost only 4 transitions.\n\nSam and Max built \
two different clocks.\n\nSam\[CloseCurlyQuote]s clock is fed e.g. number 137: \
the clock shows \[OpenCurlyDoubleQuote]",
 StyleBox["137",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote], then the panel is turned off, then the next \
number (\[OpenCurlyDoubleQuote]",
 StyleBox["11",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote]) is turned on, then the panel is turned off again \
and finally the last number (\[OpenCurlyDoubleQuote]",
 StyleBox["2",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote]) is turned on and, after some time, off.\nFor the \
example, with number 137, Sam\[CloseCurlyQuote]s clock requires:\n\
\[OpenCurlyDoubleQuote]",
 StyleBox["137",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote] \t: \t(2 + 5 + 4) \[Times] 2 = 22 transitions (\
\[OpenCurlyDoubleQuote]",
 StyleBox["137",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote] on/off).\n\[OpenCurlyDoubleQuote]",
 StyleBox["11",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote] \t: \t(2 + 2) \[Times] 2 = 8 transitions (\
\[OpenCurlyDoubleQuote]",
 StyleBox["11",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote] on/off).\n\[OpenCurlyDoubleQuote]",
 StyleBox["2",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote] \t: \t(5) \[Times] 2 = 10 transitions (\
\[OpenCurlyDoubleQuote]",
 StyleBox["2",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote] on/off).\nFor a grand total of 40 transitions.\n\n\
Max\[CloseCurlyQuote]s clock works differently. Instead of turning off the \
whole panel, it is smart enough to turn off only those segments that won\
\[CloseCurlyQuote]t be needed for the next number.\nFor number 137, Max\
\[CloseCurlyQuote]s clock requires:\n\[OpenCurlyDoubleQuote]",
 StyleBox["137",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote]\t:\t2 + 5 + 4 = 11 transitions (\
\[OpenCurlyDoubleQuote]",
 StyleBox["137",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote] on)\n\t\t7 transitions (to turn off the segments \
that are not needed for number \[OpenCurlyDoubleQuote]",
 StyleBox["11",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote]).\n\[OpenCurlyDoubleQuote]",
 StyleBox["11",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote]\t:\t0 transitions (number \
\[OpenCurlyDoubleQuote]",
 StyleBox["11",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote] is already turned on correctly)\n\t\t3 transitions \
(to turn off the first \[OpenCurlyDoubleQuote]",
 StyleBox["1",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote] and the bottom part of the second \
\[OpenCurlyDoubleQuote]",
 StyleBox["1",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote];\n\t\tthe top part is common with number \
\[OpenCurlyDoubleQuote]",
 StyleBox["2",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote]).\n\[OpenCurlyDoubleQuote]",
 StyleBox["2",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote]\t:\t4 transitions (to turn on the remaining \
segments in order to get a \[OpenCurlyDoubleQuote]",
 StyleBox["2",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote])\n\t\t5 transitions (to turn off number \
\[OpenCurlyDoubleQuote]",
 StyleBox["2",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote]).\nFor a grand total of 30 transitions.\n\nOf \
course, Max\[CloseCurlyQuote]s clock consumes less power than Sam\
\[CloseCurlyQuote]s one.\nThe two clocks are fed all the prime numbers \
between ",
 Cell[BoxData[
  FormBox[
   RowBox[{"A", " ", "=", " ", 
    SuperscriptBox["10", "7"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"B", " ", "=", " ", 
    RowBox[{"2", "\[Times]", 
     SuperscriptBox["10", "7"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\nFind the difference between the total number of transitions needed by \
Sam\[CloseCurlyQuote]s clock and that needed by Max\[CloseCurlyQuote]s one."
}], "Text",
 CellChangeTimes->{{3.65199518543669*^9, 3.651995268102539*^9}, {
  3.651995392162174*^9, 3.651995393887283*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParallelSum", "[", 
  RowBox[{
   RowBox[{"2", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"DigitCount", "[", 
         RowBox[{
          RowBox[{"BitAnd", "[", 
           RowBox[{
            RowBox[{"Take", "[", 
             RowBox[{"#1", ",", 
              RowBox[{"-", 
               RowBox[{"Length", "@", "#2"}]}]}], "]"}], ",", "#2"}], "]"}], 
          ",", "2", ",", "1"}], "]"}], "&"}], "@@@", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"IntegerDigits", "@", 
           RowBox[{"Most", "@", 
            RowBox[{"FixedPointList", "[", 
             RowBox[{
              RowBox[{"Total", "@*", "IntegerDigits"}], ",", "p"}], "]"}]}]}],
           "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0", "\[Rule]", "126"}], ",", 
            RowBox[{"1", "\[Rule]", "48"}], ",", 
            RowBox[{"2", "\[Rule]", "109"}], ",", 
            RowBox[{"3", "\[Rule]", "121"}], ",", 
            RowBox[{"4", "\[Rule]", "51"}], ",", 
            RowBox[{"5", "\[Rule]", "91"}], ",", 
            RowBox[{"6", "\[Rule]", "95"}], ",", 
            RowBox[{"7", "\[Rule]", "114"}], ",", 
            RowBox[{"8", "\[Rule]", "127"}], ",", 
            RowBox[{"9", "\[Rule]", "123"}]}], "}"}]}], ",", "2", ",", "1"}], 
        "]"}]}], ",", "2"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", 
     RowBox[{"PrimeRange", "[", 
      RowBox[{"1*^7", ",", "2*^7"}], "]"}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData["13625242"], "Output",
 CellChangeTimes->{3.651995474855259*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 323 - Bitwise-OR operations on random integers", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641690378215371*^9, 3.641690382796176*^9}, {
   3.642720580554666*^9, 3.642720584503579*^9}, {3.644023916582781*^9, 
   3.644023923915225*^9}, {3.645255527351684*^9, 3.645255531514232*^9}}],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ",... be a sequence of random unsigned 32 bit integers\n(i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", " ", "\[LessEqual]", " ", 
    SubscriptBox["y", "i"], " ", "<", " ", 
    SuperscriptBox["2", "32"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", every value equally likely).\n\nFor the sequence xi the following \
recursion is given:\n\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], " ", "=", " ", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and\n    ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "i"], " ", "=", " ", 
    RowBox[{
     SubscriptBox["x", 
      RowBox[{"i", "-", "1"}]], " ", "|", " ", 
     SubscriptBox["y", 
      RowBox[{"i", "-", "1"}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", for i > 0. ( | is the bitwise-OR operator)\n\nIt can be seen that \
eventually there will be an index N such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "i"], " ", "=", " ", 
    RowBox[{
     SuperscriptBox["2", "32"], " ", "-", "1"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " (a bit-pattern of all ones) for all i \[GreaterEqual] N.\n\nFind the \
expected value of N.\nGive your answer rounded to 10 digits after the decimal \
point."
}], "Text",
 CellChangeTimes->{{3.6452555369488*^9, 3.645255595267001*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"e", "[", "32", "]"}], "/.", 
    RowBox[{"First", "@", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"e", "[", "n", "]"}], "==", 
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{
               RowBox[{"Array", "[", 
                RowBox[{"e", ",", 
                 RowBox[{"n", "+", "1"}], ",", "0"}], "]"}], ".", 
               RowBox[{"Binomial", "[", 
                RowBox[{"n", ",", 
                 RowBox[{"Range", "[", 
                  RowBox[{"0", ",", "n"}], "]"}]}], "]"}]}], "/", 
              RowBox[{"2", "^", "n"}]}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "32"}], "}"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"e", "[", "0", "]"}], "\[Equal]", "0"}]}], "]"}], ",", 
       RowBox[{"Array", "[", 
        RowBox[{"e", ",", 
         RowBox[{"32", "+", "1"}], ",", "0"}], "]"}]}], "]"}]}]}], ",", 
   "11"}], "]"}]], "Input",
 CellChangeTimes->{{3.645255365589272*^9, 3.645255514041972*^9}}],

Cell[BoxData["6.35517584510393822360289280029`11."], "Output",
 CellChangeTimes->{{3.645255387427652*^9, 3.645255515005251*^9}}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 326 - 350", "Subsection",
 CellChangeTimes->{{3.640509015355191*^9, 3.640509022245683*^9}, {
  3.640519338671053*^9, 3.640519341443173*^9}, {3.6405218351164*^9, 
  3.640521837410107*^9}, {3.640692001248666*^9, 3.64069200435303*^9}, {
  3.640938376129309*^9, 3.640938377765213*^9}, {3.641036451653161*^9, 
  3.641036453169998*^9}, {3.641690359275677*^9, 3.641690362272438*^9}, {
  3.642232614147354*^9, 3.642232617962533*^9}, {3.642720546491436*^9, 
  3.642720547528722*^9}, {3.643627105268506*^9, 3.643627108176781*^9}}],

Cell[CellGroupData[{

Cell["Problem 345 - Matrix Sum", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641690378215371*^9, 3.641690382796176*^9}, {
   3.642720580554666*^9, 3.642720584503579*^9}, {3.643627116751333*^9, 
   3.643627121674647*^9}}],

Cell[TextData[{
 "We define the Matrix Sum of a matrix as the maximum sum of matrix elements \
with each element being the only one in his row and column. For example, the \
Matrix Sum of the matrix below equals 3315 ( = 863 + 383 + 343 + 959 + 767):\n\
\n",
 Cell[BoxData[
  TagBox[GridBox[{
     {"7", "53", "183", "439", 
      StyleBox["863",
       FontWeight->"Bold",
       FontColor->RGBColor[0, 1, 0]]},
     {"497", 
      StyleBox["383",
       FontWeight->"Bold",
       FontColor->RGBColor[0, 1, 0]], "563", "79", "973"},
     {"287", "63", 
      StyleBox["343",
       FontWeight->"Bold",
       FontColor->RGBColor[0, 1, 0]], "169", "583"},
     {"627", "343", "773", 
      StyleBox["959",
       FontWeight->"Bold",
       FontColor->RGBColor[0, 1, 0]], "943"},
     {
      StyleBox["767",
       FontWeight->"Bold",
       FontColor->RGBColor[0, 1, 0]], "473", "103", "699", "303"}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]], "Output",
  CellChangeTimes->{3.643627160448995*^9}],
 "\n\nFind the Matrix Sum of:\n\n",
 Cell[BoxData[
  TagBox[GridBox[{
     {"7", "53", "183", "439", "863", "497", "383", "563", "79", "973", "287",
       "63", "343", "169", "583"},
     {"627", "343", "773", "959", "943", "767", "473", "103", "699", "303", 
      "957", "703", "583", "639", "913"},
     {"447", "283", "463", "29", "23", "487", "463", "993", "119", "883", 
      "327", "493", "423", "159", "743"},
     {"217", "623", "3", "399", "853", "407", "103", "983", "89", "463", 
      "290", "516", "212", "462", "350"},
     {"960", "376", "682", "962", "300", "780", "486", "502", "912", "800", 
      "250", "346", "172", "812", "350"},
     {"870", "456", "192", "162", "593", "473", "915", "45", "989", "873", 
      "823", "965", "425", "329", "803"},
     {"973", "965", "905", "919", "133", "673", "665", "235", "509", "613", 
      "673", "815", "165", "992", "326"},
     {"322", "148", "972", "962", "286", "255", "941", "541", "265", "323", 
      "925", "281", "601", "95", "973"},
     {"445", "721", "11", "525", "473", "65", "511", "164", "138", "672", 
      "18", "428", "154", "448", "848"},
     {"414", "456", "310", "312", "798", "104", "566", "520", "302", "248", 
      "694", "976", "430", "392", "198"},
     {"184", "829", "373", "181", "631", "101", "969", "613", "840", "740", 
      "778", "458", "284", "760", "390"},
     {"821", "461", "843", "513", "17", "901", "711", "993", "293", "157", 
      "274", "94", "192", "156", "574"},
     {"34", "124", "4", "878", "450", "476", "712", "914", "838", "669", 
      "875", "299", "823", "329", "699"},
     {"815", "559", "813", "459", "522", "788", "168", "586", "966", "232", 
      "308", "833", "251", "631", "107"},
     {"813", "883", "451", "509", "615", "77", "281", "613", "459", "205", 
      "380", "274", "302", "35", "805"}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]], "Output",
  CellChangeTimes->{3.643627218838357*^9}]
}], "Text",
 CellChangeTimes->{{3.643627131174406*^9, 3.643627225222138*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrix", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<  7  53 183 439 863 497 383 563  79 973 287  63 343 169 583\n627 343 \
773 959 943 767 473 103 699 303 957 703 583 639 913\n447 283 463  29  23 487 \
463 993 119 883 327 493 423 159 743\n217 623   3 399 853 407 103 983  89 463 \
290 516 212 462 350\n960 376 682 962 300 780 486 502 912 800 250 346 172 812 \
350\n870 456 192 162 593 473 915  45 989 873 823 965 425 329 803\n973 965 905 \
919 133 673 665 235 509 613 673 815 165 992 326\n322 148 972 962 286 255 941 \
541 265 323 925 281 601  95 973\n445 721  11 525 473  65 511 164 138 672  18 \
428 154 448 848\n414 456 310 312 798 104 566 520 302 248 694 976 430 392 198\n\
184 829 373 181 631 101 969 613 840 740 778 458 284 760 390\n821 461 843 513  \
17 901 711 993 293 157 274  94 192 156 574\n 34 124   4 878 450 476 712 914 \
838 669 875 299 823 329 699\n815 559 813 459 522 788 168 586 966 232 308 833 \
251 631 107\n813 883 451 509 615  77 281 613 459 205 380 274 302  35 805\>\"",
      ",", "\"\<Table\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.64362727656925*^9, 3.643627300007764*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sum", "[", 
    RowBox[{"{", "}"}], "]"}], "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sum", "[", "m_", "]"}], ":=", 
   RowBox[{
    RowBox[{"sum", "[", "m", "]"}], "=", 
    RowBox[{"Max", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"m", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "n"}], "]"}], "]"}], "+", 
        RowBox[{"sum", "[", 
         RowBox[{"Drop", "[", 
          RowBox[{"m", ",", "1", ",", 
           RowBox[{"{", "n", "}"}]}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"Length", "@", "m"}]}], "}"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"sum", "[", "matrix", "]"}]}], "Input"],

Cell[BoxData["13938"], "Output",
 CellChangeTimes->{3.643627309514072*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 346 - Strong Repunits", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641690378215371*^9, 3.641690382796176*^9}, {
   3.642720580554666*^9, 3.642720584503579*^9}, {3.643627116751333*^9, 
   3.643627121674647*^9}, {3.649217032271866*^9, 3.649217037651184*^9}}],

Cell[TextData[{
 " The number 7 is special, because 7 is 111 written in base 2, and 11 \
written in base 6\n(i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["7", "10"], " ", "=", " ", 
    RowBox[{
     SubscriptBox["11", 
      RowBox[{"6", " "}]], "=", " ", 
     SubscriptBox["111", "2"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "). In other words, 7 is a repunit in at least two bases b > 1.\n\nWe shall \
call a positive integer with this property a strong repunit. It can be \
verified that there are 8 strong repunits below 50: {1,7,13,15,21,31,40,43}.\n\
Furthermore, the sum of all strong repunits below 1000 equals 15864.\nFind \
the sum of all strong repunits below ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "12"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". "
}], "Text",
 CellChangeTimes->{{3.649217044327435*^9, 3.64921707611325*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"Total", "[", 
   RowBox[{"Union", "@@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"b", "^", "l"}], "-", "1"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"b", "-", "1"}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", "2", ",", 
        RowBox[{"Sqrt", "@", "1*^12"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "3", ",", 
        RowBox[{"Log", "[", 
         RowBox[{"b", ",", 
          RowBox[{
           RowBox[{"1*^12", 
            RowBox[{"(", 
             RowBox[{"b", "-", "1"}], ")"}]}], "+", "1."}]}], "]"}]}], 
       "}"}]}], "]"}]}], "]"}]}]], "Input"],

Cell[BoxData["336108797689259276"], "Output",
 CellChangeTimes->{3.649217091323182*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 347 - Largest integer divisible by two primes", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641690378215371*^9, 3.641690382796176*^9}, {
   3.642720580554666*^9, 3.642720584503579*^9}, {3.643627116751333*^9, 
   3.643627121674647*^9}, {3.645264192278074*^9, 3.645264198594075*^9}}],

Cell[TextData[{
 "The largest integer \[LessEqual] 100 that is only divisible by both the \
primes 2 and 3 is 96, as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"96", "=", 
    RowBox[{
     RowBox[{"32", "*", "3"}], "=", 
     RowBox[{
      SuperscriptBox["2", "5"], "*", "3"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". For two distinct primes p and q let M(p,q,N) be the largest positive \
integer \[LessEqual]N only divisible by both p and q and M(p,q,N)=0 if such a \
positive integer does not exist.\n\nE.g. M(2,3,100)=96.\nM(3,5,100)=75 and \
not 90 because 90 is divisible by 2 ,3 and 5.\nAlso M(2,73,100)=0 because \
there does not exist a positive integer \[LessEqual] 100 that is divisible by \
both 2 and 73.\n\nLet S(N) be the sum of all distinct M(p,q,N). S(100)=2262.\n\
\nFind S(10 000 000)."
}], "Text",
 CellChangeTimes->{{3.645264204077756*^9, 3.645264219776939*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParallelSum", "[", 
  RowBox[{
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"p", "^", 
        RowBox[{"Floor", "@", 
         RowBox[{"Log", "[", 
          RowBox[{"p", ",", 
           RowBox[{"10000000.", "/", "#"}]}], "]"}]}]}], "#"}], "&"}], "[", 
     RowBox[{"q", "^", 
      RowBox[{"Range", "@", 
       RowBox[{"Log", "[", 
        RowBox[{"q", ",", 
         RowBox[{"10000000.", "/", "p"}]}], "]"}]}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", 
     RowBox[{"PrimeRange", "[", 
      RowBox[{"Sqrt", "@", "10000000."}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", 
     RowBox[{"PrimeRange", "[", 
      RowBox[{
       RowBox[{"p", "+", "1"}], ",", 
       RowBox[{"10000000.", "/", "p"}]}], "]"}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData["11109800204052"], "Output",
 CellChangeTimes->{3.645264253466511*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 351 - 375", "Subsection",
 CellChangeTimes->{{3.640509015355191*^9, 3.640509022245683*^9}, {
  3.640519338671053*^9, 3.640519341443173*^9}, {3.6405218351164*^9, 
  3.640521837410107*^9}, {3.640692001248666*^9, 3.64069200435303*^9}, {
  3.640938376129309*^9, 3.640938377765213*^9}, {3.641036451653161*^9, 
  3.641036453169998*^9}, {3.641690359275677*^9, 3.641690362272438*^9}, {
  3.642232614147354*^9, 3.642232617962533*^9}, {3.642720546491436*^9, 
  3.642720547528722*^9}, {3.64274562706963*^9, 3.642745647183624*^9}}],

Cell[CellGroupData[{

Cell["Problem 357 - Prime generating integers", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641690378215371*^9, 3.641690382796176*^9}, {
   3.642720580554666*^9, 3.642720584503579*^9}, {3.642745650846477*^9, 
   3.642745655005849*^9}}],

Cell["\<\
Consider the divisors of 30: 1,2,3,5,6,10,15,30.
It can be seen that for every divisor d of 30, d+30/d is prime.

Find the sum of all positive integers n not exceeding 100 000 000
such that for every divisor d of n, d+n/d is prime.\
\>", "Text",
 CellChangeTimes->{{3.642745662030467*^9, 3.6427456659924*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"ParallelSum", "[", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", "=", 
        RowBox[{
         RowBox[{"2", 
          RowBox[{"Prime", "[", "p", "]"}]}], "-", "4"}]}], "}"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"AllTrue", "[", 
         RowBox[{
          RowBox[{"Divisors", "@", "n"}], ",", " ", 
          RowBox[{
           RowBox[{"PrimeQ", "[", 
            RowBox[{"#", "+", 
             RowBox[{"n", "/", "#"}]}], "]"}], "&"}]}], "]"}], ",", "n", ",", 
        "0"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "2", ",", 
      RowBox[{"PrimePi", "[", 
       RowBox[{
        RowBox[{"100000000", "/", "2"}], "+", "2"}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input"],

Cell[BoxData["1739023853137"], "Output",
 CellChangeTimes->{3.64274731342549*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 376 - 400", "Subsection",
 CellChangeTimes->{{3.640509015355191*^9, 3.640509022245683*^9}, {
  3.640519338671053*^9, 3.640519341443173*^9}, {3.6405218351164*^9, 
  3.640521837410107*^9}, {3.640692001248666*^9, 3.64069200435303*^9}, {
  3.640938376129309*^9, 3.640938377765213*^9}, {3.641036451653161*^9, 
  3.641036453169998*^9}, {3.641690359275677*^9, 3.641690362272438*^9}, {
  3.642232614147354*^9, 3.642232617962533*^9}, {3.642720546491436*^9, 
  3.642720547528722*^9}, {3.64274562706963*^9, 3.642745647183624*^9}, {
  3.644492841239177*^9, 3.644492846096813*^9}}],

Cell[CellGroupData[{

Cell["Problem 381 - (prime-k) factorial", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641690378215371*^9, 3.641690382796176*^9}, {
   3.642720580554666*^9, 3.642720584503579*^9}, {3.642745650846477*^9, 
   3.642745655005849*^9}, {3.644492873352582*^9, 3.644492878540349*^9}}],

Cell[TextData[{
 "For a prime p let S(p) = (\[Sum](p-k)!) mod(p) for 1 \[LessEqual] k \
\[LessEqual] 5.\n\nFor example, if p=7,\n(7-1)! + (7-2)! + (7-3)! + (7-4)! + \
(7-5)! = 6! + 5! + 4! + 3! + 2! = 720+120+24+6+2 = 872.\nAs 872 mod(7) = 4, \
S(7) = 4.\n\nIt can be verified that \[Sum]S(p) = 480 for 5 \[LessEqual] p < \
100.\n\nFind \[Sum]S(p) for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"5", " ", "\[LessEqual]", " ", "p", " ", "<", " ", 
    SuperscriptBox["10", "8"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.644492882371619*^9, 3.644492899211639*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParallelSum", "[", 
  RowBox[{
   RowBox[{"Mod", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"Total", "@", 
       RowBox[{"FoldList", "[", 
        RowBox[{"Times", ",", "1", ",", 
         RowBox[{"PowerMod", "[", 
          RowBox[{
           RowBox[{"p", "-", 
            RowBox[{"Range", "[", 
             RowBox[{"2", ",", "4"}], "]"}]}], ",", 
           RowBox[{"-", "1"}], ",", "p"}], "]"}]}], "]"}]}]}], ",", "p"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", 
     RowBox[{"PrimeRange", "[", 
      RowBox[{"5", ",", 
       RowBox[{"10", "^", "8"}]}], "]"}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData["139602943319822"], "Output",
 CellChangeTimes->{3.644492972181542*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 387 - Harshad Numbers", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641690378215371*^9, 3.641690382796176*^9}, {
   3.642720580554666*^9, 3.642720584503579*^9}, {3.642745650846477*^9, 
   3.642745655005849*^9}, {3.644492873352582*^9, 3.644492878540349*^9}, {
   3.652847765046842*^9, 3.652847770379856*^9}}],

Cell[TextData[{
 "A ",
 StyleBox["Harshad or Niven number",
  FontWeight->"Bold"],
 " is a number that is divisible by the sum of its digits.\n201 is a Harshad \
number because it is divisible by 3 (the sum of its digits.)\nWhen we \
truncate the last digit from 201, we get 20, which is a Harshad number.\nWhen \
we truncate the last digit from 20, we get 2, which is also a Harshad number.\
\nLet\[CloseCurlyQuote]s call a Harshad number that, while recursively \
truncating the last digit, always results in a Harshad number a ",
 StyleBox["right truncatable Harshad number",
  FontSlant->"Italic"],
 ".\n\nAlso:\n201/3=67 which is prime.\nLet\[CloseCurlyQuote]s call a Harshad \
number that, when divided by the sum of its digits, results in a prime a ",
 StyleBox["strong Harshad number",
  FontSlant->"Italic"],
 ".\n\nNow take the number 2011 which is prime.\nWhen we truncate the last \
digit from it we get 201, a strong Harshad number that is also right \
truncatable.\nLet\[CloseCurlyQuote]s call such primes ",
 StyleBox["strong, right truncatable Harshad primes",
  FontSlant->"Italic"],
 ".\n\nYou are given that the sum of the strong, right truncatable Harshad \
primes less than 10000 is 90619.\n\nFind the sum of the strong, right \
truncatable Harshad primes less than ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "14"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.652847778523827*^9, 3.652847787549307*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"10", "#"}], "+", 
        RowBox[{"Range", "@", "9"}]}], ",", "PrimeQ"}], "]"}], "&"}], "/@", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Catenate", "@", 
       RowBox[{"NestList", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Catenate", "@", 
             RowBox[{"Outer", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"10", "#1"}], "+", "#2"}], "&"}], ",", "#", ",", 
               RowBox[{"Range", "[", 
                RowBox[{"0", ",", "9"}], "]"}]}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"IntegerQ", "[", 
              RowBox[{"#", "/", 
               RowBox[{"Total", "@", 
                RowBox[{"IntegerDigits", "@", "#"}]}]}], "]"}], "&"}]}], 
           "]"}], "&"}], ",", 
         RowBox[{"Range", "@", "9"}], ",", "12"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"PrimeQ", "[", 
        RowBox[{"#", "/", 
         RowBox[{"Total", "@", 
          RowBox[{"IntegerDigits", "@", "#"}]}]}], "]"}], "&"}]}], "]"}]}], 
   ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.6528477163119*^9, 3.652847740764962*^9}}],

Cell[BoxData["696067597313468"], "Output",
 CellChangeTimes->{{3.652847720814864*^9, 3.652847743672079*^9}}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 476 - 500", "Subsection",
 CellChangeTimes->{{3.640509015355191*^9, 3.640509022245683*^9}, {
  3.640519338671053*^9, 3.640519341443173*^9}, {3.6405218351164*^9, 
  3.640521837410107*^9}, {3.640692001248666*^9, 3.64069200435303*^9}, {
  3.640938376129309*^9, 3.640938377765213*^9}, {3.641036451653161*^9, 
  3.641036453169998*^9}, {3.641690359275677*^9, 3.641690362272438*^9}, {
  3.642232614147354*^9, 3.642232617962533*^9}, {3.642720546491436*^9, 
  3.642720547528722*^9}, {3.64274562706963*^9, 3.642745647183624*^9}, {
  3.644492841239177*^9, 3.644492846096813*^9}, {3.654129590801429*^9, 
  3.654129596899633*^9}}],

Cell[CellGroupData[{

Cell["Problem 493 - Under The Rainbow", "Subsubsection",
 CellChangeTimes->{{3.64050183153439*^9, 3.640501833505816*^9}, {
   3.640503096081485*^9, 3.640503101078712*^9}, {3.640503264191204*^9, 
   3.640503264624484*^9}, 3.640504038815924*^9, 3.640504106155353*^9, 
   3.640504704706735*^9, {3.640505448374814*^9, 3.640505449365859*^9}, 
   3.64050599759682*^9, 3.640508140420951*^9, {3.640509712497931*^9, 
   3.640509712725848*^9}, 3.640510155399292*^9, {3.640513859768023*^9, 
   3.64051386075854*^9}, {3.640519353202182*^9, 3.640519361560601*^9}, {
   3.640521843593367*^9, 3.64052184868174*^9}, {3.640607942676619*^9, 
   3.64060794665067*^9}, {3.640692009445038*^9, 3.640692012863418*^9}, {
   3.640930007057982*^9, 3.640930011311822*^9}, {3.640938388086967*^9, 
   3.640938392501876*^9}, {3.641036467957325*^9, 3.641036472904728*^9}, {
   3.641301419832774*^9, 3.641301432725943*^9}, {3.64146269058291*^9, 
   3.641462699920587*^9}, {3.641690378215371*^9, 3.641690382796176*^9}, {
   3.642720580554666*^9, 3.642720584503579*^9}, {3.642745650846477*^9, 
   3.642745655005849*^9}, {3.644492873352582*^9, 3.644492878540349*^9}, {
   3.654129609275779*^9, 3.654129612143533*^9}}],

Cell["\<\
70 colored balls are placed in an urn, 10 for each of the seven rainbow colors.

What is the expected number of distinct colors in 20 randomly picked balls?

Give your answer with nine digits after the decimal point (a.bcdefghij).\
\>", "Text",
 CellChangeTimes->{{3.654129620164195*^9, 3.654129624744595*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Total", "@", 
    RowBox[{"KeyValueMap", "[", 
     RowBox[{"Times", ",", 
      RowBox[{
       RowBox[{"Merge", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"Count", "[", 
              RowBox[{"#", ",", 
               RowBox[{"Except", "@", "0"}]}], "]"}], "\[Rule]", 
             RowBox[{
              RowBox[{"Length", "@", 
               RowBox[{"Permutations", "@", "#"}]}], "*", 
              RowBox[{"Times", "@@", 
               RowBox[{"Binomial", "[", 
                RowBox[{"10", ",", "#"}], "]"}]}]}]}], "|>"}], "&"}], "/@", 
          RowBox[{"IntegerPartitions", "[", 
           RowBox[{"20", ",", 
            RowBox[{"{", "7", "}"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", "10"}], "]"}]}], "]"}]}], ",", "Total"}], 
        "]"}], "/", 
       RowBox[{"Binomial", "[", 
        RowBox[{"70", ",", "20"}], "]"}]}]}], "]"}]}], ",", "10"}], 
  "]"}]], "Input"],

Cell[BoxData["6.8187418020197616167`10."], "Output",
 CellChangeTimes->{3.654129630620138*^9}]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 621},
WindowMargins->{{238, Automatic}, {35, Automatic}},
DockedCells->Cell[
  BoxData[
   TagBox[
    GridBox[{{
       TagBox[
        ButtonBox[
         PaneSelectorBox[{False -> GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1: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
kQ==
               "], {{0, 45}, {250, 0}}, {0, 255}, ColorFunction -> 
               RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], BaseStyle -> "ImageGraphics", ImageSizeRaw -> {250, 45},
              PlotRange -> {{0, 250}, {0, 45}}], True -> StyleBox[
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1: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
kQ==
                "], {{0, 45}, {250, 0}}, {0, 255}, ColorFunction -> 
                RGBColor], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
               False], BaseStyle -> "ImageGraphics", 
              ImageSizeRaw -> {250, 45}, PlotRange -> {{0, 250}, {0, 45}}], {
             "HyperlinkActive"}]}, 
          Dynamic[
           CurrentValue["MouseOver"]], BaseStyle -> {"Hyperlink"}, 
          FrameMargins -> 0, ImageSize -> Automatic], BaseStyle -> 
         "Hyperlink", ButtonData -> {
           URL["https://projecteuler.net/"], None}, ButtonNote -> 
         "https://projecteuler.net/"], 
        Annotation[#, "https://projecteuler.net/", "Hyperlink"]& ], 
       InterpretationBox[
        GridBox[{{
           ButtonBox[
           "\"Clear\"", 
            ButtonFunction :> (Remove["Global`*"]; ClearSystemCache[]), 
            Appearance -> {"AbuttingRight"}, Evaluator -> Automatic, Method -> 
            "Preemptive"], 
           ButtonBox[
           "\"Abort\"", ButtonFunction :> 
            FrontEndTokenExecute["EvaluatorAbort"], 
            Appearance -> {"AbuttingLeftRight"}, Evaluator -> Automatic, 
            Method -> "Preemptive"], 
           ButtonBox[
           "\"Quit\"", ButtonFunction :> 
            FrontEndTokenExecute["EvaluatorQuit"], 
            Appearance -> {"AbuttingLeftRight"}, Evaluator -> Automatic, 
            Method -> "Preemptive"], 
           ButtonBox[
           "\"Start\"", ButtonFunction :> 
            FrontEndTokenExecute["EvaluatorStart"], 
            Appearance -> {"AbuttingLeftRight"}, Evaluator -> Automatic, 
            Method -> "Preemptive"], 
           ButtonBox[
           "\"Help\"", ButtonFunction :> 
            FrontEndTokenExecute["SelectionHelpDialog"], 
            Appearance -> {"AbuttingLeft"}, Evaluator -> Automatic, Method -> 
            "Preemptive"]}}, AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         ColumnSpacings -> 0], 
        ButtonBar[{
         "Clear" :> (Remove["Global`*"]; ClearSystemCache[]), "Abort" :> 
          FrontEndTokenExecute["EvaluatorAbort"], "Quit" :> 
          FrontEndTokenExecute["EvaluatorQuit"], "Start" :> 
          FrontEndTokenExecute["EvaluatorStart"], "Help" :> 
          FrontEndTokenExecute["SelectionHelpDialog"]}, 
         Appearance -> {Automatic}]]}}, 
     GridBoxAlignment -> {"Columns" -> {Left, Right}}, AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {
         Scaled[0.3], 
         Scaled[0.7]}}], "Grid"]], "DockedCell"],
FrontEndVersion->"10.1 for Linux x86 (32-bit) (March 23, 2015)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]]}, Visible -> False, 
  FrontEndVersion -> "10.1 for Linux x86 (32-bit) (March 23, 2015)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 95, 1, 93, "Title"],
Cell[CellGroupData[{
Cell[700, 27, 100, 1, 32, "Input"],
Cell[803, 30, 126, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[966, 37, 90, 1, 65, "Section"],
Cell[1059, 40, 2860, 78, 297, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3956, 123, 142, 2, 65, "Section"],
Cell[CellGroupData[{
Cell[4123, 129, 102, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[4250, 134, 171, 2, 35, "Subsubsection"],
Cell[4424, 138, 278, 6, 99, "Text"],
Cell[CellGroupData[{
Cell[4727, 148, 324, 8, 32, "Input"],
Cell[5054, 158, 148, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[5251, 166, 196, 2, 29, "Subsubsection"],
Cell[5450, 170, 382, 9, 165, "Text"],
Cell[CellGroupData[{
Cell[5857, 183, 389, 10, 32, "Input"],
Cell[6249, 195, 98, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[6396, 202, 219, 3, 29, "Subsubsection"],
Cell[6618, 207, 176, 5, 77, "Text"],
Cell[CellGroupData[{
Cell[6819, 216, 306, 5, 32, "Input"],
Cell[7128, 223, 144, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[7321, 231, 321, 4, 29, "Subsubsection"],
Cell[7645, 237, 306, 6, 99, "Text"],
Cell[CellGroupData[{
Cell[7976, 247, 323, 10, 32, "Input"],
Cell[8302, 259, 75, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[8426, 266, 290, 4, 29, "Subsubsection"],
Cell[8719, 272, 299, 7, 99, "Text"],
Cell[CellGroupData[{
Cell[9043, 283, 194, 4, 32, "Input"],
Cell[9240, 289, 127, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[9416, 297, 267, 3, 29, "Subsubsection"],
Cell[9686, 302, 1025, 28, 250, "Text"],
Cell[CellGroupData[{
Cell[10736, 334, 300, 9, 32, "Input"],
Cell[11039, 345, 100, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[11188, 352, 287, 4, 29, "Subsubsection"],
Cell[11478, 358, 228, 6, 77, "Text"],
Cell[CellGroupData[{
Cell[11731, 368, 123, 2, 32, "Input"],
Cell[11857, 372, 74, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[11980, 379, 323, 4, 29, "Subsubsection"],
Cell[12306, 385, 1368, 28, 583, "Text"],
Cell[13677, 415, 1254, 25, 451, "Input"],
Cell[CellGroupData[{
Cell[14956, 444, 511, 12, 77, "Input"],
Cell[15470, 458, 229, 4, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[15748, 468, 345, 4, 29, "Subsubsection"],
Cell[16096, 474, 911, 28, 162, "Text"],
Cell[CellGroupData[{
Cell[17032, 506, 660, 19, 55, "Input"],
Cell[17695, 527, 101, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[17845, 534, 388, 5, 29, "Subsubsection"],
Cell[18236, 541, 170, 5, 77, "Text"],
Cell[CellGroupData[{
Cell[18431, 550, 154, 3, 32, "Input"],
Cell[18588, 555, 81, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[18718, 562, 413, 5, 29, "Subsubsection"],
Cell[19134, 569, 1968, 36, 605, "Text"],
Cell[21105, 607, 1475, 22, 495, "Input"],
Cell[CellGroupData[{
Cell[22605, 633, 1091, 30, 77, "Input"],
Cell[23699, 665, 269, 4, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[24017, 675, 450, 6, 29, "Subsubsection"],
Cell[24470, 683, 968, 29, 407, "Text"],
Cell[CellGroupData[{
Cell[25463, 716, 587, 18, 32, "Input"],
Cell[26053, 736, 127, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[26229, 744, 447, 6, 29, "Subsubsection"],
Cell[26679, 752, 5279, 104, 2233, "Text"],
Cell[31961, 858, 5629, 106, 2233, "Input"],
Cell[CellGroupData[{
Cell[37615, 968, 252, 6, 32, "Input"],
Cell[37870, 976, 103, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[38022, 983, 512, 7, 29, "Subsubsection"],
Cell[38537, 992, 889, 15, 319, "Text"],
Cell[39429, 1009, 636, 20, 55, "Input"],
Cell[CellGroupData[{
Cell[40090, 1033, 265, 6, 32, "Input"],
Cell[40358, 1041, 124, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[40531, 1049, 523, 7, 29, "Subsubsection"],
Cell[41057, 1058, 2915, 54, 228, "Text"],
Cell[CellGroupData[{
Cell[43997, 1116, 134, 2, 32, "Input"],
Cell[44134, 1120, 104, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[44287, 1127, 431, 6, 29, "Subsubsection"],
Cell[44721, 1135, 460, 14, 77, "Text"],
Cell[CellGroupData[{
Cell[45206, 1153, 185, 4, 32, "Input"],
Cell[45394, 1159, 72, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[45515, 1166, 482, 6, 29, "Subsubsection"],
Cell[46000, 1174, 696, 12, 209, "Text"],
Cell[46699, 1188, 5867, 185, 649, "Input"],
Cell[CellGroupData[{
Cell[52591, 1377, 306, 8, 32, "Input"],
Cell[52900, 1387, 124, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[53073, 1395, 530, 7, 29, "Subsubsection"],
Cell[53606, 1404, 1572, 38, 693, "Text"],
Cell[55181, 1444, 615, 11, 341, "Input"],
Cell[CellGroupData[{
Cell[55821, 1459, 760, 20, 55, "Input"],
Cell[56584, 1481, 169, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[56802, 1490, 578, 8, 29, "Subsubsection"],
Cell[57383, 1500, 637, 17, 319, "Text"],
Cell[CellGroupData[{
Cell[58045, 1521, 517, 14, 32, "Input"],
Cell[58565, 1537, 72, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[58686, 1544, 481, 6, 29, "Subsubsection"],
Cell[59170, 1552, 391, 10, 143, "Text"],
Cell[CellGroupData[{
Cell[59586, 1566, 179, 4, 32, "Input"],
Cell[59768, 1572, 72, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[59889, 1579, 526, 7, 29, "Subsubsection"],
Cell[60418, 1588, 575, 12, 209, "Text"],
Cell[CellGroupData[{
Cell[61018, 1604, 653, 18, 55, "Input"],
Cell[61674, 1624, 147, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[61870, 1632, 572, 8, 29, "Subsubsection"],
Cell[62445, 1642, 974, 18, 209, "Text"],
Cell[63422, 1662, 391, 10, 121, "Input"],
Cell[CellGroupData[{
Cell[63838, 1676, 503, 14, 55, "Input"],
Cell[64344, 1692, 128, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[64521, 1700, 598, 8, 29, "Subsubsection"],
Cell[65122, 1710, 1047, 19, 363, "Text"],
Cell[CellGroupData[{
Cell[66194, 1733, 776, 23, 55, "Input"],
Cell[66973, 1758, 198, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[67220, 1767, 557, 7, 29, "Subsubsection"],
Cell[67780, 1776, 506, 12, 187, "Text"],
Cell[CellGroupData[{
Cell[68311, 1792, 333, 8, 32, "Input"],
Cell[68647, 1802, 129, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[68825, 1810, 514, 7, 29, "Subsubsection"],
Cell[69342, 1819, 2825, 104, 495, "Text"],
Cell[CellGroupData[{
Cell[72192, 1927, 238, 6, 32, "Input"],
Cell[72433, 1935, 73, 1, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[72567, 1943, 152, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[72744, 1949, 648, 9, 35, "Subsubsection"],
Cell[73395, 1960, 629, 20, 407, "Text"],
Cell[CellGroupData[{
Cell[74049, 1984, 447, 13, 32, "Input"],
Cell[74499, 1999, 121, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[74669, 2007, 598, 8, 29, "Subsubsection"],
Cell[75270, 2017, 967, 25, 451, "Text"],
Cell[CellGroupData[{
Cell[76262, 2046, 356, 10, 32, "Input"],
Cell[76621, 2058, 160, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76818, 2066, 359, 11, 32, "Input"],
Cell[77180, 2079, 115, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[77344, 2087, 556, 7, 29, "Subsubsection"],
Cell[77903, 2096, 1139, 42, 297, "Text"],
Cell[CellGroupData[{
Cell[79067, 2142, 357, 13, 32, "Input"],
Cell[79427, 2157, 77, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[79553, 2164, 598, 8, 29, "Subsubsection"],
Cell[80154, 2174, 2027, 64, 297, "Text"],
Cell[CellGroupData[{
Cell[82206, 2242, 320, 8, 32, "Input"],
Cell[82529, 2252, 97, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[82675, 2259, 601, 8, 29, "Subsubsection"],
Cell[83279, 2269, 1237, 38, 275, "Text"],
Cell[CellGroupData[{
Cell[84541, 2311, 904, 25, 77, "Input"],
Cell[85448, 2338, 265, 4, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[85762, 2348, 642, 9, 29, "Subsubsection"],
Cell[86407, 2359, 527, 13, 231, "Text"],
Cell[CellGroupData[{
Cell[86959, 2376, 343, 9, 32, "Input"],
Cell[87305, 2387, 124, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[87478, 2395, 747, 10, 29, "Subsubsection"],
Cell[88228, 2407, 644, 13, 231, "Text"],
Cell[CellGroupData[{
Cell[88897, 2424, 1022, 28, 77, "Input"],
Cell[89922, 2454, 196, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[90167, 2463, 704, 9, 29, "Subsubsection"],
Cell[90874, 2474, 635, 13, 253, "Text"],
Cell[CellGroupData[{
Cell[91534, 2491, 922, 27, 77, "Input"],
Cell[92459, 2520, 121, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[92629, 2528, 649, 9, 29, "Subsubsection"],
Cell[93281, 2539, 308, 8, 121, "Text"],
Cell[CellGroupData[{
Cell[93614, 2551, 707, 23, 77, "Input"],
Cell[94324, 2576, 96, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[94469, 2583, 694, 9, 29, "Subsubsection"],
Cell[95166, 2594, 365, 9, 143, "Text"],
Cell[CellGroupData[{
Cell[95556, 2607, 912, 24, 121, "Input"],
Cell[96471, 2633, 193, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[96713, 2642, 702, 9, 29, "Subsubsection"],
Cell[97418, 2653, 503, 12, 121, "Text"],
Cell[CellGroupData[{
Cell[97946, 2669, 526, 16, 55, "Input"],
Cell[98475, 2687, 125, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[98649, 2695, 747, 10, 29, "Subsubsection"],
Cell[99399, 2707, 516, 11, 165, "Text"],
Cell[CellGroupData[{
Cell[99940, 2722, 1143, 31, 143, "Input"],
Cell[101086, 2755, 145, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[101280, 2763, 799, 11, 29, "Subsubsection"],
Cell[102082, 2776, 693, 17, 319, "Text"],
Cell[CellGroupData[{
Cell[102800, 2797, 897, 26, 99, "Input"],
Cell[103700, 2825, 78, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[103827, 2832, 802, 11, 29, "Subsubsection"],
Cell[104632, 2845, 340, 9, 143, "Text"],
Cell[CellGroupData[{
Cell[104997, 2858, 1319, 36, 99, "Input"],
Cell[106319, 2896, 288, 4, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[106656, 2906, 769, 10, 29, "Subsubsection"],
Cell[107428, 2918, 1250, 35, 206, "Text"],
Cell[CellGroupData[{
Cell[108703, 2957, 495, 13, 55, "Input"],
Cell[109201, 2972, 193, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[109443, 2981, 795, 11, 29, "Subsubsection"],
Cell[110241, 2994, 318, 7, 99, "Text"],
Cell[CellGroupData[{
Cell[110584, 3005, 597, 15, 77, "Input"],
Cell[111184, 3022, 171, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[111404, 3030, 801, 11, 29, "Subsubsection"],
Cell[112208, 3043, 1419, 35, 275, "Text"],
Cell[CellGroupData[{
Cell[113652, 3082, 311, 10, 32, "Input"],
Cell[113966, 3094, 665, 23, 49, "Output"]
}, Open  ]],
Cell[114646, 3120, 442, 11, 121, "Input"],
Cell[CellGroupData[{
Cell[115113, 3135, 451, 13, 55, "Input"],
Cell[115567, 3150, 122, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[115738, 3158, 848, 11, 29, "Subsubsection"],
Cell[116589, 3171, 2225, 79, 319, "Text"],
Cell[CellGroupData[{
Cell[118839, 3254, 1422, 41, 165, "Input"],
Cell[120264, 3297, 152, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[120465, 3305, 891, 12, 29, "Subsubsection"],
Cell[121359, 3319, 1547, 48, 235, "Text"],
Cell[122909, 3369, 260, 8, 32, "Input"],
Cell[CellGroupData[{
Cell[123194, 3381, 257, 7, 32, "Input"],
Cell[123454, 3390, 621, 22, 49, "Output"]
}, Open  ]],
Cell[124090, 3415, 382, 12, 32, "Input"],
Cell[CellGroupData[{
Cell[124497, 3431, 370, 10, 32, "Input"],
Cell[124870, 3443, 473, 14, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125380, 3462, 1026, 31, 99, "Input"],
Cell[126409, 3495, 100, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[126558, 3502, 961, 13, 29, "Subsubsection"],
Cell[127522, 3517, 1301, 42, 187, "Text"],
Cell[CellGroupData[{
Cell[128848, 3563, 645, 20, 32, "Input"],
Cell[129496, 3585, 3900, 114, 224, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133433, 3704, 542, 15, 32, "Input"],
Cell[133978, 3721, 175, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[134202, 3730, 921, 13, 29, "Subsubsection"],
Cell[135126, 3745, 1508, 47, 301, "Text"],
Cell[CellGroupData[{
Cell[136659, 3796, 474, 14, 32, "Input"],
Cell[137136, 3812, 123, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[137308, 3820, 948, 13, 29, "Subsubsection"],
Cell[138259, 3835, 496, 15, 297, "Text"],
Cell[CellGroupData[{
Cell[138780, 3854, 644, 17, 55, "Input"],
Cell[139427, 3873, 197, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[139673, 3882, 544, 7, 29, "Subsubsection"],
Cell[140220, 3891, 774, 26, 77, "Text"],
Cell[CellGroupData[{
Cell[141019, 3921, 338, 10, 32, "Input"],
Cell[141360, 3933, 129, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[141538, 3941, 601, 8, 29, "Subsubsection"],
Cell[142142, 3951, 562, 11, 187, "Text"],
Cell[CellGroupData[{
Cell[142729, 3966, 1382, 36, 99, "Input"],
Cell[144114, 4004, 81, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[144244, 4011, 604, 8, 29, "Subsubsection"],
Cell[144851, 4021, 489, 13, 209, "Text"],
Cell[CellGroupData[{
Cell[145365, 4038, 2025, 59, 165, "Input"],
Cell[147393, 4099, 75, 1, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[147529, 4107, 199, 3, 36, "Subsection"],
Cell[CellGroupData[{
Cell[147753, 4114, 700, 9, 35, "Subsubsection"],
Cell[148456, 4125, 1089, 25, 231, "Text"],
Cell[CellGroupData[{
Cell[149570, 4154, 1217, 31, 121, "Input"],
Cell[150790, 4187, 289, 4, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[151128, 4197, 649, 9, 29, "Subsubsection"],
Cell[151780, 4208, 314, 7, 99, "Text"],
Cell[CellGroupData[{
Cell[152119, 4219, 269, 7, 32, "Input"],
Cell[152391, 4228, 97, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[152537, 4235, 700, 9, 29, "Subsubsection"],
Cell[153240, 4246, 1375, 39, 294, "Text"],
Cell[CellGroupData[{
Cell[154640, 4289, 357, 10, 32, "Input"],
Cell[155000, 4301, 95, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[155144, 4308, 738, 10, 29, "Subsubsection"],
Cell[155885, 4320, 3386, 87, 1001, "Text"],
Cell[159274, 4409, 425, 9, 77, "Input"],
Cell[159702, 4420, 5544, 174, 275, "Input"],
Cell[CellGroupData[{
Cell[165271, 4598, 1232, 30, 187, "Input"],
Cell[166506, 4630, 193, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[166748, 4639, 742, 10, 29, "Subsubsection"],
Cell[167493, 4651, 1409, 31, 605, "Text"],
Cell[CellGroupData[{
Cell[168927, 4686, 1182, 33, 77, "Input"],
Cell[170112, 4721, 239, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[170400, 4730, 695, 9, 29, "Subsubsection"],
Cell[171098, 4741, 764, 21, 146, "Text"],
Cell[CellGroupData[{
Cell[171887, 4766, 283, 7, 32, "Input"],
Cell[172173, 4775, 96, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[172318, 4782, 749, 10, 29, "Subsubsection"],
Cell[173070, 4794, 1392, 32, 404, "Text"],
Cell[CellGroupData[{
Cell[174487, 4830, 674, 20, 55, "Input"],
Cell[175164, 4852, 166, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[175379, 4860, 836, 11, 29, "Subsubsection"],
Cell[176218, 4873, 1466, 42, 407, "Text"],
Cell[CellGroupData[{
Cell[177709, 4919, 1092, 34, 99, "Input"],
Cell[178804, 4955, 145, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[178998, 4963, 791, 11, 29, "Subsubsection"],
Cell[179792, 4976, 1952, 29, 495, "Text"],
Cell[181747, 5007, 394, 10, 121, "Input"],
Cell[CellGroupData[{
Cell[182166, 5021, 771, 23, 99, "Input"],
Cell[182940, 5046, 99, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[183088, 5053, 838, 11, 29, "Subsubsection"],
Cell[183929, 5066, 519, 10, 165, "Text"],
Cell[CellGroupData[{
Cell[184473, 5080, 972, 22, 121, "Input"],
Cell[185448, 5104, 384, 5, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[185881, 5115, 897, 12, 29, "Subsubsection"],
Cell[186781, 5129, 3031, 93, 467, "Text"],
Cell[189815, 5224, 1437, 52, 143, "Input"],
Cell[191255, 5278, 1139, 29, 77, "Input"],
Cell[CellGroupData[{
Cell[192419, 5311, 1820, 50, 187, "Input"],
Cell[194242, 5363, 244, 4, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[194535, 5373, 795, 11, 29, "Subsubsection"],
Cell[195333, 5386, 795, 23, 127, "Text"],
Cell[CellGroupData[{
Cell[196153, 5413, 571, 14, 55, "Input"],
Cell[196727, 5429, 275, 4, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[197051, 5439, 748, 10, 29, "Subsubsection"],
Cell[197802, 5451, 555, 16, 99, "Text"],
Cell[CellGroupData[{
Cell[198382, 5471, 361, 9, 32, "Input"],
Cell[198746, 5482, 344, 9, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199127, 5496, 642, 19, 55, "Input"],
Cell[199772, 5517, 168, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[199989, 5526, 799, 11, 29, "Subsubsection"],
Cell[200791, 5539, 9884, 352, 1102, "Text"],
Cell[CellGroupData[{
Cell[210700, 5895, 394, 11, 55, "Input"],
Cell[211097, 5908, 146, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[211292, 5916, 815, 11, 29, "Subsubsection"],
Cell[212110, 5929, 3526, 111, 801, "Text"],
Cell[CellGroupData[{
Cell[215661, 6044, 306, 7, 77, "Input"],
Cell[215970, 6053, 96, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[216115, 6060, 869, 12, 29, "Subsubsection"],
Cell[216987, 6074, 2377, 71, 411, "Text"],
Cell[CellGroupData[{
Cell[219389, 6149, 981, 29, 77, "Input"],
Cell[220373, 6180, 167, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[220589, 6188, 601, 8, 29, "Subsubsection"],
Cell[221193, 6198, 1607, 43, 385, "Text"],
Cell[222803, 6243, 337, 8, 77, "Input"],
Cell[CellGroupData[{
Cell[223165, 6255, 760, 20, 55, "Input"],
Cell[223928, 6277, 191, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[224168, 6286, 648, 9, 29, "Subsubsection"],
Cell[224819, 6297, 35151, 591, 1094, "Text"],
Cell[CellGroupData[{
Cell[259995, 6892, 4822, 125, 407, "Input"],
Cell[264820, 7019, 85, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[264954, 7026, 647, 9, 29, "Subsubsection"],
Cell[265604, 7037, 1026, 23, 385, "Text"],
Cell[CellGroupData[{
Cell[266655, 7064, 298, 8, 32, "Input"],
Cell[266956, 7074, 99, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[267104, 7081, 747, 10, 29, "Subsubsection"],
Cell[267854, 7093, 917, 17, 209, "Text"],
Cell[CellGroupData[{
Cell[268796, 7114, 1539, 45, 165, "Input"],
Cell[270338, 7161, 76, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[270463, 7168, 695, 9, 29, "Subsubsection"],
Cell[271161, 7179, 743, 13, 253, "Text"],
Cell[CellGroupData[{
Cell[271929, 7196, 481, 14, 32, "Input"],
Cell[272413, 7212, 243, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[272705, 7221, 746, 10, 29, "Subsubsection"],
Cell[273454, 7233, 597, 15, 253, "Text"],
Cell[CellGroupData[{
Cell[274076, 7252, 332, 8, 32, "Input"],
Cell[274411, 7262, 177, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[274637, 7270, 757, 10, 29, "Subsubsection"],
Cell[275397, 7282, 761, 18, 253, "Text"],
Cell[CellGroupData[{
Cell[276183, 7304, 651, 19, 55, "Input"],
Cell[276837, 7325, 100, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[276986, 7332, 750, 10, 29, "Subsubsection"],
Cell[277739, 7344, 1156, 30, 539, "Text"],
Cell[278898, 7376, 1103, 31, 102, "Input"],
Cell[CellGroupData[{
Cell[280026, 7411, 256, 6, 32, "Input"],
Cell[280285, 7419, 165, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[280499, 7427, 810, 11, 29, "Subsubsection"],
Cell[281312, 7440, 1165, 31, 407, "Text"],
Cell[CellGroupData[{
Cell[282502, 7475, 1617, 47, 121, "Input"],
Cell[284122, 7524, 172, 3, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[284355, 7534, 245, 3, 36, "Subsection"],
Cell[CellGroupData[{
Cell[284625, 7541, 796, 11, 35, "Subsubsection"],
Cell[285424, 7554, 318, 13, 231, "Text"],
Cell[CellGroupData[{
Cell[285767, 7571, 150, 3, 32, "Input"],
Cell[285920, 7576, 102, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[286071, 7583, 839, 11, 29, "Subsubsection"],
Cell[286913, 7596, 332, 13, 231, "Text"],
Cell[CellGroupData[{
Cell[287270, 7613, 332, 9, 32, "Input"],
Cell[287605, 7624, 70, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[287724, 7631, 888, 12, 29, "Subsubsection"],
Cell[288615, 7645, 435, 14, 253, "Text"],
Cell[289053, 7661, 1498, 46, 99, "Input"],
Cell[CellGroupData[{
Cell[290576, 7711, 225, 6, 32, "Input"],
Cell[290804, 7719, 146, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[290999, 7727, 746, 10, 29, "Subsubsection"],
Cell[291748, 7739, 793, 14, 187, "Text"],
Cell[292544, 7755, 324, 8, 77, "Input"],
Cell[CellGroupData[{
Cell[292893, 7767, 771, 21, 77, "Input"],
Cell[293667, 7790, 173, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[293889, 7799, 806, 11, 29, "Subsubsection"],
Cell[294698, 7812, 571, 11, 187, "Text"],
Cell[CellGroupData[{
Cell[295294, 7827, 579, 17, 55, "Input"],
Cell[295876, 7846, 124, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[296049, 7854, 816, 11, 29, "Subsubsection"],
Cell[296868, 7867, 1674, 45, 217, "Text"],
Cell[298545, 7914, 283, 7, 77, "Input"],
Cell[CellGroupData[{
Cell[298853, 7925, 1530, 43, 143, "Input"],
Cell[300386, 7970, 342, 5, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[300777, 7981, 866, 12, 29, "Subsubsection"],
Cell[301646, 7995, 1628, 38, 283, "Text"],
Cell[303277, 8035, 309, 8, 77, "Input"],
Cell[CellGroupData[{
Cell[303611, 8047, 2165, 57, 187, "Input"],
Cell[305779, 8106, 459, 6, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[306287, 8118, 911, 12, 29, "Subsubsection"],
Cell[307201, 8132, 2043, 53, 283, "Text"],
Cell[309247, 8187, 331, 8, 77, "Input"],
Cell[CellGroupData[{
Cell[309603, 8199, 1800, 49, 187, "Input"],
Cell[311406, 8250, 388, 5, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[311843, 8261, 955, 13, 29, "Subsubsection"],
Cell[312801, 8276, 5253, 79, 1324, "Text"],
Cell[CellGroupData[{
Cell[318079, 8359, 5932, 140, 413, "Input"],
Cell[324014, 8501, 266, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324317, 8510, 92, 1, 32, "Input"],
Cell[324412, 8513, 152, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[324613, 8522, 867, 12, 29, "Subsubsection"],
Cell[325483, 8536, 15137, 254, 302, "Text"],
Cell[CellGroupData[{
Cell[340645, 8794, 2085, 58, 121, "Input"],
Cell[342733, 8854, 237, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[343019, 8863, 906, 12, 29, "Subsubsection"],
Cell[343928, 8877, 5965, 102, 457, "Text"],
Cell[CellGroupData[{
Cell[349918, 8983, 1370, 38, 143, "Input"],
Cell[351291, 9023, 218, 4, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[351558, 9033, 963, 13, 29, "Subsubsection"],
Cell[352524, 9048, 1464, 42, 241, "Text"],
Cell[CellGroupData[{
Cell[354013, 9094, 659, 19, 77, "Input"],
Cell[354675, 9115, 76, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[354800, 9122, 1013, 14, 29, "Subsubsection"],
Cell[355816, 9138, 2044, 44, 495, "Text"],
Cell[357863, 9184, 2311, 52, 121, "Input"],
Cell[CellGroupData[{
Cell[360199, 9240, 1604, 39, 121, "Input"],
Cell[361806, 9281, 580, 9, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[362435, 9296, 908, 12, 29, "Subsubsection"],
Cell[363346, 9310, 1628, 28, 539, "Text"],
Cell[364977, 9340, 333, 8, 77, "Input"],
Cell[CellGroupData[{
Cell[365335, 9352, 564, 15, 99, "Input"],
Cell[365902, 9369, 481, 10, 23, "Message"],
Cell[366386, 9381, 482, 10, 23, "Message"],
Cell[366871, 9393, 481, 10, 23, "Message"],
Cell[367355, 9405, 533, 11, 23, "Message"],
Cell[367891, 9418, 72, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[368012, 9425, 958, 13, 29, "Subsubsection"],
Cell[368973, 9440, 5899, 99, 735, "Text"],
Cell[CellGroupData[{
Cell[374897, 9543, 1166, 33, 122, "Input"],
Cell[376066, 9578, 240, 4, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[376355, 9588, 811, 11, 29, "Subsubsection"],
Cell[377169, 9601, 30414, 530, 614, "Text"],
Cell[CellGroupData[{
Cell[407608, 10135, 1347, 37, 77, "Input"],
Cell[408958, 10174, 123, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[409130, 10182, 743, 10, 29, "Subsubsection"],
Cell[409876, 10194, 915, 22, 275, "Text"],
Cell[CellGroupData[{
Cell[410816, 10220, 1221, 38, 121, "Input"],
Cell[412040, 10260, 100, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[412189, 10267, 796, 11, 29, "Subsubsection"],
Cell[412988, 10280, 904, 23, 429, "Text"],
Cell[CellGroupData[{
Cell[413917, 10307, 3245, 83, 253, "Input"],
Cell[417165, 10392, 469, 10, 50, "Message"],
Cell[417637, 10404, 469, 10, 50, "Message"],
Cell[418109, 10416, 469, 10, 50, "Message"],
Cell[418581, 10428, 552, 11, 23, "Message"],
Cell[419136, 10441, 97, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[419282, 10448, 802, 11, 29, "Subsubsection"],
Cell[420087, 10461, 727, 15, 187, "Text"],
Cell[CellGroupData[{
Cell[420839, 10480, 1145, 34, 77, "Input"],
Cell[421987, 10516, 175, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[422211, 10525, 789, 11, 29, "Subsubsection"],
Cell[423003, 10538, 934, 20, 363, "Text"],
Cell[CellGroupData[{
Cell[423962, 10562, 515, 14, 55, "Input"],
Cell[424480, 10578, 74, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[424603, 10585, 734, 10, 29, "Subsubsection"],
Cell[425340, 10597, 3945, 120, 626, "Text"],
Cell[429288, 10719, 568, 17, 121, "Input"],
Cell[429859, 10738, 2529, 63, 209, "Input"],
Cell[CellGroupData[{
Cell[432413, 10805, 361, 11, 32, "Input"],
Cell[432777, 10818, 120, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[432946, 10826, 701, 9, 29, "Subsubsection"],
Cell[433650, 10837, 979, 25, 187, "Text"],
Cell[CellGroupData[{
Cell[434654, 10866, 237, 7, 32, "Input"],
Cell[434894, 10875, 102, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[435045, 10882, 741, 10, 29, "Subsubsection"],
Cell[435789, 10894, 1520, 31, 297, "Text"],
Cell[437312, 10927, 313, 8, 99, "Input"],
Cell[CellGroupData[{
Cell[437650, 10939, 2123, 58, 187, "Input"],
Cell[439776, 10999, 265, 4, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[440090, 11009, 746, 10, 29, "Subsubsection"],
Cell[440839, 11021, 1615, 42, 253, "Text"],
Cell[442457, 11065, 330, 8, 77, "Input"],
Cell[CellGroupData[{
Cell[442812, 11077, 306, 8, 32, "Input"],
Cell[443121, 11087, 166, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[443336, 11095, 798, 11, 29, "Subsubsection"],
Cell[444137, 11108, 866, 18, 209, "Text"],
Cell[CellGroupData[{
Cell[445028, 11130, 693, 20, 32, "Input"],
Cell[445724, 11152, 3348, 97, 224, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[449109, 11254, 325, 9, 32, "Input"],
Cell[449437, 11265, 153, 2, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[449651, 11274, 295, 4, 36, "Subsection"],
Cell[CellGroupData[{
Cell[449971, 11282, 892, 12, 35, "Subsubsection"],
Cell[450866, 11296, 4525, 126, 822, "Text"],
Cell[CellGroupData[{
Cell[455416, 11426, 958, 28, 55, "Input"],
Cell[456377, 11456, 130, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[456556, 11464, 844, 11, 29, "Subsubsection"],
Cell[457403, 11477, 1154, 21, 363, "Text"],
Cell[458560, 11500, 430, 12, 99, "Input"],
Cell[CellGroupData[{
Cell[459015, 11516, 585, 14, 32, "Input"],
Cell[459603, 11532, 192, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[459844, 11541, 902, 12, 29, "Subsubsection"],
Cell[460749, 11555, 1792, 32, 583, "Text"],
Cell[CellGroupData[{
Cell[462566, 11591, 727, 21, 99, "Input"],
Cell[463296, 11614, 141, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[463474, 11621, 2811, 69, 231, "Input"],
Cell[466288, 11692, 178, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[466503, 11702, 270, 7, 32, "Input"],
Cell[466776, 11711, 83, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[466908, 11718, 995, 13, 29, "Subsubsection"],
Cell[467906, 11733, 1519, 43, 253, "Text"],
Cell[469428, 11778, 633, 20, 56, "Input"],
Cell[CellGroupData[{
Cell[470086, 11802, 775, 20, 77, "Input"],
Cell[470864, 11824, 220, 4, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[471133, 11834, 952, 13, 29, "Subsubsection"],
Cell[472088, 11849, 1698, 34, 363, "Text"],
Cell[473789, 11885, 279, 7, 55, "Input"],
Cell[CellGroupData[{
Cell[474093, 11896, 569, 17, 77, "Input"],
Cell[474665, 11915, 98, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[474812, 11922, 1003, 13, 29, "Subsubsection"],
Cell[475818, 11937, 1324, 25, 385, "Text"],
Cell[CellGroupData[{
Cell[477167, 11966, 971, 30, 55, "Input"],
Cell[478141, 11998, 171, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[478361, 12007, 984, 13, 29, "Subsubsection"],
Cell[479348, 12022, 19116, 355, 995, "Text"],
Cell[498467, 12379, 408, 10, 77, "Input"],
Cell[CellGroupData[{
Cell[498900, 12393, 885, 24, 143, "Input"],
Cell[499788, 12419, 146, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[499983, 12427, 949, 13, 29, "Subsubsection"],
Cell[500935, 12442, 1351, 45, 309, "Text"],
Cell[CellGroupData[{
Cell[502311, 12491, 362, 11, 32, "Input"],
Cell[502676, 12504, 97, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[502822, 12511, 975, 13, 29, "Subsubsection"],
Cell[503800, 12526, 71570, 1209, 1383, "Text"],
Cell[CellGroupData[{
Cell[575395, 13739, 1166, 32, 77, "Input"],
Cell[576564, 13773, 292, 5, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[576905, 13784, 996, 13, 29, "Subsubsection"],
Cell[577904, 13799, 965, 22, 241, "Text"],
Cell[578872, 13823, 3683, 90, 143, "Input"],
Cell[CellGroupData[{
Cell[582580, 13917, 1235, 32, 77, "Input"],
Cell[583818, 13951, 447, 6, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[584314, 13963, 866, 12, 29, "Subsubsection"],
Cell[585183, 13977, 1282, 35, 715, "Text"],
Cell[CellGroupData[{
Cell[586490, 14016, 1530, 41, 231, "Input"],
Cell[588023, 14059, 130, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[588202, 14067, 814, 11, 29, "Subsubsection"],
Cell[589019, 14080, 963, 21, 385, "Text"],
Cell[CellGroupData[{
Cell[590007, 14105, 995, 28, 99, "Input"],
Cell[591005, 14135, 220, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[591274, 14144, 838, 11, 29, "Subsubsection"],
Cell[592115, 14157, 1018, 22, 322, "Text"],
Cell[CellGroupData[{
Cell[593158, 14183, 625, 15, 32, "Input"],
Cell[593786, 14200, 250, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[594085, 14209, 898, 12, 29, "Subsubsection"],
Cell[594986, 14223, 7956, 159, 399, "Text"],
Cell[CellGroupData[{
Cell[602967, 14386, 733, 23, 55, "Input"],
Cell[603703, 14411, 152, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[603904, 14419, 949, 13, 29, "Subsubsection"],
Cell[604856, 14434, 1139, 19, 385, "Text"],
Cell[CellGroupData[{
Cell[606020, 14457, 887, 27, 77, "Input"],
Cell[606910, 14486, 121, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[607080, 14494, 848, 11, 29, "Subsubsection"],
Cell[607931, 14507, 6245, 132, 566, "Text"],
Cell[CellGroupData[{
Cell[614201, 14643, 786, 23, 55, "Input"],
Cell[614990, 14668, 153, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[615192, 14676, 900, 12, 29, "Subsubsection"],
Cell[616095, 14690, 6277, 131, 303, "Text"],
Cell[CellGroupData[{
Cell[622397, 14825, 405, 11, 32, "Input"],
Cell[622805, 14838, 108, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[622962, 14845, 944, 13, 29, "Subsubsection"],
Cell[623909, 14860, 420, 8, 143, "Text"],
Cell[CellGroupData[{
Cell[624354, 14872, 1274, 34, 165, "Input"],
Cell[625631, 14908, 98, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[625778, 14915, 839, 11, 29, "Subsubsection"],
Cell[626620, 14928, 1158, 35, 209, "Text"],
Cell[CellGroupData[{
Cell[627803, 14967, 1149, 33, 77, "Input"],
Cell[628955, 15002, 157, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[629161, 15010, 889, 12, 29, "Subsubsection"],
Cell[630053, 15024, 1299, 41, 143, "Text"],
Cell[CellGroupData[{
Cell[631377, 15069, 404, 13, 32, "Input"],
Cell[631784, 15084, 77, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[631910, 15091, 942, 13, 29, "Subsubsection"],
Cell[632855, 15106, 999, 19, 341, "Text"],
Cell[CellGroupData[{
Cell[633879, 15129, 1086, 31, 99, "Input"],
Cell[634968, 15162, 195, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[635212, 15171, 992, 13, 29, "Subsubsection"],
Cell[636207, 15186, 3602, 120, 525, "Text"],
Cell[CellGroupData[{
Cell[639834, 15310, 1288, 35, 143, "Input"],
Cell[641125, 15347, 141, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[641315, 15355, 895, 12, 29, "Subsubsection"],
Cell[642213, 15369, 1528, 51, 187, "Text"],
Cell[CellGroupData[{
Cell[643766, 15424, 502, 14, 32, "Input"],
Cell[644271, 15440, 221, 4, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[644541, 15450, 838, 11, 29, "Subsubsection"],
Cell[645382, 15463, 1477, 43, 495, "Text"],
Cell[CellGroupData[{
Cell[646884, 15510, 296, 7, 32, "Input"],
Cell[647183, 15519, 98, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[647330, 15526, 888, 12, 29, "Subsubsection"],
Cell[648221, 15540, 1368, 34, 209, "Text"],
Cell[CellGroupData[{
Cell[649614, 15578, 1815, 47, 165, "Input"],
Cell[651432, 15627, 270, 4, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[651763, 15638, 344, 5, 36, "Subsection"],
Cell[CellGroupData[{
Cell[652132, 15647, 1032, 14, 35, "Subsubsection"],
Cell[653167, 15663, 18019, 299, 654, "Text"],
Cell[CellGroupData[{
Cell[671211, 15966, 2372, 71, 121, "Input"],
Cell[673586, 16039, 74, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[673709, 16046, 977, 13, 29, "Subsubsection"],
Cell[674689, 16061, 971, 19, 473, "Text"],
Cell[CellGroupData[{
Cell[675685, 16084, 1476, 45, 143, "Input"],
Cell[677164, 16131, 99, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[677312, 16138, 1045, 14, 29, "Subsubsection"],
Cell[678360, 16154, 56148, 924, 860, "Text"],
Cell[CellGroupData[{
Cell[734533, 17082, 2451, 69, 165, "Input"],
Cell[736987, 17153, 80, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[737116, 17160, 943, 13, 29, "Subsubsection"],
Cell[738062, 17175, 585, 12, 231, "Text"],
Cell[CellGroupData[{
Cell[738672, 17191, 1163, 33, 143, "Input"],
Cell[739838, 17226, 198, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[740085, 17235, 1007, 13, 29, "Subsubsection"],
Cell[741095, 17250, 858, 17, 341, "Text"],
Cell[CellGroupData[{
Cell[741978, 17271, 718, 21, 121, "Input"],
Cell[742699, 17294, 75, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[742823, 17301, 895, 12, 29, "Subsubsection"],
Cell[743721, 17315, 951, 25, 209, "Text"],
Cell[CellGroupData[{
Cell[744697, 17344, 1026, 28, 55, "Input"],
Cell[745726, 17374, 241, 4, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[746016, 17384, 944, 13, 29, "Subsubsection"],
Cell[746963, 17399, 526, 12, 168, "Text"],
Cell[CellGroupData[{
Cell[747514, 17415, 1703, 46, 143, "Input"],
Cell[749220, 17463, 144, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[749413, 17471, 987, 13, 29, "Subsubsection"],
Cell[750403, 17486, 1121, 29, 253, "Text"],
Cell[CellGroupData[{
Cell[751549, 17519, 658, 19, 77, "Input"],
Cell[752210, 17540, 127, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[752386, 17548, 944, 13, 29, "Subsubsection"],
Cell[753333, 17563, 1607, 53, 187, "Text"],
Cell[CellGroupData[{
Cell[754965, 17620, 659, 19, 55, "Input"],
Cell[755627, 17641, 110, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[755786, 17648, 985, 13, 29, "Subsubsection"],
Cell[756774, 17663, 1205, 32, 206, "Text"],
Cell[CellGroupData[{
Cell[758004, 17699, 957, 31, 121, "Input"],
Cell[758964, 17732, 73, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[759086, 17739, 1039, 14, 29, "Subsubsection"],
Cell[760128, 17755, 1018, 25, 206, "Text"],
Cell[CellGroupData[{
Cell[761171, 17784, 596, 17, 55, "Input"],
Cell[761770, 17803, 171, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[761990, 17811, 1093, 15, 29, "Subsubsection"],
Cell[763086, 17828, 4067, 146, 497, "Text"],
Cell[CellGroupData[{
Cell[767178, 17978, 207, 5, 32, "Input"],
Cell[767388, 17985, 188, 6, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[767613, 17996, 434, 12, 55, "Input"],
Cell[768050, 18010, 846, 27, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[768933, 18042, 1194, 33, 99, "Input"],
Cell[770130, 18077, 202, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[770381, 18086, 1046, 14, 29, "Subsubsection"],
Cell[771430, 18102, 4899, 92, 512, "Text"],
Cell[CellGroupData[{
Cell[776354, 18198, 1061, 31, 99, "Input"],
Cell[777418, 18231, 3122, 98, 186, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[780577, 18334, 532, 16, 32, "Input"],
Cell[781112, 18352, 184, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[781345, 18361, 1086, 15, 29, "Subsubsection"],
Cell[782434, 18378, 10254, 172, 477, "Text"],
Cell[CellGroupData[{
Cell[792713, 18554, 474, 14, 32, "Input"],
Cell[793190, 18570, 489, 17, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[793716, 18592, 419, 13, 32, "Input"],
Cell[794138, 18607, 418, 14, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[794593, 18626, 909, 25, 77, "Input"],
Cell[795505, 18653, 174, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[795728, 18662, 1148, 15, 29, "Subsubsection"],
Cell[796879, 18679, 3083, 106, 416, "Text"],
Cell[CellGroupData[{
Cell[799987, 18789, 376, 13, 32, "Input"],
Cell[800366, 18804, 859, 29, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[801262, 18838, 1473, 41, 99, "Input"],
Cell[802738, 18881, 204, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[802991, 18890, 1231, 18, 29, "Subsubsection"],
Cell[804225, 18910, 920, 17, 278, "Text"],
Cell[CellGroupData[{
Cell[805170, 18931, 1883, 57, 99, "Input"],
Cell[807056, 18990, 128, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[807233, 18998, 1044, 14, 29, "Subsubsection"],
Cell[808280, 19014, 245, 5, 55, "Text"],
Cell[CellGroupData[{
Cell[808550, 19023, 1476, 44, 121, "Input"],
Cell[810029, 19069, 290, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[810356, 19081, 140, 2, 32, "Input"],
Cell[810499, 19085, 76, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[810624, 19092, 932, 14, 29, "Subsubsection"],
Cell[811559, 19108, 81557, 1418, 966, "Text"],
Cell[CellGroupData[{
Cell[893141, 20530, 2295, 68, 187, "Input"],
Cell[895439, 20600, 94, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[895582, 20607, 888, 13, 29, "Subsubsection"],
Cell[896473, 20622, 709, 15, 190, "Text"],
Cell[CellGroupData[{
Cell[897207, 20641, 397, 11, 32, "Input"],
Cell[897607, 20654, 71, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[897715, 20660, 384, 10, 32, "Input"],
Cell[898102, 20672, 166, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[898305, 20679, 418, 11, 32, "Input"],
Cell[898726, 20692, 120, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[898883, 20699, 519, 13, 32, "Input"],
Cell[899405, 20714, 217, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[899659, 20722, 1086, 30, 55, "Input"],
Cell[900748, 20754, 341, 5, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[901138, 20765, 924, 12, 29, "Subsubsection"],
Cell[902065, 20779, 1151, 41, 121, "Text"],
Cell[CellGroupData[{
Cell[903241, 20824, 2343, 67, 231, "Input"],
Cell[905587, 20893, 78, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[905714, 20900, 956, 13, 29, "Subsubsection"],
Cell[906673, 20915, 7292, 124, 536, "Text"],
Cell[913968, 21041, 467, 15, 32, "Input"],
Cell[CellGroupData[{
Cell[914460, 21060, 1369, 44, 77, "Input"],
Cell[915832, 21106, 78, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[915959, 21113, 919, 13, 29, "Subsubsection"],
Cell[916881, 21128, 927, 17, 344, "Text"],
Cell[CellGroupData[{
Cell[917833, 21149, 801, 24, 55, "Input"],
Cell[918637, 21175, 157, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[918843, 21183, 961, 13, 29, "Subsubsection"],
Cell[919807, 21198, 2761, 84, 516, "Text"],
Cell[CellGroupData[{
Cell[922593, 21286, 2228, 69, 187, "Input"],
Cell[924824, 21357, 77, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[924950, 21364, 1044, 16, 53, "Subsubsection"],
Cell[925997, 21382, 8360, 204, 803, "Text"],
Cell[CellGroupData[{
Cell[934382, 21590, 1404, 44, 99, "Input"],
Cell[935789, 21636, 95, 2, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[935945, 21645, 390, 5, 36, "Subsection"],
Cell[CellGroupData[{
Cell[936360, 21654, 1083, 16, 35, "Subsubsection"],
Cell[937446, 21672, 6010, 101, 700, "Text"],
Cell[CellGroupData[{
Cell[943481, 21777, 1537, 48, 165, "Input"],
Cell[945021, 21827, 93, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[945163, 21834, 1117, 15, 29, "Subsubsection"],
Cell[946283, 21851, 18406, 325, 1049, "Text"],
Cell[964692, 22178, 1141, 34, 121, "Input"],
Cell[CellGroupData[{
Cell[965858, 22216, 387, 11, 32, "Input"],
Cell[966248, 22229, 123, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[966420, 22237, 1399, 26, 29, "Subsubsection"],
Cell[967822, 22265, 876, 19, 300, "Text"],
Cell[CellGroupData[{
Cell[968723, 22288, 845, 28, 55, "Input"],
Cell[969571, 22318, 74, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[969694, 22325, 1180, 18, 53, "Subsubsection"],
Cell[970877, 22345, 1187, 22, 341, "Text"],
Cell[CellGroupData[{
Cell[972089, 22371, 336, 11, 32, "Input"],
Cell[972428, 22384, 81, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[972558, 22391, 1149, 15, 29, "Subsubsection"],
Cell[973710, 22408, 1609, 38, 651, "Text"],
Cell[975322, 22448, 935, 28, 99, "Input"],
Cell[CellGroupData[{
Cell[976282, 22480, 175, 5, 32, "Input"],
Cell[976460, 22487, 77, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[976586, 22494, 1138, 15, 29, "Subsubsection"],
Cell[977727, 22511, 304, 10, 187, "Text"],
Cell[CellGroupData[{
Cell[978056, 22525, 642, 19, 55, "Input"],
Cell[978701, 22546, 94, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[978832, 22552, 2544, 71, 209, "Input"],
Cell[981379, 22625, 169, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[981597, 22633, 988, 13, 29, "Subsubsection"],
Cell[982588, 22648, 897, 22, 385, "Text"],
Cell[CellGroupData[{
Cell[983510, 22674, 870, 26, 77, "Input"],
Cell[984383, 22702, 117, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[984549, 22709, 1016, 16, 53, "Subsubsection"],
Cell[985568, 22727, 222, 4, 55, "Text"],
Cell[CellGroupData[{
Cell[985815, 22735, 830, 25, 55, "Input"],
Cell[986648, 22762, 107, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[986804, 22769, 980, 13, 29, "Subsubsection"],
Cell[987787, 22784, 493, 17, 319, "Text"],
Cell[CellGroupData[{
Cell[988305, 22805, 991, 29, 143, "Input"],
Cell[989299, 22836, 492, 10, 23, "Message"],
Cell[989794, 22848, 1126, 28, 99, "Output"]
}, Open  ]],
Cell[990935, 22879, 1316, 39, 77, "Input"],
Cell[CellGroupData[{
Cell[992276, 22922, 1448, 41, 121, "Input"],
Cell[993727, 22965, 76, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[993852, 22972, 1034, 14, 29, "Subsubsection"],
Cell[994889, 22988, 624, 13, 143, "Text"],
Cell[CellGroupData[{
Cell[995538, 23005, 1421, 42, 143, "Input"],
Cell[996962, 23049, 96, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[997107, 23056, 1067, 16, 53, "Subsubsection"],
Cell[998177, 23074, 548, 13, 278, "Text"],
Cell[CellGroupData[{
Cell[998750, 23091, 827, 29, 99, "Input"],
Cell[999580, 23122, 81, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[999710, 23129, 1053, 16, 53, "Subsubsection"],
Cell[1000766, 23147, 1513, 48, 184, "Text"],
Cell[CellGroupData[{
Cell[1002304, 23199, 2346, 66, 165, "Input"],
Cell[1004653, 23267, 102, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1004804, 23274, 971, 14, 29, "Subsubsection"],
Cell[1005778, 23290, 207, 4, 55, "Text"],
Cell[CellGroupData[{
Cell[1006010, 23298, 1050, 33, 77, "Input"],
Cell[1007063, 23333, 87, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1007199, 23340, 1017, 16, 53, "Subsubsection"],
Cell[1008219, 23358, 5736, 98, 496, "Text"],
Cell[CellGroupData[{
Cell[1013980, 23460, 313, 9, 32, "Input"],
Cell[1014296, 23471, 125, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1014470, 23479, 1083, 17, 53, "Subsubsection"],
Cell[1015556, 23498, 5978, 103, 562, "Text"],
Cell[CellGroupData[{
Cell[1021559, 23605, 479, 13, 32, "Input"],
Cell[1022041, 23620, 171, 2, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1022273, 23629, 390, 5, 36, "Subsection"],
Cell[CellGroupData[{
Cell[1022688, 23638, 981, 13, 35, "Subsubsection"],
Cell[1023672, 23653, 569, 12, 143, "Text"],
Cell[1024244, 23667, 2215, 69, 143, "Input"],
Cell[CellGroupData[{
Cell[1026484, 23740, 345, 10, 32, "Input"],
Cell[1026832, 23752, 131, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1027012, 23760, 952, 13, 29, "Subsubsection"],
Cell[1027967, 23775, 441, 10, 55, "Text"],
Cell[CellGroupData[{
Cell[1028433, 23789, 392, 12, 55, "Input"],
Cell[1028828, 23803, 96, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1028973, 23810, 1032, 14, 29, "Subsubsection"],
Cell[1030008, 23826, 2361, 54, 605, "Text"],
Cell[CellGroupData[{
Cell[1032394, 23884, 181, 6, 32, "Input"],
Cell[1032578, 23892, 76, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1032691, 23898, 461, 14, 32, "Input"],
Cell[1033155, 23914, 105, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1033309, 23921, 993, 13, 29, "Subsubsection"],
Cell[1034305, 23936, 1910, 48, 451, "Text"],
Cell[CellGroupData[{
Cell[1036240, 23988, 1080, 30, 143, "Input"],
Cell[1037323, 24020, 101, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1037473, 24027, 1030, 14, 29, "Subsubsection"],
Cell[1038506, 24043, 1472, 48, 979, "Text"],
Cell[1039981, 24093, 1243, 25, 539, "Input"],
Cell[CellGroupData[{
Cell[1041249, 24122, 202, 5, 32, "Input"],
Cell[1041454, 24129, 71, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1041562, 24135, 2248, 64, 209, "Input"],
Cell[1043813, 24201, 640, 13, 41, "Message"],
Cell[1044456, 24216, 280, 4, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1044785, 24226, 1095, 15, 29, "Subsubsection"],
Cell[1045883, 24243, 2560, 68, 522, "Text"],
Cell[1048446, 24313, 138, 3, 32, "Input"],
Cell[1048587, 24318, 871, 28, 55, "Input"],
Cell[1049461, 24348, 327, 9, 77, "Input"],
Cell[CellGroupData[{
Cell[1049813, 24361, 152, 4, 32, "Input"],
Cell[1049968, 24367, 73, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1050078, 24373, 326, 9, 55, "Input"],
Cell[1050407, 24384, 74, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1050518, 24390, 1849, 57, 121, "Input"],
Cell[1052370, 24449, 76, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1052495, 24456, 979, 13, 29, "Subsubsection"],
Cell[1053477, 24471, 603, 12, 187, "Text"],
Cell[CellGroupData[{
Cell[1054105, 24487, 504, 15, 32, "Input"],
Cell[1054612, 24504, 127, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1054788, 24512, 1054, 14, 29, "Subsubsection"],
Cell[1055845, 24528, 1591, 50, 233, "Text"],
Cell[1057439, 24580, 470, 15, 55, "Input"],
Cell[CellGroupData[{
Cell[1057934, 24599, 305, 7, 32, "Input"],
Cell[1058242, 24608, 173, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1058464, 24616, 1097, 15, 29, "Subsubsection"],
Cell[1059564, 24633, 1652, 53, 143, "Text"],
Cell[CellGroupData[{
Cell[1061241, 24690, 687, 22, 32, "Input"],
Cell[1061931, 24714, 102, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1062082, 24721, 1032, 14, 29, "Subsubsection"],
Cell[1063117, 24737, 929, 21, 385, "Text"],
Cell[CellGroupData[{
Cell[1064071, 24762, 743, 20, 55, "Input"],
Cell[1064817, 24784, 198, 3, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1065064, 24793, 1087, 15, 29, "Subsubsection"],
Cell[1066154, 24810, 375, 9, 99, "Text"],
Cell[CellGroupData[{
Cell[1066554, 24823, 1537, 49, 121, "Input"],
Cell[1068094, 24874, 84, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1068227, 24881, 1138, 17, 29, "Subsubsection"],
Cell[1069368, 24900, 1435, 49, 134, "Text"],
Cell[1070806, 24951, 361, 11, 47, "Input"],
Cell[CellGroupData[{
Cell[1071192, 24966, 384, 12, 32, "Input"],
Cell[1071579, 24980, 107, 1, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1071747, 24988, 439, 6, 36, "Subsection"],
Cell[CellGroupData[{
Cell[1072211, 24998, 1078, 15, 35, "Subsubsection"],
Cell[1073292, 25015, 19602, 326, 608, "Text"],
Cell[CellGroupData[{
Cell[1092919, 25345, 89, 2, 32, "Input"],
Cell[1093011, 25349, 70, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1093118, 25355, 106, 3, 32, "Input"],
Cell[1093227, 25360, 79, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1093343, 25366, 847, 28, 77, "Input"],
Cell[1094193, 25396, 103, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1094345, 25403, 1051, 14, 29, "Subsubsection"],
Cell[1095399, 25419, 1048, 18, 431, "Text"],
Cell[CellGroupData[{
Cell[1096472, 25441, 497, 14, 55, "Input"],
Cell[1096972, 25457, 132, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1097153, 25465, 996, 13, 29, "Subsubsection"],
Cell[1098152, 25480, 824, 18, 209, "Text"],
Cell[CellGroupData[{
Cell[1099001, 25502, 569, 17, 55, "Input"],
Cell[1099573, 25521, 100, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1099722, 25528, 883, 12, 29, "Subsubsection"],
Cell[1100608, 25542, 517, 12, 187, "Text"],
Cell[1101128, 25556, 905, 26, 77, "Input"],
Cell[CellGroupData[{
Cell[1102058, 25586, 428, 12, 32, "Input"],
Cell[1102489, 25600, 117, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1102655, 25607, 840, 11, 29, "Subsubsection"],
Cell[1103498, 25620, 224, 4, 55, "Text"],
Cell[CellGroupData[{
Cell[1103747, 25628, 339, 6, 32, "Input"],
Cell[1104089, 25636, 223, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1104349, 25644, 2279, 52, 121, "Input"],
Cell[1106631, 25698, 943, 14, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1107623, 25718, 901, 12, 29, "Subsubsection"],
Cell[1108527, 25732, 1659, 46, 495, "Text"],
Cell[CellGroupData[{
Cell[1110211, 25782, 502, 15, 32, "Input"],
Cell[1110716, 25799, 102, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1110867, 25806, 938, 13, 29, "Subsubsection"],
Cell[1111808, 25821, 1908, 61, 448, "Text"],
Cell[CellGroupData[{
Cell[1113741, 25886, 658, 19, 55, "Input"],
Cell[1114402, 25907, 15108, 232, 444, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1129547, 26144, 279, 6, 32, "Input"],
Cell[1129829, 26152, 155, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1130033, 26160, 942, 13, 29, "Subsubsection"],
Cell[1130978, 26175, 872, 26, 121, "Text"],
Cell[CellGroupData[{
Cell[1131875, 26205, 660, 19, 77, "Input"],
Cell[1132538, 26226, 79, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1132666, 26233, 888, 12, 29, "Subsubsection"],
Cell[1133557, 26247, 706, 23, 407, "Text"],
Cell[CellGroupData[{
Cell[1134288, 26274, 809, 25, 77, "Input"],
Cell[1135100, 26301, 82, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1135231, 26308, 939, 13, 29, "Subsubsection"],
Cell[1136173, 26323, 2572, 47, 279, "Text"],
Cell[CellGroupData[{
Cell[1138770, 26374, 2171, 58, 275, "Input"],
Cell[1140944, 26434, 84, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1141077, 26441, 1111, 20, 29, "Subsubsection"],
Cell[1142191, 26463, 655, 16, 143, "Text"],
Cell[CellGroupData[{
Cell[1142871, 26483, 493, 14, 55, "Input"],
Cell[1143367, 26499, 75, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1143491, 26506, 999, 13, 29, "Subsubsection"],
Cell[1144493, 26521, 895, 17, 319, "Text"],
Cell[CellGroupData[{
Cell[1145413, 26542, 685, 21, 55, "Input"],
Cell[1146101, 26565, 672, 21, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1146810, 26591, 913, 29, 55, "Input"],
Cell[1147726, 26622, 94, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1147857, 26628, 69, 1, 32, "Input"],
Cell[1147929, 26631, 70, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1148048, 26638, 947, 13, 29, "Subsubsection"],
Cell[1148998, 26653, 1141, 33, 165, "Text"],
Cell[CellGroupData[{
Cell[1150164, 26690, 1142, 32, 121, "Input"],
Cell[1151309, 26724, 145, 2, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1151515, 26733, 390, 5, 36, "Subsection"],
Cell[CellGroupData[{
Cell[1151930, 26742, 1086, 15, 35, "Subsubsection"],
Cell[1153019, 26759, 2516, 74, 683, "Text"],
Cell[1155538, 26835, 1514, 47, 231, "Input"],
Cell[CellGroupData[{
Cell[1157077, 26886, 802, 24, 99, "Input"],
Cell[1157882, 26912, 87, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1158018, 26919, 1075, 16, 29, "Subsubsection"],
Cell[1159096, 26937, 1102, 33, 127, "Text"],
Cell[CellGroupData[{
Cell[1160223, 26974, 963, 30, 55, "Input"],
Cell[1161189, 27006, 82, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1161320, 27013, 1090, 15, 29, "Subsubsection"],
Cell[1162413, 27030, 1169, 26, 253, "Text"],
Cell[CellGroupData[{
Cell[1163607, 27060, 1284, 38, 165, "Input"],
Cell[1164894, 27100, 160, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1165103, 27108, 1100, 15, 29, "Subsubsection"],
Cell[1166206, 27125, 932, 30, 143, "Text"],
Cell[CellGroupData[{
Cell[1167163, 27159, 376, 13, 32, "Input"],
Cell[1167542, 27174, 478, 16, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1168057, 27195, 664, 21, 66, "Input"],
Cell[1168724, 27218, 4915, 92, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1173676, 27315, 1125, 30, 104, "Input"],
Cell[1174804, 27347, 250, 4, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1175103, 27357, 979, 13, 29, "Subsubsection"],
Cell[1176085, 27372, 900, 16, 231, "Text"],
Cell[CellGroupData[{
Cell[1177010, 27392, 991, 30, 77, "Input"],
Cell[1178004, 27424, 78, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1178131, 27431, 1108, 15, 29, "Subsubsection"],
Cell[1179242, 27448, 287, 6, 99, "Text"],
Cell[CellGroupData[{
Cell[1179554, 27458, 1168, 32, 143, "Input"],
Cell[1180725, 27492, 85, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1180859, 27499, 1025, 14, 29, "Subsubsection"],
Cell[1181887, 27515, 535, 14, 58, "Text"],
Cell[CellGroupData[{
Cell[1182447, 27533, 770, 23, 55, "Input"],
Cell[1183220, 27558, 134, 2, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1183415, 27567, 488, 7, 36, "Subsection"],
Cell[CellGroupData[{
Cell[1183928, 27578, 1033, 14, 35, "Subsubsection"],
Cell[1184964, 27594, 3136, 68, 519, "Text"],
Cell[CellGroupData[{
Cell[1188125, 27666, 1443, 41, 99, "Input"],
Cell[1189571, 27709, 104, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1189724, 27716, 1080, 15, 29, "Subsubsection"],
Cell[1190807, 27733, 935, 20, 341, "Text"],
Cell[CellGroupData[{
Cell[1191767, 27757, 1269, 35, 143, "Input"],
Cell[1193039, 27794, 531, 11, 41, "Message"],
Cell[1193573, 27807, 174, 2, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1193808, 27816, 534, 7, 36, "Subsection"],
Cell[CellGroupData[{
Cell[1194367, 27827, 1096, 15, 35, "Subsubsection"],
Cell[1195466, 27844, 3225, 92, 561, "Text"],
Cell[CellGroupData[{
Cell[1198716, 27940, 718, 22, 55, "Input"],
Cell[1199437, 27964, 221, 5, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1199695, 27974, 786, 22, 99, "Input"],
Cell[1200484, 27998, 107, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1200640, 28005, 1189, 16, 29, "Subsubsection"],
Cell[1201832, 28023, 933, 17, 297, "Text"],
Cell[CellGroupData[{
Cell[1202790, 28044, 205, 5, 32, "Input"],
Cell[1202998, 28051, 96, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1203131, 28057, 1011, 28, 121, "Input"],
Cell[1204145, 28087, 120, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1204314, 28095, 1140, 15, 29, "Subsubsection"],
Cell[1205457, 28112, 1171, 27, 275, "Text"],
Cell[1206631, 28141, 797, 21, 77, "Input"],
Cell[CellGroupData[{
Cell[1207453, 28166, 847, 25, 55, "Input"],
Cell[1208303, 28193, 88, 1, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1208452, 28201, 488, 7, 36, "Subsection"],
Cell[CellGroupData[{
Cell[1208965, 28212, 1022, 14, 35, "Subsubsection"],
Cell[1209990, 28228, 2895, 78, 561, "Text"],
Cell[CellGroupData[{
Cell[1212910, 28310, 152, 3, 32, "Input"],
Cell[1213065, 28315, 76, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1213190, 28322, 1096, 15, 29, "Subsubsection"],
Cell[1214289, 28339, 2880, 60, 267, "Text"],
Cell[CellGroupData[{
Cell[1217194, 28403, 1842, 56, 232, "Input"],
Cell[1219039, 28461, 154, 2, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1219242, 28469, 1134, 15, 29, "Subsubsection"],
Cell[1220379, 28486, 178135, 3031, 1287, "Text"],
Cell[CellGroupData[{
Cell[1398539, 31521, 1551, 42, 143, "Input"],
Cell[1400093, 31565, 77, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1400219, 31572, 1155, 15, 29, "Subsubsection"],
Cell[1401377, 31589, 1717, 54, 299, "Text"],
Cell[CellGroupData[{
Cell[1403119, 31647, 1188, 33, 165, "Input"],
Cell[1404310, 31682, 128, 1, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1404499, 31690, 534, 7, 36, "Subsection"],
Cell[CellGroupData[{
Cell[1405058, 31701, 1079, 15, 35, "Subsubsection"],
Cell[1406140, 31718, 3158, 71, 499, "Text"],
Cell[1409301, 31791, 1167, 18, 385, "Input"],
Cell[CellGroupData[{
Cell[1410493, 31813, 793, 25, 99, "Input"],
Cell[1411289, 31840, 74, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1411412, 31847, 1130, 15, 29, "Subsubsection"],
Cell[1412545, 31864, 905, 23, 165, "Text"],
Cell[CellGroupData[{
Cell[1413475, 31891, 721, 23, 77, "Input"],
Cell[1414199, 31916, 87, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1414335, 31923, 1154, 15, 29, "Subsubsection"],
Cell[1415492, 31940, 902, 19, 275, "Text"],
Cell[CellGroupData[{
Cell[1416419, 31963, 836, 26, 77, "Input"],
Cell[1417258, 31991, 83, 1, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1417402, 31999, 533, 7, 36, "Subsection"],
Cell[CellGroupData[{
Cell[1417960, 32010, 1094, 15, 35, "Subsubsection"],
Cell[1419057, 32027, 319, 7, 121, "Text"],
Cell[CellGroupData[{
Cell[1419401, 32038, 815, 26, 99, "Input"],
Cell[1420219, 32066, 81, 1, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1420361, 32074, 582, 8, 36, "Subsection"],
Cell[CellGroupData[{
Cell[1420968, 32086, 1134, 15, 35, "Subsubsection"],
Cell[1422105, 32103, 612, 13, 209, "Text"],
Cell[CellGroupData[{
Cell[1422742, 32120, 673, 21, 77, "Input"],
Cell[1423418, 32143, 84, 1, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1423551, 32150, 1180, 16, 29, "Subsubsection"],
Cell[1424734, 32168, 1482, 30, 473, "Text"],
Cell[CellGroupData[{
Cell[1426241, 32202, 1345, 39, 143, "Input"],
Cell[1427589, 32243, 108, 1, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1427758, 32251, 631, 9, 36, "Subsection"],
Cell[CellGroupData[{
Cell[1428414, 32264, 1182, 16, 35, "Subsubsection"],
Cell[1429599, 32282, 320, 7, 121, "Text"],
Cell[CellGroupData[{
Cell[1429944, 32293, 1057, 30, 143, "Input"],
Cell[1431004, 32325, 94, 1, 32, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
